/*
 * Copyright (c) 2014. Vlad Ilyushchenko
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.nfsdb.thrift.model;

import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;
import org.apache.thrift.scheme.TupleScheme;

import java.util.*;

public class Trade2 implements org.apache.thrift.TBase<Trade2, Trade2._Fields>, java.io.Serializable, Cloneable {
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;

    static {
        Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<>(_Fields.class);
        tmpMap.put(_Fields.TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("timestamp", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
        tmpMap.put(_Fields.SYM, new org.apache.thrift.meta_data.FieldMetaData("sym", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
        tmpMap.put(_Fields.SIZE, new org.apache.thrift.meta_data.FieldMetaData("size", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP, new org.apache.thrift.meta_data.FieldMetaData("stop", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.COND, new org.apache.thrift.meta_data.FieldMetaData("cond", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.EX, new org.apache.thrift.meta_data.FieldMetaData("ex", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.STOP1, new org.apache.thrift.meta_data.FieldMetaData("stop1", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP2, new org.apache.thrift.meta_data.FieldMetaData("stop2", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP3, new org.apache.thrift.meta_data.FieldMetaData("stop3", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP4, new org.apache.thrift.meta_data.FieldMetaData("stop4", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP5, new org.apache.thrift.meta_data.FieldMetaData("stop5", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP6, new org.apache.thrift.meta_data.FieldMetaData("stop6", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP7, new org.apache.thrift.meta_data.FieldMetaData("stop7", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP8, new org.apache.thrift.meta_data.FieldMetaData("stop8", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP9, new org.apache.thrift.meta_data.FieldMetaData("stop9", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP10, new org.apache.thrift.meta_data.FieldMetaData("stop10", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP11, new org.apache.thrift.meta_data.FieldMetaData("stop11", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP12, new org.apache.thrift.meta_data.FieldMetaData("stop12", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP13, new org.apache.thrift.meta_data.FieldMetaData("stop13", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP14, new org.apache.thrift.meta_data.FieldMetaData("stop14", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP15, new org.apache.thrift.meta_data.FieldMetaData("stop15", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP16, new org.apache.thrift.meta_data.FieldMetaData("stop16", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP17, new org.apache.thrift.meta_data.FieldMetaData("stop17", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP18, new org.apache.thrift.meta_data.FieldMetaData("stop18", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP19, new org.apache.thrift.meta_data.FieldMetaData("stop19", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP20, new org.apache.thrift.meta_data.FieldMetaData("stop20", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP21, new org.apache.thrift.meta_data.FieldMetaData("stop21", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP22, new org.apache.thrift.meta_data.FieldMetaData("stop22", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP23, new org.apache.thrift.meta_data.FieldMetaData("stop23", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP24, new org.apache.thrift.meta_data.FieldMetaData("stop24", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP25, new org.apache.thrift.meta_data.FieldMetaData("stop25", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP35, new org.apache.thrift.meta_data.FieldMetaData("stop35", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP36, new org.apache.thrift.meta_data.FieldMetaData("stop36", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP37, new org.apache.thrift.meta_data.FieldMetaData("stop37", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP38, new org.apache.thrift.meta_data.FieldMetaData("stop38", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP39, new org.apache.thrift.meta_data.FieldMetaData("stop39", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP40, new org.apache.thrift.meta_data.FieldMetaData("stop40", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP41, new org.apache.thrift.meta_data.FieldMetaData("stop41", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP42, new org.apache.thrift.meta_data.FieldMetaData("stop42", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP43, new org.apache.thrift.meta_data.FieldMetaData("stop43", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP44, new org.apache.thrift.meta_data.FieldMetaData("stop44", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP45, new org.apache.thrift.meta_data.FieldMetaData("stop45", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP46, new org.apache.thrift.meta_data.FieldMetaData("stop46", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP47, new org.apache.thrift.meta_data.FieldMetaData("stop47", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP48, new org.apache.thrift.meta_data.FieldMetaData("stop48", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP49, new org.apache.thrift.meta_data.FieldMetaData("stop49", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP50, new org.apache.thrift.meta_data.FieldMetaData("stop50", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP51, new org.apache.thrift.meta_data.FieldMetaData("stop51", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP52, new org.apache.thrift.meta_data.FieldMetaData("stop52", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP53, new org.apache.thrift.meta_data.FieldMetaData("stop53", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP54, new org.apache.thrift.meta_data.FieldMetaData("stop54", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP55, new org.apache.thrift.meta_data.FieldMetaData("stop55", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP56, new org.apache.thrift.meta_data.FieldMetaData("stop56", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP57, new org.apache.thrift.meta_data.FieldMetaData("stop57", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP58, new org.apache.thrift.meta_data.FieldMetaData("stop58", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP59, new org.apache.thrift.meta_data.FieldMetaData("stop59", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP60, new org.apache.thrift.meta_data.FieldMetaData("stop60", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP61, new org.apache.thrift.meta_data.FieldMetaData("stop61", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP62, new org.apache.thrift.meta_data.FieldMetaData("stop62", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP63, new org.apache.thrift.meta_data.FieldMetaData("stop63", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP64, new org.apache.thrift.meta_data.FieldMetaData("stop64", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP65, new org.apache.thrift.meta_data.FieldMetaData("stop65", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP66, new org.apache.thrift.meta_data.FieldMetaData("stop66", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP67, new org.apache.thrift.meta_data.FieldMetaData("stop67", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP68, new org.apache.thrift.meta_data.FieldMetaData("stop68", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP69, new org.apache.thrift.meta_data.FieldMetaData("stop69", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP70, new org.apache.thrift.meta_data.FieldMetaData("stop70", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP71, new org.apache.thrift.meta_data.FieldMetaData("stop71", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP72, new org.apache.thrift.meta_data.FieldMetaData("stop72", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP73, new org.apache.thrift.meta_data.FieldMetaData("stop73", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP74, new org.apache.thrift.meta_data.FieldMetaData("stop74", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP75, new org.apache.thrift.meta_data.FieldMetaData("stop75", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP76, new org.apache.thrift.meta_data.FieldMetaData("stop76", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP77, new org.apache.thrift.meta_data.FieldMetaData("stop77", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP78, new org.apache.thrift.meta_data.FieldMetaData("stop78", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP79, new org.apache.thrift.meta_data.FieldMetaData("stop79", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP80, new org.apache.thrift.meta_data.FieldMetaData("stop80", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP81, new org.apache.thrift.meta_data.FieldMetaData("stop81", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP82, new org.apache.thrift.meta_data.FieldMetaData("stop82", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP83, new org.apache.thrift.meta_data.FieldMetaData("stop83", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP84, new org.apache.thrift.meta_data.FieldMetaData("stop84", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP85, new org.apache.thrift.meta_data.FieldMetaData("stop85", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP86, new org.apache.thrift.meta_data.FieldMetaData("stop86", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP87, new org.apache.thrift.meta_data.FieldMetaData("stop87", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP88, new org.apache.thrift.meta_data.FieldMetaData("stop88", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP89, new org.apache.thrift.meta_data.FieldMetaData("stop89", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP90, new org.apache.thrift.meta_data.FieldMetaData("stop90", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP91, new org.apache.thrift.meta_data.FieldMetaData("stop91", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP92, new org.apache.thrift.meta_data.FieldMetaData("stop92", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP93, new org.apache.thrift.meta_data.FieldMetaData("stop93", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP94, new org.apache.thrift.meta_data.FieldMetaData("stop94", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP95, new org.apache.thrift.meta_data.FieldMetaData("stop95", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP96, new org.apache.thrift.meta_data.FieldMetaData("stop96", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP97, new org.apache.thrift.meta_data.FieldMetaData("stop97", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP98, new org.apache.thrift.meta_data.FieldMetaData("stop98", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.STOP99, new org.apache.thrift.meta_data.FieldMetaData("stop99", org.apache.thrift.TFieldRequirementType.REQUIRED,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        metaDataMap = Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Trade2.class, metaDataMap);
    }

    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Trade2");
    private static final org.apache.thrift.protocol.TField TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("timestamp", org.apache.thrift.protocol.TType.I64, (short) 1);
    private static final org.apache.thrift.protocol.TField SYM_FIELD_DESC = new org.apache.thrift.protocol.TField("sym", org.apache.thrift.protocol.TType.STRING, (short) 2);
    private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.DOUBLE, (short) 3);
    private static final org.apache.thrift.protocol.TField SIZE_FIELD_DESC = new org.apache.thrift.protocol.TField("size", org.apache.thrift.protocol.TType.I32, (short) 4);
    private static final org.apache.thrift.protocol.TField STOP_FIELD_DESC = new org.apache.thrift.protocol.TField("stop", org.apache.thrift.protocol.TType.I32, (short) 5);
    private static final org.apache.thrift.protocol.TField COND_FIELD_DESC = new org.apache.thrift.protocol.TField("cond", org.apache.thrift.protocol.TType.STRING, (short) 6);
    private static final org.apache.thrift.protocol.TField EX_FIELD_DESC = new org.apache.thrift.protocol.TField("ex", org.apache.thrift.protocol.TType.STRING, (short) 7);
    private static final org.apache.thrift.protocol.TField STOP1_FIELD_DESC = new org.apache.thrift.protocol.TField("stop1", org.apache.thrift.protocol.TType.I32, (short) 8);
    private static final org.apache.thrift.protocol.TField STOP2_FIELD_DESC = new org.apache.thrift.protocol.TField("stop2", org.apache.thrift.protocol.TType.I32, (short) 33);
    private static final org.apache.thrift.protocol.TField STOP3_FIELD_DESC = new org.apache.thrift.protocol.TField("stop3", org.apache.thrift.protocol.TType.I32, (short) 9);
    private static final org.apache.thrift.protocol.TField STOP4_FIELD_DESC = new org.apache.thrift.protocol.TField("stop4", org.apache.thrift.protocol.TType.I32, (short) 10);
    private static final org.apache.thrift.protocol.TField STOP5_FIELD_DESC = new org.apache.thrift.protocol.TField("stop5", org.apache.thrift.protocol.TType.I32, (short) 11);
    private static final org.apache.thrift.protocol.TField STOP6_FIELD_DESC = new org.apache.thrift.protocol.TField("stop6", org.apache.thrift.protocol.TType.I32, (short) 12);
    private static final org.apache.thrift.protocol.TField STOP7_FIELD_DESC = new org.apache.thrift.protocol.TField("stop7", org.apache.thrift.protocol.TType.I32, (short) 13);
    private static final org.apache.thrift.protocol.TField STOP8_FIELD_DESC = new org.apache.thrift.protocol.TField("stop8", org.apache.thrift.protocol.TType.I32, (short) 14);
    private static final org.apache.thrift.protocol.TField STOP9_FIELD_DESC = new org.apache.thrift.protocol.TField("stop9", org.apache.thrift.protocol.TType.I32, (short) 15);
    private static final org.apache.thrift.protocol.TField STOP10_FIELD_DESC = new org.apache.thrift.protocol.TField("stop10", org.apache.thrift.protocol.TType.I32, (short) 16);
    private static final org.apache.thrift.protocol.TField STOP11_FIELD_DESC = new org.apache.thrift.protocol.TField("stop11", org.apache.thrift.protocol.TType.I32, (short) 17);
    private static final org.apache.thrift.protocol.TField STOP12_FIELD_DESC = new org.apache.thrift.protocol.TField("stop12", org.apache.thrift.protocol.TType.I32, (short) 18);
    private static final org.apache.thrift.protocol.TField STOP13_FIELD_DESC = new org.apache.thrift.protocol.TField("stop13", org.apache.thrift.protocol.TType.I32, (short) 19);
    private static final org.apache.thrift.protocol.TField STOP14_FIELD_DESC = new org.apache.thrift.protocol.TField("stop14", org.apache.thrift.protocol.TType.I32, (short) 20);
    private static final org.apache.thrift.protocol.TField STOP15_FIELD_DESC = new org.apache.thrift.protocol.TField("stop15", org.apache.thrift.protocol.TType.I32, (short) 21);
    private static final org.apache.thrift.protocol.TField STOP16_FIELD_DESC = new org.apache.thrift.protocol.TField("stop16", org.apache.thrift.protocol.TType.I32, (short) 22);
    private static final org.apache.thrift.protocol.TField STOP17_FIELD_DESC = new org.apache.thrift.protocol.TField("stop17", org.apache.thrift.protocol.TType.I32, (short) 23);
    private static final org.apache.thrift.protocol.TField STOP18_FIELD_DESC = new org.apache.thrift.protocol.TField("stop18", org.apache.thrift.protocol.TType.I32, (short) 24);
    private static final org.apache.thrift.protocol.TField STOP19_FIELD_DESC = new org.apache.thrift.protocol.TField("stop19", org.apache.thrift.protocol.TType.I32, (short) 25);
    private static final org.apache.thrift.protocol.TField STOP20_FIELD_DESC = new org.apache.thrift.protocol.TField("stop20", org.apache.thrift.protocol.TType.I32, (short) 26);
    private static final org.apache.thrift.protocol.TField STOP21_FIELD_DESC = new org.apache.thrift.protocol.TField("stop21", org.apache.thrift.protocol.TType.I32, (short) 27);
    private static final org.apache.thrift.protocol.TField STOP22_FIELD_DESC = new org.apache.thrift.protocol.TField("stop22", org.apache.thrift.protocol.TType.I32, (short) 28);
    private static final org.apache.thrift.protocol.TField STOP23_FIELD_DESC = new org.apache.thrift.protocol.TField("stop23", org.apache.thrift.protocol.TType.I32, (short) 29);
    private static final org.apache.thrift.protocol.TField STOP24_FIELD_DESC = new org.apache.thrift.protocol.TField("stop24", org.apache.thrift.protocol.TType.I32, (short) 30);
    private static final org.apache.thrift.protocol.TField STOP25_FIELD_DESC = new org.apache.thrift.protocol.TField("stop25", org.apache.thrift.protocol.TType.I32, (short) 31);
    private static final org.apache.thrift.protocol.TField STOP35_FIELD_DESC = new org.apache.thrift.protocol.TField("stop35", org.apache.thrift.protocol.TType.I32, (short) 35);
    private static final org.apache.thrift.protocol.TField STOP36_FIELD_DESC = new org.apache.thrift.protocol.TField("stop36", org.apache.thrift.protocol.TType.I32, (short) 36);
    private static final org.apache.thrift.protocol.TField STOP37_FIELD_DESC = new org.apache.thrift.protocol.TField("stop37", org.apache.thrift.protocol.TType.I32, (short) 37);
    private static final org.apache.thrift.protocol.TField STOP38_FIELD_DESC = new org.apache.thrift.protocol.TField("stop38", org.apache.thrift.protocol.TType.I32, (short) 38);
    private static final org.apache.thrift.protocol.TField STOP39_FIELD_DESC = new org.apache.thrift.protocol.TField("stop39", org.apache.thrift.protocol.TType.I32, (short) 39);
    private static final org.apache.thrift.protocol.TField STOP40_FIELD_DESC = new org.apache.thrift.protocol.TField("stop40", org.apache.thrift.protocol.TType.I32, (short) 40);
    private static final org.apache.thrift.protocol.TField STOP41_FIELD_DESC = new org.apache.thrift.protocol.TField("stop41", org.apache.thrift.protocol.TType.I32, (short) 41);
    private static final org.apache.thrift.protocol.TField STOP42_FIELD_DESC = new org.apache.thrift.protocol.TField("stop42", org.apache.thrift.protocol.TType.I32, (short) 42);
    private static final org.apache.thrift.protocol.TField STOP43_FIELD_DESC = new org.apache.thrift.protocol.TField("stop43", org.apache.thrift.protocol.TType.I32, (short) 43);
    private static final org.apache.thrift.protocol.TField STOP44_FIELD_DESC = new org.apache.thrift.protocol.TField("stop44", org.apache.thrift.protocol.TType.I32, (short) 44);
    private static final org.apache.thrift.protocol.TField STOP45_FIELD_DESC = new org.apache.thrift.protocol.TField("stop45", org.apache.thrift.protocol.TType.I32, (short) 45);
    private static final org.apache.thrift.protocol.TField STOP46_FIELD_DESC = new org.apache.thrift.protocol.TField("stop46", org.apache.thrift.protocol.TType.I32, (short) 46);
    private static final org.apache.thrift.protocol.TField STOP47_FIELD_DESC = new org.apache.thrift.protocol.TField("stop47", org.apache.thrift.protocol.TType.I32, (short) 47);
    private static final org.apache.thrift.protocol.TField STOP48_FIELD_DESC = new org.apache.thrift.protocol.TField("stop48", org.apache.thrift.protocol.TType.I32, (short) 48);
    private static final org.apache.thrift.protocol.TField STOP49_FIELD_DESC = new org.apache.thrift.protocol.TField("stop49", org.apache.thrift.protocol.TType.I32, (short) 49);
    private static final org.apache.thrift.protocol.TField STOP50_FIELD_DESC = new org.apache.thrift.protocol.TField("stop50", org.apache.thrift.protocol.TType.I32, (short) 50);
    private static final org.apache.thrift.protocol.TField STOP51_FIELD_DESC = new org.apache.thrift.protocol.TField("stop51", org.apache.thrift.protocol.TType.I32, (short) 51);
    private static final org.apache.thrift.protocol.TField STOP52_FIELD_DESC = new org.apache.thrift.protocol.TField("stop52", org.apache.thrift.protocol.TType.I32, (short) 52);
    private static final org.apache.thrift.protocol.TField STOP53_FIELD_DESC = new org.apache.thrift.protocol.TField("stop53", org.apache.thrift.protocol.TType.I32, (short) 53);
    private static final org.apache.thrift.protocol.TField STOP54_FIELD_DESC = new org.apache.thrift.protocol.TField("stop54", org.apache.thrift.protocol.TType.I32, (short) 54);
    private static final org.apache.thrift.protocol.TField STOP55_FIELD_DESC = new org.apache.thrift.protocol.TField("stop55", org.apache.thrift.protocol.TType.I32, (short) 55);
    private static final org.apache.thrift.protocol.TField STOP56_FIELD_DESC = new org.apache.thrift.protocol.TField("stop56", org.apache.thrift.protocol.TType.I32, (short) 56);
    private static final org.apache.thrift.protocol.TField STOP57_FIELD_DESC = new org.apache.thrift.protocol.TField("stop57", org.apache.thrift.protocol.TType.I32, (short) 57);
    private static final org.apache.thrift.protocol.TField STOP58_FIELD_DESC = new org.apache.thrift.protocol.TField("stop58", org.apache.thrift.protocol.TType.I32, (short) 58);
    private static final org.apache.thrift.protocol.TField STOP59_FIELD_DESC = new org.apache.thrift.protocol.TField("stop59", org.apache.thrift.protocol.TType.I32, (short) 59);
    private static final org.apache.thrift.protocol.TField STOP60_FIELD_DESC = new org.apache.thrift.protocol.TField("stop60", org.apache.thrift.protocol.TType.I32, (short) 60);
    private static final org.apache.thrift.protocol.TField STOP61_FIELD_DESC = new org.apache.thrift.protocol.TField("stop61", org.apache.thrift.protocol.TType.I32, (short) 61);
    private static final org.apache.thrift.protocol.TField STOP62_FIELD_DESC = new org.apache.thrift.protocol.TField("stop62", org.apache.thrift.protocol.TType.I32, (short) 62);
    private static final org.apache.thrift.protocol.TField STOP63_FIELD_DESC = new org.apache.thrift.protocol.TField("stop63", org.apache.thrift.protocol.TType.I32, (short) 63);
    private static final org.apache.thrift.protocol.TField STOP64_FIELD_DESC = new org.apache.thrift.protocol.TField("stop64", org.apache.thrift.protocol.TType.I32, (short) 64);
    private static final org.apache.thrift.protocol.TField STOP65_FIELD_DESC = new org.apache.thrift.protocol.TField("stop65", org.apache.thrift.protocol.TType.I32, (short) 65);
    private static final org.apache.thrift.protocol.TField STOP66_FIELD_DESC = new org.apache.thrift.protocol.TField("stop66", org.apache.thrift.protocol.TType.I32, (short) 66);
    private static final org.apache.thrift.protocol.TField STOP67_FIELD_DESC = new org.apache.thrift.protocol.TField("stop67", org.apache.thrift.protocol.TType.I32, (short) 67);
    private static final org.apache.thrift.protocol.TField STOP68_FIELD_DESC = new org.apache.thrift.protocol.TField("stop68", org.apache.thrift.protocol.TType.I32, (short) 68);
    private static final org.apache.thrift.protocol.TField STOP69_FIELD_DESC = new org.apache.thrift.protocol.TField("stop69", org.apache.thrift.protocol.TType.I32, (short) 69);
    private static final org.apache.thrift.protocol.TField STOP70_FIELD_DESC = new org.apache.thrift.protocol.TField("stop70", org.apache.thrift.protocol.TType.I32, (short) 70);
    private static final org.apache.thrift.protocol.TField STOP71_FIELD_DESC = new org.apache.thrift.protocol.TField("stop71", org.apache.thrift.protocol.TType.I32, (short) 71);
    private static final org.apache.thrift.protocol.TField STOP72_FIELD_DESC = new org.apache.thrift.protocol.TField("stop72", org.apache.thrift.protocol.TType.I32, (short) 72);
    private static final org.apache.thrift.protocol.TField STOP73_FIELD_DESC = new org.apache.thrift.protocol.TField("stop73", org.apache.thrift.protocol.TType.I32, (short) 73);
    private static final org.apache.thrift.protocol.TField STOP74_FIELD_DESC = new org.apache.thrift.protocol.TField("stop74", org.apache.thrift.protocol.TType.I32, (short) 74);
    private static final org.apache.thrift.protocol.TField STOP75_FIELD_DESC = new org.apache.thrift.protocol.TField("stop75", org.apache.thrift.protocol.TType.I32, (short) 75);
    private static final org.apache.thrift.protocol.TField STOP76_FIELD_DESC = new org.apache.thrift.protocol.TField("stop76", org.apache.thrift.protocol.TType.I32, (short) 76);
    private static final org.apache.thrift.protocol.TField STOP77_FIELD_DESC = new org.apache.thrift.protocol.TField("stop77", org.apache.thrift.protocol.TType.I32, (short) 77);
    private static final org.apache.thrift.protocol.TField STOP78_FIELD_DESC = new org.apache.thrift.protocol.TField("stop78", org.apache.thrift.protocol.TType.I32, (short) 78);
    private static final org.apache.thrift.protocol.TField STOP79_FIELD_DESC = new org.apache.thrift.protocol.TField("stop79", org.apache.thrift.protocol.TType.I32, (short) 79);
    private static final org.apache.thrift.protocol.TField STOP80_FIELD_DESC = new org.apache.thrift.protocol.TField("stop80", org.apache.thrift.protocol.TType.I32, (short) 80);
    private static final org.apache.thrift.protocol.TField STOP81_FIELD_DESC = new org.apache.thrift.protocol.TField("stop81", org.apache.thrift.protocol.TType.I32, (short) 81);
    private static final org.apache.thrift.protocol.TField STOP82_FIELD_DESC = new org.apache.thrift.protocol.TField("stop82", org.apache.thrift.protocol.TType.I32, (short) 82);
    private static final org.apache.thrift.protocol.TField STOP83_FIELD_DESC = new org.apache.thrift.protocol.TField("stop83", org.apache.thrift.protocol.TType.I32, (short) 83);
    private static final org.apache.thrift.protocol.TField STOP84_FIELD_DESC = new org.apache.thrift.protocol.TField("stop84", org.apache.thrift.protocol.TType.I32, (short) 84);
    private static final org.apache.thrift.protocol.TField STOP85_FIELD_DESC = new org.apache.thrift.protocol.TField("stop85", org.apache.thrift.protocol.TType.I32, (short) 85);
    private static final org.apache.thrift.protocol.TField STOP86_FIELD_DESC = new org.apache.thrift.protocol.TField("stop86", org.apache.thrift.protocol.TType.I32, (short) 86);
    private static final org.apache.thrift.protocol.TField STOP87_FIELD_DESC = new org.apache.thrift.protocol.TField("stop87", org.apache.thrift.protocol.TType.I32, (short) 87);
    private static final org.apache.thrift.protocol.TField STOP88_FIELD_DESC = new org.apache.thrift.protocol.TField("stop88", org.apache.thrift.protocol.TType.I32, (short) 88);
    private static final org.apache.thrift.protocol.TField STOP89_FIELD_DESC = new org.apache.thrift.protocol.TField("stop89", org.apache.thrift.protocol.TType.I32, (short) 89);
    private static final org.apache.thrift.protocol.TField STOP90_FIELD_DESC = new org.apache.thrift.protocol.TField("stop90", org.apache.thrift.protocol.TType.I32, (short) 90);
    private static final org.apache.thrift.protocol.TField STOP91_FIELD_DESC = new org.apache.thrift.protocol.TField("stop91", org.apache.thrift.protocol.TType.I32, (short) 91);
    private static final org.apache.thrift.protocol.TField STOP92_FIELD_DESC = new org.apache.thrift.protocol.TField("stop92", org.apache.thrift.protocol.TType.I32, (short) 92);
    private static final org.apache.thrift.protocol.TField STOP93_FIELD_DESC = new org.apache.thrift.protocol.TField("stop93", org.apache.thrift.protocol.TType.I32, (short) 93);
    private static final org.apache.thrift.protocol.TField STOP94_FIELD_DESC = new org.apache.thrift.protocol.TField("stop94", org.apache.thrift.protocol.TType.I32, (short) 94);
    private static final org.apache.thrift.protocol.TField STOP95_FIELD_DESC = new org.apache.thrift.protocol.TField("stop95", org.apache.thrift.protocol.TType.I32, (short) 95);
    private static final org.apache.thrift.protocol.TField STOP96_FIELD_DESC = new org.apache.thrift.protocol.TField("stop96", org.apache.thrift.protocol.TType.I32, (short) 96);
    private static final org.apache.thrift.protocol.TField STOP97_FIELD_DESC = new org.apache.thrift.protocol.TField("stop97", org.apache.thrift.protocol.TType.I32, (short) 97);
    private static final org.apache.thrift.protocol.TField STOP98_FIELD_DESC = new org.apache.thrift.protocol.TField("stop98", org.apache.thrift.protocol.TType.I32, (short) 98);
    private static final org.apache.thrift.protocol.TField STOP99_FIELD_DESC = new org.apache.thrift.protocol.TField("stop99", org.apache.thrift.protocol.TType.I32, (short) 99);
    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<>();

    static {
        schemes.put(StandardScheme.class, new Trade2StandardSchemeFactory());
        schemes.put(TupleScheme.class, new Trade2TupleSchemeFactory());
    }

    // isset id assignments
    private static final int __TIMESTAMP_ISSET_ID = 0;
    private static final int __PRICE_ISSET_ID = 1;
    private static final int __SIZE_ISSET_ID = 2;
    private static final int __STOP_ISSET_ID = 3;
    private static final int __STOP1_ISSET_ID = 4;
    private static final int __STOP2_ISSET_ID = 5;
    private static final int __STOP3_ISSET_ID = 6;
    private static final int __STOP4_ISSET_ID = 7;
    private static final int __STOP5_ISSET_ID = 8;
    private static final int __STOP6_ISSET_ID = 9;
    private static final int __STOP7_ISSET_ID = 10;
    private static final int __STOP8_ISSET_ID = 11;
    private static final int __STOP9_ISSET_ID = 12;
    private static final int __STOP10_ISSET_ID = 13;
    private static final int __STOP11_ISSET_ID = 14;
    private static final int __STOP12_ISSET_ID = 15;
    private static final int __STOP13_ISSET_ID = 16;
    private static final int __STOP14_ISSET_ID = 17;
    private static final int __STOP15_ISSET_ID = 18;
    private static final int __STOP16_ISSET_ID = 19;
    private static final int __STOP17_ISSET_ID = 20;
    private static final int __STOP18_ISSET_ID = 21;
    private static final int __STOP19_ISSET_ID = 22;
    private static final int __STOP20_ISSET_ID = 23;
    private static final int __STOP21_ISSET_ID = 24;
    private static final int __STOP22_ISSET_ID = 25;
    private static final int __STOP23_ISSET_ID = 26;
    private static final int __STOP24_ISSET_ID = 27;
    private static final int __STOP25_ISSET_ID = 28;
    private static final int __STOP35_ISSET_ID = 29;
    private static final int __STOP36_ISSET_ID = 30;
    private static final int __STOP37_ISSET_ID = 31;
    private static final int __STOP38_ISSET_ID = 32;
    private static final int __STOP39_ISSET_ID = 33;
    private static final int __STOP40_ISSET_ID = 34;
    private static final int __STOP41_ISSET_ID = 35;
    private static final int __STOP42_ISSET_ID = 36;
    private static final int __STOP43_ISSET_ID = 37;
    private static final int __STOP44_ISSET_ID = 38;
    private static final int __STOP45_ISSET_ID = 39;
    private static final int __STOP46_ISSET_ID = 40;
    private static final int __STOP47_ISSET_ID = 41;
    private static final int __STOP48_ISSET_ID = 42;
    private static final int __STOP49_ISSET_ID = 43;
    private static final int __STOP50_ISSET_ID = 44;
    private static final int __STOP51_ISSET_ID = 45;
    private static final int __STOP52_ISSET_ID = 46;
    private static final int __STOP53_ISSET_ID = 47;
    private static final int __STOP54_ISSET_ID = 48;
    private static final int __STOP55_ISSET_ID = 49;
    private static final int __STOP56_ISSET_ID = 50;
    private static final int __STOP57_ISSET_ID = 51;
    private static final int __STOP58_ISSET_ID = 52;
    private static final int __STOP59_ISSET_ID = 53;
    private static final int __STOP60_ISSET_ID = 54;
    private static final int __STOP61_ISSET_ID = 55;
    private static final int __STOP62_ISSET_ID = 56;
    private static final int __STOP63_ISSET_ID = 57;
    private static final int __STOP64_ISSET_ID = 58;
    private static final int __STOP65_ISSET_ID = 59;
    private static final int __STOP66_ISSET_ID = 60;
    private static final int __STOP67_ISSET_ID = 61;
    private static final int __STOP68_ISSET_ID = 62;
    private static final int __STOP69_ISSET_ID = 63;
    private static final int __STOP70_ISSET_ID = 64;
    private static final int __STOP71_ISSET_ID = 65;
    private static final int __STOP72_ISSET_ID = 66;
    private static final int __STOP73_ISSET_ID = 67;
    private static final int __STOP74_ISSET_ID = 68;
    private static final int __STOP75_ISSET_ID = 69;
    private static final int __STOP76_ISSET_ID = 70;
    private static final int __STOP77_ISSET_ID = 71;
    private static final int __STOP78_ISSET_ID = 72;
    private static final int __STOP79_ISSET_ID = 73;
    private static final int __STOP80_ISSET_ID = 74;
    private static final int __STOP81_ISSET_ID = 75;
    private static final int __STOP82_ISSET_ID = 76;
    private static final int __STOP83_ISSET_ID = 77;
    private static final int __STOP84_ISSET_ID = 78;
    private static final int __STOP85_ISSET_ID = 79;
    private static final int __STOP86_ISSET_ID = 80;
    private static final int __STOP87_ISSET_ID = 81;
    private static final int __STOP88_ISSET_ID = 82;
    private static final int __STOP89_ISSET_ID = 83;
    private static final int __STOP90_ISSET_ID = 84;
    private static final int __STOP91_ISSET_ID = 85;
    private static final int __STOP92_ISSET_ID = 86;
    private static final int __STOP93_ISSET_ID = 87;
    private static final int __STOP94_ISSET_ID = 88;
    private static final int __STOP95_ISSET_ID = 89;
    private static final int __STOP96_ISSET_ID = 90;
    private static final int __STOP97_ISSET_ID = 91;
    private static final int __STOP98_ISSET_ID = 92;
    private static final int __STOP99_ISSET_ID = 93;
    public long timestamp; // required
    public String sym; // required
    public double price; // required
    public int size; // required
    public int stop; // required
    public String cond; // required
    public String ex; // required
    public int stop1; // required
    public int stop2; // required
    public int stop3; // required
    public int stop4; // required
    public int stop5; // required
    public int stop6; // required
    public int stop7; // required
    public int stop8; // required
    public int stop9; // required
    public int stop10; // required
    public int stop11; // required
    public int stop12; // required
    public int stop13; // required
    public int stop14; // required
    public int stop15; // required
    public int stop16; // required
    public int stop17; // required
    public int stop18; // required
    public int stop19; // required
    public int stop20; // required
    public int stop21; // required
    public int stop22; // required
    public int stop23; // required
    public int stop24; // required
    public int stop25; // required
    public int stop35; // required
    public int stop36; // required
    public int stop37; // required
    public int stop38; // required
    public int stop39; // required
    public int stop40; // required
    public int stop41; // required
    public int stop42; // required
    public int stop43; // required
    public int stop44; // required
    public int stop45; // required
    public int stop46; // required
    public int stop47; // required
    public int stop48; // required
    public int stop49; // required
    public int stop50; // required
    public int stop51; // required
    public int stop52; // required
    public int stop53; // required
    public int stop54; // required
    public int stop55; // required
    public int stop56; // required
    public int stop57; // required
    public int stop58; // required
    public int stop59; // required
    public int stop60; // required
    public int stop61; // required
    public int stop62; // required
    public int stop63; // required
    public int stop64; // required
    public int stop65; // required
    public int stop66; // required
    public int stop67; // required
    public int stop68; // required
    public int stop69; // required
    public int stop70; // required
    public int stop71; // required
    public int stop72; // required
    public int stop73; // required
    public int stop74; // required
    public int stop75; // required
    public int stop76; // required
    public int stop77; // required
    public int stop78; // required
    public int stop79; // required
    public int stop80; // required
    public int stop81; // required
    public int stop82; // required
    public int stop83; // required
    public int stop84; // required
    public int stop85; // required
    public int stop86; // required
    public int stop87; // required
    public int stop88; // required
    public int stop89; // required
    public int stop90; // required
    public int stop91; // required
    public int stop92; // required
    public int stop93; // required
    public int stop94; // required
    public int stop95; // required
    public int stop96; // required
    public int stop97; // required
    public int stop98; // required
    public int stop99; // required
    private BitSet __isset_bit_vector = new BitSet(94);

    public Trade2() {
    }

    public Trade2(
            long timestamp,
            String sym,
            double price,
            int size,
            int stop,
            String cond,
            String ex,
            int stop1,
            int stop2,
            int stop3,
            int stop4,
            int stop5,
            int stop6,
            int stop7,
            int stop8,
            int stop9,
            int stop10,
            int stop11,
            int stop12,
            int stop13,
            int stop14,
            int stop15,
            int stop16,
            int stop17,
            int stop18,
            int stop19,
            int stop20,
            int stop21,
            int stop22,
            int stop23,
            int stop24,
            int stop25,
            int stop35,
            int stop36,
            int stop37,
            int stop38,
            int stop39,
            int stop40,
            int stop41,
            int stop42,
            int stop43,
            int stop44,
            int stop45,
            int stop46,
            int stop47,
            int stop48,
            int stop49,
            int stop50,
            int stop51,
            int stop52,
            int stop53,
            int stop54,
            int stop55,
            int stop56,
            int stop57,
            int stop58,
            int stop59,
            int stop60,
            int stop61,
            int stop62,
            int stop63,
            int stop64,
            int stop65,
            int stop66,
            int stop67,
            int stop68,
            int stop69,
            int stop70,
            int stop71,
            int stop72,
            int stop73,
            int stop74,
            int stop75,
            int stop76,
            int stop77,
            int stop78,
            int stop79,
            int stop80,
            int stop81,
            int stop82,
            int stop83,
            int stop84,
            int stop85,
            int stop86,
            int stop87,
            int stop88,
            int stop89,
            int stop90,
            int stop91,
            int stop92,
            int stop93,
            int stop94,
            int stop95,
            int stop96,
            int stop97,
            int stop98,
            int stop99) {
        this();
        this.timestamp = timestamp;
        setTimestampIsSet(true);
        this.sym = sym;
        this.price = price;
        setPriceIsSet(true);
        this.size = size;
        setSizeIsSet(true);
        this.stop = stop;
        setStopIsSet(true);
        this.cond = cond;
        this.ex = ex;
        this.stop1 = stop1;
        setStop1IsSet(true);
        this.stop2 = stop2;
        setStop2IsSet(true);
        this.stop3 = stop3;
        setStop3IsSet(true);
        this.stop4 = stop4;
        setStop4IsSet(true);
        this.stop5 = stop5;
        setStop5IsSet(true);
        this.stop6 = stop6;
        setStop6IsSet(true);
        this.stop7 = stop7;
        setStop7IsSet(true);
        this.stop8 = stop8;
        setStop8IsSet(true);
        this.stop9 = stop9;
        setStop9IsSet(true);
        this.stop10 = stop10;
        setStop10IsSet(true);
        this.stop11 = stop11;
        setStop11IsSet(true);
        this.stop12 = stop12;
        setStop12IsSet(true);
        this.stop13 = stop13;
        setStop13IsSet(true);
        this.stop14 = stop14;
        setStop14IsSet(true);
        this.stop15 = stop15;
        setStop15IsSet(true);
        this.stop16 = stop16;
        setStop16IsSet(true);
        this.stop17 = stop17;
        setStop17IsSet(true);
        this.stop18 = stop18;
        setStop18IsSet(true);
        this.stop19 = stop19;
        setStop19IsSet(true);
        this.stop20 = stop20;
        setStop20IsSet(true);
        this.stop21 = stop21;
        setStop21IsSet(true);
        this.stop22 = stop22;
        setStop22IsSet(true);
        this.stop23 = stop23;
        setStop23IsSet(true);
        this.stop24 = stop24;
        setStop24IsSet(true);
        this.stop25 = stop25;
        setStop25IsSet(true);
        this.stop35 = stop35;
        setStop35IsSet(true);
        this.stop36 = stop36;
        setStop36IsSet(true);
        this.stop37 = stop37;
        setStop37IsSet(true);
        this.stop38 = stop38;
        setStop38IsSet(true);
        this.stop39 = stop39;
        setStop39IsSet(true);
        this.stop40 = stop40;
        setStop40IsSet(true);
        this.stop41 = stop41;
        setStop41IsSet(true);
        this.stop42 = stop42;
        setStop42IsSet(true);
        this.stop43 = stop43;
        setStop43IsSet(true);
        this.stop44 = stop44;
        setStop44IsSet(true);
        this.stop45 = stop45;
        setStop45IsSet(true);
        this.stop46 = stop46;
        setStop46IsSet(true);
        this.stop47 = stop47;
        setStop47IsSet(true);
        this.stop48 = stop48;
        setStop48IsSet(true);
        this.stop49 = stop49;
        setStop49IsSet(true);
        this.stop50 = stop50;
        setStop50IsSet(true);
        this.stop51 = stop51;
        setStop51IsSet(true);
        this.stop52 = stop52;
        setStop52IsSet(true);
        this.stop53 = stop53;
        setStop53IsSet(true);
        this.stop54 = stop54;
        setStop54IsSet(true);
        this.stop55 = stop55;
        setStop55IsSet(true);
        this.stop56 = stop56;
        setStop56IsSet(true);
        this.stop57 = stop57;
        setStop57IsSet(true);
        this.stop58 = stop58;
        setStop58IsSet(true);
        this.stop59 = stop59;
        setStop59IsSet(true);
        this.stop60 = stop60;
        setStop60IsSet(true);
        this.stop61 = stop61;
        setStop61IsSet(true);
        this.stop62 = stop62;
        setStop62IsSet(true);
        this.stop63 = stop63;
        setStop63IsSet(true);
        this.stop64 = stop64;
        setStop64IsSet(true);
        this.stop65 = stop65;
        setStop65IsSet(true);
        this.stop66 = stop66;
        setStop66IsSet(true);
        this.stop67 = stop67;
        setStop67IsSet(true);
        this.stop68 = stop68;
        setStop68IsSet(true);
        this.stop69 = stop69;
        setStop69IsSet(true);
        this.stop70 = stop70;
        setStop70IsSet(true);
        this.stop71 = stop71;
        setStop71IsSet(true);
        this.stop72 = stop72;
        setStop72IsSet(true);
        this.stop73 = stop73;
        setStop73IsSet(true);
        this.stop74 = stop74;
        setStop74IsSet(true);
        this.stop75 = stop75;
        setStop75IsSet(true);
        this.stop76 = stop76;
        setStop76IsSet(true);
        this.stop77 = stop77;
        setStop77IsSet(true);
        this.stop78 = stop78;
        setStop78IsSet(true);
        this.stop79 = stop79;
        setStop79IsSet(true);
        this.stop80 = stop80;
        setStop80IsSet(true);
        this.stop81 = stop81;
        setStop81IsSet(true);
        this.stop82 = stop82;
        setStop82IsSet(true);
        this.stop83 = stop83;
        setStop83IsSet(true);
        this.stop84 = stop84;
        setStop84IsSet(true);
        this.stop85 = stop85;
        setStop85IsSet(true);
        this.stop86 = stop86;
        setStop86IsSet(true);
        this.stop87 = stop87;
        setStop87IsSet(true);
        this.stop88 = stop88;
        setStop88IsSet(true);
        this.stop89 = stop89;
        setStop89IsSet(true);
        this.stop90 = stop90;
        setStop90IsSet(true);
        this.stop91 = stop91;
        setStop91IsSet(true);
        this.stop92 = stop92;
        setStop92IsSet(true);
        this.stop93 = stop93;
        setStop93IsSet(true);
        this.stop94 = stop94;
        setStop94IsSet(true);
        this.stop95 = stop95;
        setStop95IsSet(true);
        this.stop96 = stop96;
        setStop96IsSet(true);
        this.stop97 = stop97;
        setStop97IsSet(true);
        this.stop98 = stop98;
        setStop98IsSet(true);
        this.stop99 = stop99;
        setStop99IsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public Trade2(Trade2 other) {
        __isset_bit_vector.clear();
        __isset_bit_vector.or(other.__isset_bit_vector);
        this.timestamp = other.timestamp;
        if (other.isSetSym()) {
            this.sym = other.sym;
        }
        this.price = other.price;
        this.size = other.size;
        this.stop = other.stop;
        if (other.isSetCond()) {
            this.cond = other.cond;
        }
        if (other.isSetEx()) {
            this.ex = other.ex;
        }
        this.stop1 = other.stop1;
        this.stop2 = other.stop2;
        this.stop3 = other.stop3;
        this.stop4 = other.stop4;
        this.stop5 = other.stop5;
        this.stop6 = other.stop6;
        this.stop7 = other.stop7;
        this.stop8 = other.stop8;
        this.stop9 = other.stop9;
        this.stop10 = other.stop10;
        this.stop11 = other.stop11;
        this.stop12 = other.stop12;
        this.stop13 = other.stop13;
        this.stop14 = other.stop14;
        this.stop15 = other.stop15;
        this.stop16 = other.stop16;
        this.stop17 = other.stop17;
        this.stop18 = other.stop18;
        this.stop19 = other.stop19;
        this.stop20 = other.stop20;
        this.stop21 = other.stop21;
        this.stop22 = other.stop22;
        this.stop23 = other.stop23;
        this.stop24 = other.stop24;
        this.stop25 = other.stop25;
        this.stop35 = other.stop35;
        this.stop36 = other.stop36;
        this.stop37 = other.stop37;
        this.stop38 = other.stop38;
        this.stop39 = other.stop39;
        this.stop40 = other.stop40;
        this.stop41 = other.stop41;
        this.stop42 = other.stop42;
        this.stop43 = other.stop43;
        this.stop44 = other.stop44;
        this.stop45 = other.stop45;
        this.stop46 = other.stop46;
        this.stop47 = other.stop47;
        this.stop48 = other.stop48;
        this.stop49 = other.stop49;
        this.stop50 = other.stop50;
        this.stop51 = other.stop51;
        this.stop52 = other.stop52;
        this.stop53 = other.stop53;
        this.stop54 = other.stop54;
        this.stop55 = other.stop55;
        this.stop56 = other.stop56;
        this.stop57 = other.stop57;
        this.stop58 = other.stop58;
        this.stop59 = other.stop59;
        this.stop60 = other.stop60;
        this.stop61 = other.stop61;
        this.stop62 = other.stop62;
        this.stop63 = other.stop63;
        this.stop64 = other.stop64;
        this.stop65 = other.stop65;
        this.stop66 = other.stop66;
        this.stop67 = other.stop67;
        this.stop68 = other.stop68;
        this.stop69 = other.stop69;
        this.stop70 = other.stop70;
        this.stop71 = other.stop71;
        this.stop72 = other.stop72;
        this.stop73 = other.stop73;
        this.stop74 = other.stop74;
        this.stop75 = other.stop75;
        this.stop76 = other.stop76;
        this.stop77 = other.stop77;
        this.stop78 = other.stop78;
        this.stop79 = other.stop79;
        this.stop80 = other.stop80;
        this.stop81 = other.stop81;
        this.stop82 = other.stop82;
        this.stop83 = other.stop83;
        this.stop84 = other.stop84;
        this.stop85 = other.stop85;
        this.stop86 = other.stop86;
        this.stop87 = other.stop87;
        this.stop88 = other.stop88;
        this.stop89 = other.stop89;
        this.stop90 = other.stop90;
        this.stop91 = other.stop91;
        this.stop92 = other.stop92;
        this.stop93 = other.stop93;
        this.stop94 = other.stop94;
        this.stop95 = other.stop95;
        this.stop96 = other.stop96;
        this.stop97 = other.stop97;
        this.stop98 = other.stop98;
        this.stop99 = other.stop99;
    }

    public Trade2 deepCopy() {
        return new Trade2(this);
    }

    @Override
    public void clear() {
        setTimestampIsSet(false);
        this.timestamp = 0;
        this.sym = null;
        setPriceIsSet(false);
        this.price = 0.0;
        setSizeIsSet(false);
        this.size = 0;
        setStopIsSet(false);
        this.stop = 0;
        this.cond = null;
        this.ex = null;
        setStop1IsSet(false);
        this.stop1 = 0;
        setStop2IsSet(false);
        this.stop2 = 0;
        setStop3IsSet(false);
        this.stop3 = 0;
        setStop4IsSet(false);
        this.stop4 = 0;
        setStop5IsSet(false);
        this.stop5 = 0;
        setStop6IsSet(false);
        this.stop6 = 0;
        setStop7IsSet(false);
        this.stop7 = 0;
        setStop8IsSet(false);
        this.stop8 = 0;
        setStop9IsSet(false);
        this.stop9 = 0;
        setStop10IsSet(false);
        this.stop10 = 0;
        setStop11IsSet(false);
        this.stop11 = 0;
        setStop12IsSet(false);
        this.stop12 = 0;
        setStop13IsSet(false);
        this.stop13 = 0;
        setStop14IsSet(false);
        this.stop14 = 0;
        setStop15IsSet(false);
        this.stop15 = 0;
        setStop16IsSet(false);
        this.stop16 = 0;
        setStop17IsSet(false);
        this.stop17 = 0;
        setStop18IsSet(false);
        this.stop18 = 0;
        setStop19IsSet(false);
        this.stop19 = 0;
        setStop20IsSet(false);
        this.stop20 = 0;
        setStop21IsSet(false);
        this.stop21 = 0;
        setStop22IsSet(false);
        this.stop22 = 0;
        setStop23IsSet(false);
        this.stop23 = 0;
        setStop24IsSet(false);
        this.stop24 = 0;
        setStop25IsSet(false);
        this.stop25 = 0;
        setStop35IsSet(false);
        this.stop35 = 0;
        setStop36IsSet(false);
        this.stop36 = 0;
        setStop37IsSet(false);
        this.stop37 = 0;
        setStop38IsSet(false);
        this.stop38 = 0;
        setStop39IsSet(false);
        this.stop39 = 0;
        setStop40IsSet(false);
        this.stop40 = 0;
        setStop41IsSet(false);
        this.stop41 = 0;
        setStop42IsSet(false);
        this.stop42 = 0;
        setStop43IsSet(false);
        this.stop43 = 0;
        setStop44IsSet(false);
        this.stop44 = 0;
        setStop45IsSet(false);
        this.stop45 = 0;
        setStop46IsSet(false);
        this.stop46 = 0;
        setStop47IsSet(false);
        this.stop47 = 0;
        setStop48IsSet(false);
        this.stop48 = 0;
        setStop49IsSet(false);
        this.stop49 = 0;
        setStop50IsSet(false);
        this.stop50 = 0;
        setStop51IsSet(false);
        this.stop51 = 0;
        setStop52IsSet(false);
        this.stop52 = 0;
        setStop53IsSet(false);
        this.stop53 = 0;
        setStop54IsSet(false);
        this.stop54 = 0;
        setStop55IsSet(false);
        this.stop55 = 0;
        setStop56IsSet(false);
        this.stop56 = 0;
        setStop57IsSet(false);
        this.stop57 = 0;
        setStop58IsSet(false);
        this.stop58 = 0;
        setStop59IsSet(false);
        this.stop59 = 0;
        setStop60IsSet(false);
        this.stop60 = 0;
        setStop61IsSet(false);
        this.stop61 = 0;
        setStop62IsSet(false);
        this.stop62 = 0;
        setStop63IsSet(false);
        this.stop63 = 0;
        setStop64IsSet(false);
        this.stop64 = 0;
        setStop65IsSet(false);
        this.stop65 = 0;
        setStop66IsSet(false);
        this.stop66 = 0;
        setStop67IsSet(false);
        this.stop67 = 0;
        setStop68IsSet(false);
        this.stop68 = 0;
        setStop69IsSet(false);
        this.stop69 = 0;
        setStop70IsSet(false);
        this.stop70 = 0;
        setStop71IsSet(false);
        this.stop71 = 0;
        setStop72IsSet(false);
        this.stop72 = 0;
        setStop73IsSet(false);
        this.stop73 = 0;
        setStop74IsSet(false);
        this.stop74 = 0;
        setStop75IsSet(false);
        this.stop75 = 0;
        setStop76IsSet(false);
        this.stop76 = 0;
        setStop77IsSet(false);
        this.stop77 = 0;
        setStop78IsSet(false);
        this.stop78 = 0;
        setStop79IsSet(false);
        this.stop79 = 0;
        setStop80IsSet(false);
        this.stop80 = 0;
        setStop81IsSet(false);
        this.stop81 = 0;
        setStop82IsSet(false);
        this.stop82 = 0;
        setStop83IsSet(false);
        this.stop83 = 0;
        setStop84IsSet(false);
        this.stop84 = 0;
        setStop85IsSet(false);
        this.stop85 = 0;
        setStop86IsSet(false);
        this.stop86 = 0;
        setStop87IsSet(false);
        this.stop87 = 0;
        setStop88IsSet(false);
        this.stop88 = 0;
        setStop89IsSet(false);
        this.stop89 = 0;
        setStop90IsSet(false);
        this.stop90 = 0;
        setStop91IsSet(false);
        this.stop91 = 0;
        setStop92IsSet(false);
        this.stop92 = 0;
        setStop93IsSet(false);
        this.stop93 = 0;
        setStop94IsSet(false);
        this.stop94 = 0;
        setStop95IsSet(false);
        this.stop95 = 0;
        setStop96IsSet(false);
        this.stop96 = 0;
        setStop97IsSet(false);
        this.stop97 = 0;
        setStop98IsSet(false);
        this.stop98 = 0;
        setStop99IsSet(false);
        this.stop99 = 0;
    }

    public long getTimestamp() {
        return this.timestamp;
    }

    public Trade2 setTimestamp(long timestamp) {
        this.timestamp = timestamp;
        setTimestampIsSet(true);
        return this;
    }

    public void unsetTimestamp() {
        __isset_bit_vector.clear(__TIMESTAMP_ISSET_ID);
    }

    /**
     * Returns true if field timestamp is set (has been assigned a value) and false otherwise
     */
    public boolean isSetTimestamp() {
        return __isset_bit_vector.get(__TIMESTAMP_ISSET_ID);
    }

    public void setTimestampIsSet(boolean value) {
        __isset_bit_vector.set(__TIMESTAMP_ISSET_ID, value);
    }

    public String getSym() {
        return this.sym;
    }

    public Trade2 setSym(String sym) {
        this.sym = sym;
        return this;
    }

    public void unsetSym() {
        this.sym = null;
    }

    /**
     * Returns true if field sym is set (has been assigned a value) and false otherwise
     */
    public boolean isSetSym() {
        return this.sym != null;
    }

    public void setSymIsSet(boolean value) {
        if (!value) {
            this.sym = null;
        }
    }

    public double getPrice() {
        return this.price;
    }

    public Trade2 setPrice(double price) {
        this.price = price;
        setPriceIsSet(true);
        return this;
    }

    public void unsetPrice() {
        __isset_bit_vector.clear(__PRICE_ISSET_ID);
    }

    /**
     * Returns true if field price is set (has been assigned a value) and false otherwise
     */
    public boolean isSetPrice() {
        return __isset_bit_vector.get(__PRICE_ISSET_ID);
    }

    public void setPriceIsSet(boolean value) {
        __isset_bit_vector.set(__PRICE_ISSET_ID, value);
    }

    public int getSize() {
        return this.size;
    }

    public Trade2 setSize(int size) {
        this.size = size;
        setSizeIsSet(true);
        return this;
    }

    public void unsetSize() {
        __isset_bit_vector.clear(__SIZE_ISSET_ID);
    }

    /**
     * Returns true if field size is set (has been assigned a value) and false otherwise
     */
    public boolean isSetSize() {
        return __isset_bit_vector.get(__SIZE_ISSET_ID);
    }

    public void setSizeIsSet(boolean value) {
        __isset_bit_vector.set(__SIZE_ISSET_ID, value);
    }

    public int getStop() {
        return this.stop;
    }

    public Trade2 setStop(int stop) {
        this.stop = stop;
        setStopIsSet(true);
        return this;
    }

    public void unsetStop() {
        __isset_bit_vector.clear(__STOP_ISSET_ID);
    }

    /**
     * Returns true if field stop is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop() {
        return __isset_bit_vector.get(__STOP_ISSET_ID);
    }

    public void setStopIsSet(boolean value) {
        __isset_bit_vector.set(__STOP_ISSET_ID, value);
    }

    public String getCond() {
        return this.cond;
    }

    public Trade2 setCond(String cond) {
        this.cond = cond;
        return this;
    }

    public void unsetCond() {
        this.cond = null;
    }

    /**
     * Returns true if field cond is set (has been assigned a value) and false otherwise
     */
    public boolean isSetCond() {
        return this.cond != null;
    }

    public void setCondIsSet(boolean value) {
        if (!value) {
            this.cond = null;
        }
    }

    public String getEx() {
        return this.ex;
    }

    public Trade2 setEx(String ex) {
        this.ex = ex;
        return this;
    }

    public void unsetEx() {
        this.ex = null;
    }

    /**
     * Returns true if field ex is set (has been assigned a value) and false otherwise
     */
    public boolean isSetEx() {
        return this.ex != null;
    }

    public void setExIsSet(boolean value) {
        if (!value) {
            this.ex = null;
        }
    }

    public int getStop1() {
        return this.stop1;
    }

    public Trade2 setStop1(int stop1) {
        this.stop1 = stop1;
        setStop1IsSet(true);
        return this;
    }

    public void unsetStop1() {
        __isset_bit_vector.clear(__STOP1_ISSET_ID);
    }

    /**
     * Returns true if field stop1 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop1() {
        return __isset_bit_vector.get(__STOP1_ISSET_ID);
    }

    public void setStop1IsSet(boolean value) {
        __isset_bit_vector.set(__STOP1_ISSET_ID, value);
    }

    public int getStop2() {
        return this.stop2;
    }

    public Trade2 setStop2(int stop2) {
        this.stop2 = stop2;
        setStop2IsSet(true);
        return this;
    }

    public void unsetStop2() {
        __isset_bit_vector.clear(__STOP2_ISSET_ID);
    }

    /**
     * Returns true if field stop2 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop2() {
        return __isset_bit_vector.get(__STOP2_ISSET_ID);
    }

    public void setStop2IsSet(boolean value) {
        __isset_bit_vector.set(__STOP2_ISSET_ID, value);
    }

    public int getStop3() {
        return this.stop3;
    }

    public Trade2 setStop3(int stop3) {
        this.stop3 = stop3;
        setStop3IsSet(true);
        return this;
    }

    public void unsetStop3() {
        __isset_bit_vector.clear(__STOP3_ISSET_ID);
    }

    /**
     * Returns true if field stop3 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop3() {
        return __isset_bit_vector.get(__STOP3_ISSET_ID);
    }

    public void setStop3IsSet(boolean value) {
        __isset_bit_vector.set(__STOP3_ISSET_ID, value);
    }

    public int getStop4() {
        return this.stop4;
    }

    public Trade2 setStop4(int stop4) {
        this.stop4 = stop4;
        setStop4IsSet(true);
        return this;
    }

    public void unsetStop4() {
        __isset_bit_vector.clear(__STOP4_ISSET_ID);
    }

    /**
     * Returns true if field stop4 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop4() {
        return __isset_bit_vector.get(__STOP4_ISSET_ID);
    }

    public void setStop4IsSet(boolean value) {
        __isset_bit_vector.set(__STOP4_ISSET_ID, value);
    }

    public int getStop5() {
        return this.stop5;
    }

    public Trade2 setStop5(int stop5) {
        this.stop5 = stop5;
        setStop5IsSet(true);
        return this;
    }

    public void unsetStop5() {
        __isset_bit_vector.clear(__STOP5_ISSET_ID);
    }

    /**
     * Returns true if field stop5 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop5() {
        return __isset_bit_vector.get(__STOP5_ISSET_ID);
    }

    public void setStop5IsSet(boolean value) {
        __isset_bit_vector.set(__STOP5_ISSET_ID, value);
    }

    public int getStop6() {
        return this.stop6;
    }

    public Trade2 setStop6(int stop6) {
        this.stop6 = stop6;
        setStop6IsSet(true);
        return this;
    }

    public void unsetStop6() {
        __isset_bit_vector.clear(__STOP6_ISSET_ID);
    }

    /**
     * Returns true if field stop6 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop6() {
        return __isset_bit_vector.get(__STOP6_ISSET_ID);
    }

    public void setStop6IsSet(boolean value) {
        __isset_bit_vector.set(__STOP6_ISSET_ID, value);
    }

    public int getStop7() {
        return this.stop7;
    }

    public Trade2 setStop7(int stop7) {
        this.stop7 = stop7;
        setStop7IsSet(true);
        return this;
    }

    public void unsetStop7() {
        __isset_bit_vector.clear(__STOP7_ISSET_ID);
    }

    /**
     * Returns true if field stop7 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop7() {
        return __isset_bit_vector.get(__STOP7_ISSET_ID);
    }

    public void setStop7IsSet(boolean value) {
        __isset_bit_vector.set(__STOP7_ISSET_ID, value);
    }

    public int getStop8() {
        return this.stop8;
    }

    public Trade2 setStop8(int stop8) {
        this.stop8 = stop8;
        setStop8IsSet(true);
        return this;
    }

    public void unsetStop8() {
        __isset_bit_vector.clear(__STOP8_ISSET_ID);
    }

    /**
     * Returns true if field stop8 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop8() {
        return __isset_bit_vector.get(__STOP8_ISSET_ID);
    }

    public void setStop8IsSet(boolean value) {
        __isset_bit_vector.set(__STOP8_ISSET_ID, value);
    }

    public int getStop9() {
        return this.stop9;
    }

    public Trade2 setStop9(int stop9) {
        this.stop9 = stop9;
        setStop9IsSet(true);
        return this;
    }

    public void unsetStop9() {
        __isset_bit_vector.clear(__STOP9_ISSET_ID);
    }

    /**
     * Returns true if field stop9 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop9() {
        return __isset_bit_vector.get(__STOP9_ISSET_ID);
    }

    public void setStop9IsSet(boolean value) {
        __isset_bit_vector.set(__STOP9_ISSET_ID, value);
    }

    public int getStop10() {
        return this.stop10;
    }

    public Trade2 setStop10(int stop10) {
        this.stop10 = stop10;
        setStop10IsSet(true);
        return this;
    }

    public void unsetStop10() {
        __isset_bit_vector.clear(__STOP10_ISSET_ID);
    }

    /**
     * Returns true if field stop10 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop10() {
        return __isset_bit_vector.get(__STOP10_ISSET_ID);
    }

    public void setStop10IsSet(boolean value) {
        __isset_bit_vector.set(__STOP10_ISSET_ID, value);
    }

    public int getStop11() {
        return this.stop11;
    }

    public Trade2 setStop11(int stop11) {
        this.stop11 = stop11;
        setStop11IsSet(true);
        return this;
    }

    public void unsetStop11() {
        __isset_bit_vector.clear(__STOP11_ISSET_ID);
    }

    /**
     * Returns true if field stop11 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop11() {
        return __isset_bit_vector.get(__STOP11_ISSET_ID);
    }

    public void setStop11IsSet(boolean value) {
        __isset_bit_vector.set(__STOP11_ISSET_ID, value);
    }

    public int getStop12() {
        return this.stop12;
    }

    public Trade2 setStop12(int stop12) {
        this.stop12 = stop12;
        setStop12IsSet(true);
        return this;
    }

    public void unsetStop12() {
        __isset_bit_vector.clear(__STOP12_ISSET_ID);
    }

    /**
     * Returns true if field stop12 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop12() {
        return __isset_bit_vector.get(__STOP12_ISSET_ID);
    }

    public void setStop12IsSet(boolean value) {
        __isset_bit_vector.set(__STOP12_ISSET_ID, value);
    }

    public int getStop13() {
        return this.stop13;
    }

    public Trade2 setStop13(int stop13) {
        this.stop13 = stop13;
        setStop13IsSet(true);
        return this;
    }

    public void unsetStop13() {
        __isset_bit_vector.clear(__STOP13_ISSET_ID);
    }

    /**
     * Returns true if field stop13 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop13() {
        return __isset_bit_vector.get(__STOP13_ISSET_ID);
    }

    public void setStop13IsSet(boolean value) {
        __isset_bit_vector.set(__STOP13_ISSET_ID, value);
    }

    public int getStop14() {
        return this.stop14;
    }

    public Trade2 setStop14(int stop14) {
        this.stop14 = stop14;
        setStop14IsSet(true);
        return this;
    }

    public void unsetStop14() {
        __isset_bit_vector.clear(__STOP14_ISSET_ID);
    }

    /**
     * Returns true if field stop14 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop14() {
        return __isset_bit_vector.get(__STOP14_ISSET_ID);
    }

    public void setStop14IsSet(boolean value) {
        __isset_bit_vector.set(__STOP14_ISSET_ID, value);
    }

    public int getStop15() {
        return this.stop15;
    }

    public Trade2 setStop15(int stop15) {
        this.stop15 = stop15;
        setStop15IsSet(true);
        return this;
    }

    public void unsetStop15() {
        __isset_bit_vector.clear(__STOP15_ISSET_ID);
    }

    /**
     * Returns true if field stop15 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop15() {
        return __isset_bit_vector.get(__STOP15_ISSET_ID);
    }

    public void setStop15IsSet(boolean value) {
        __isset_bit_vector.set(__STOP15_ISSET_ID, value);
    }

    public int getStop16() {
        return this.stop16;
    }

    public Trade2 setStop16(int stop16) {
        this.stop16 = stop16;
        setStop16IsSet(true);
        return this;
    }

    public void unsetStop16() {
        __isset_bit_vector.clear(__STOP16_ISSET_ID);
    }

    /**
     * Returns true if field stop16 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop16() {
        return __isset_bit_vector.get(__STOP16_ISSET_ID);
    }

    public void setStop16IsSet(boolean value) {
        __isset_bit_vector.set(__STOP16_ISSET_ID, value);
    }

    public int getStop17() {
        return this.stop17;
    }

    public Trade2 setStop17(int stop17) {
        this.stop17 = stop17;
        setStop17IsSet(true);
        return this;
    }

    public void unsetStop17() {
        __isset_bit_vector.clear(__STOP17_ISSET_ID);
    }

    /**
     * Returns true if field stop17 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop17() {
        return __isset_bit_vector.get(__STOP17_ISSET_ID);
    }

    public void setStop17IsSet(boolean value) {
        __isset_bit_vector.set(__STOP17_ISSET_ID, value);
    }

    public int getStop18() {
        return this.stop18;
    }

    public Trade2 setStop18(int stop18) {
        this.stop18 = stop18;
        setStop18IsSet(true);
        return this;
    }

    public void unsetStop18() {
        __isset_bit_vector.clear(__STOP18_ISSET_ID);
    }

    /**
     * Returns true if field stop18 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop18() {
        return __isset_bit_vector.get(__STOP18_ISSET_ID);
    }

    public void setStop18IsSet(boolean value) {
        __isset_bit_vector.set(__STOP18_ISSET_ID, value);
    }

    public int getStop19() {
        return this.stop19;
    }

    public Trade2 setStop19(int stop19) {
        this.stop19 = stop19;
        setStop19IsSet(true);
        return this;
    }

    public void unsetStop19() {
        __isset_bit_vector.clear(__STOP19_ISSET_ID);
    }

    /**
     * Returns true if field stop19 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop19() {
        return __isset_bit_vector.get(__STOP19_ISSET_ID);
    }

    public void setStop19IsSet(boolean value) {
        __isset_bit_vector.set(__STOP19_ISSET_ID, value);
    }

    public int getStop20() {
        return this.stop20;
    }

    public Trade2 setStop20(int stop20) {
        this.stop20 = stop20;
        setStop20IsSet(true);
        return this;
    }

    public void unsetStop20() {
        __isset_bit_vector.clear(__STOP20_ISSET_ID);
    }

    /**
     * Returns true if field stop20 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop20() {
        return __isset_bit_vector.get(__STOP20_ISSET_ID);
    }

    public void setStop20IsSet(boolean value) {
        __isset_bit_vector.set(__STOP20_ISSET_ID, value);
    }

    public int getStop21() {
        return this.stop21;
    }

    public Trade2 setStop21(int stop21) {
        this.stop21 = stop21;
        setStop21IsSet(true);
        return this;
    }

    public void unsetStop21() {
        __isset_bit_vector.clear(__STOP21_ISSET_ID);
    }

    /**
     * Returns true if field stop21 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop21() {
        return __isset_bit_vector.get(__STOP21_ISSET_ID);
    }

    public void setStop21IsSet(boolean value) {
        __isset_bit_vector.set(__STOP21_ISSET_ID, value);
    }

    public int getStop22() {
        return this.stop22;
    }

    public Trade2 setStop22(int stop22) {
        this.stop22 = stop22;
        setStop22IsSet(true);
        return this;
    }

    public void unsetStop22() {
        __isset_bit_vector.clear(__STOP22_ISSET_ID);
    }

    /**
     * Returns true if field stop22 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop22() {
        return __isset_bit_vector.get(__STOP22_ISSET_ID);
    }

    public void setStop22IsSet(boolean value) {
        __isset_bit_vector.set(__STOP22_ISSET_ID, value);
    }

    public int getStop23() {
        return this.stop23;
    }

    public Trade2 setStop23(int stop23) {
        this.stop23 = stop23;
        setStop23IsSet(true);
        return this;
    }

    public void unsetStop23() {
        __isset_bit_vector.clear(__STOP23_ISSET_ID);
    }

    /**
     * Returns true if field stop23 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop23() {
        return __isset_bit_vector.get(__STOP23_ISSET_ID);
    }

    public void setStop23IsSet(boolean value) {
        __isset_bit_vector.set(__STOP23_ISSET_ID, value);
    }

    public int getStop24() {
        return this.stop24;
    }

    public Trade2 setStop24(int stop24) {
        this.stop24 = stop24;
        setStop24IsSet(true);
        return this;
    }

    public void unsetStop24() {
        __isset_bit_vector.clear(__STOP24_ISSET_ID);
    }

    /**
     * Returns true if field stop24 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop24() {
        return __isset_bit_vector.get(__STOP24_ISSET_ID);
    }

    public void setStop24IsSet(boolean value) {
        __isset_bit_vector.set(__STOP24_ISSET_ID, value);
    }

    public int getStop25() {
        return this.stop25;
    }

    public Trade2 setStop25(int stop25) {
        this.stop25 = stop25;
        setStop25IsSet(true);
        return this;
    }

    public void unsetStop25() {
        __isset_bit_vector.clear(__STOP25_ISSET_ID);
    }

    /**
     * Returns true if field stop25 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop25() {
        return __isset_bit_vector.get(__STOP25_ISSET_ID);
    }

    public void setStop25IsSet(boolean value) {
        __isset_bit_vector.set(__STOP25_ISSET_ID, value);
    }

    public int getStop35() {
        return this.stop35;
    }

    public Trade2 setStop35(int stop35) {
        this.stop35 = stop35;
        setStop35IsSet(true);
        return this;
    }

    public void unsetStop35() {
        __isset_bit_vector.clear(__STOP35_ISSET_ID);
    }

    /**
     * Returns true if field stop35 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop35() {
        return __isset_bit_vector.get(__STOP35_ISSET_ID);
    }

    public void setStop35IsSet(boolean value) {
        __isset_bit_vector.set(__STOP35_ISSET_ID, value);
    }

    public int getStop36() {
        return this.stop36;
    }

    public Trade2 setStop36(int stop36) {
        this.stop36 = stop36;
        setStop36IsSet(true);
        return this;
    }

    public void unsetStop36() {
        __isset_bit_vector.clear(__STOP36_ISSET_ID);
    }

    /**
     * Returns true if field stop36 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop36() {
        return __isset_bit_vector.get(__STOP36_ISSET_ID);
    }

    public void setStop36IsSet(boolean value) {
        __isset_bit_vector.set(__STOP36_ISSET_ID, value);
    }

    public int getStop37() {
        return this.stop37;
    }

    public Trade2 setStop37(int stop37) {
        this.stop37 = stop37;
        setStop37IsSet(true);
        return this;
    }

    public void unsetStop37() {
        __isset_bit_vector.clear(__STOP37_ISSET_ID);
    }

    /**
     * Returns true if field stop37 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop37() {
        return __isset_bit_vector.get(__STOP37_ISSET_ID);
    }

    public void setStop37IsSet(boolean value) {
        __isset_bit_vector.set(__STOP37_ISSET_ID, value);
    }

    public int getStop38() {
        return this.stop38;
    }

    public Trade2 setStop38(int stop38) {
        this.stop38 = stop38;
        setStop38IsSet(true);
        return this;
    }

    public void unsetStop38() {
        __isset_bit_vector.clear(__STOP38_ISSET_ID);
    }

    /**
     * Returns true if field stop38 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop38() {
        return __isset_bit_vector.get(__STOP38_ISSET_ID);
    }

    public void setStop38IsSet(boolean value) {
        __isset_bit_vector.set(__STOP38_ISSET_ID, value);
    }

    public int getStop39() {
        return this.stop39;
    }

    public Trade2 setStop39(int stop39) {
        this.stop39 = stop39;
        setStop39IsSet(true);
        return this;
    }

    public void unsetStop39() {
        __isset_bit_vector.clear(__STOP39_ISSET_ID);
    }

    /**
     * Returns true if field stop39 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop39() {
        return __isset_bit_vector.get(__STOP39_ISSET_ID);
    }

    public void setStop39IsSet(boolean value) {
        __isset_bit_vector.set(__STOP39_ISSET_ID, value);
    }

    public int getStop40() {
        return this.stop40;
    }

    public Trade2 setStop40(int stop40) {
        this.stop40 = stop40;
        setStop40IsSet(true);
        return this;
    }

    public void unsetStop40() {
        __isset_bit_vector.clear(__STOP40_ISSET_ID);
    }

    /**
     * Returns true if field stop40 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop40() {
        return __isset_bit_vector.get(__STOP40_ISSET_ID);
    }

    public void setStop40IsSet(boolean value) {
        __isset_bit_vector.set(__STOP40_ISSET_ID, value);
    }

    public int getStop41() {
        return this.stop41;
    }

    public Trade2 setStop41(int stop41) {
        this.stop41 = stop41;
        setStop41IsSet(true);
        return this;
    }

    public void unsetStop41() {
        __isset_bit_vector.clear(__STOP41_ISSET_ID);
    }

    /**
     * Returns true if field stop41 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop41() {
        return __isset_bit_vector.get(__STOP41_ISSET_ID);
    }

    public void setStop41IsSet(boolean value) {
        __isset_bit_vector.set(__STOP41_ISSET_ID, value);
    }

    public int getStop42() {
        return this.stop42;
    }

    public Trade2 setStop42(int stop42) {
        this.stop42 = stop42;
        setStop42IsSet(true);
        return this;
    }

    public void unsetStop42() {
        __isset_bit_vector.clear(__STOP42_ISSET_ID);
    }

    /**
     * Returns true if field stop42 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop42() {
        return __isset_bit_vector.get(__STOP42_ISSET_ID);
    }

    public void setStop42IsSet(boolean value) {
        __isset_bit_vector.set(__STOP42_ISSET_ID, value);
    }

    public int getStop43() {
        return this.stop43;
    }

    public Trade2 setStop43(int stop43) {
        this.stop43 = stop43;
        setStop43IsSet(true);
        return this;
    }

    public void unsetStop43() {
        __isset_bit_vector.clear(__STOP43_ISSET_ID);
    }

    /**
     * Returns true if field stop43 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop43() {
        return __isset_bit_vector.get(__STOP43_ISSET_ID);
    }

    public void setStop43IsSet(boolean value) {
        __isset_bit_vector.set(__STOP43_ISSET_ID, value);
    }

    public int getStop44() {
        return this.stop44;
    }

    public Trade2 setStop44(int stop44) {
        this.stop44 = stop44;
        setStop44IsSet(true);
        return this;
    }

    public void unsetStop44() {
        __isset_bit_vector.clear(__STOP44_ISSET_ID);
    }

    /**
     * Returns true if field stop44 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop44() {
        return __isset_bit_vector.get(__STOP44_ISSET_ID);
    }

    public void setStop44IsSet(boolean value) {
        __isset_bit_vector.set(__STOP44_ISSET_ID, value);
    }

    public int getStop45() {
        return this.stop45;
    }

    public Trade2 setStop45(int stop45) {
        this.stop45 = stop45;
        setStop45IsSet(true);
        return this;
    }

    public void unsetStop45() {
        __isset_bit_vector.clear(__STOP45_ISSET_ID);
    }

    /**
     * Returns true if field stop45 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop45() {
        return __isset_bit_vector.get(__STOP45_ISSET_ID);
    }

    public void setStop45IsSet(boolean value) {
        __isset_bit_vector.set(__STOP45_ISSET_ID, value);
    }

    public int getStop46() {
        return this.stop46;
    }

    public Trade2 setStop46(int stop46) {
        this.stop46 = stop46;
        setStop46IsSet(true);
        return this;
    }

    public void unsetStop46() {
        __isset_bit_vector.clear(__STOP46_ISSET_ID);
    }

    /**
     * Returns true if field stop46 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop46() {
        return __isset_bit_vector.get(__STOP46_ISSET_ID);
    }

    public void setStop46IsSet(boolean value) {
        __isset_bit_vector.set(__STOP46_ISSET_ID, value);
    }

    public int getStop47() {
        return this.stop47;
    }

    public Trade2 setStop47(int stop47) {
        this.stop47 = stop47;
        setStop47IsSet(true);
        return this;
    }

    public void unsetStop47() {
        __isset_bit_vector.clear(__STOP47_ISSET_ID);
    }

    /**
     * Returns true if field stop47 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop47() {
        return __isset_bit_vector.get(__STOP47_ISSET_ID);
    }

    public void setStop47IsSet(boolean value) {
        __isset_bit_vector.set(__STOP47_ISSET_ID, value);
    }

    public int getStop48() {
        return this.stop48;
    }

    public Trade2 setStop48(int stop48) {
        this.stop48 = stop48;
        setStop48IsSet(true);
        return this;
    }

    public void unsetStop48() {
        __isset_bit_vector.clear(__STOP48_ISSET_ID);
    }

    /**
     * Returns true if field stop48 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop48() {
        return __isset_bit_vector.get(__STOP48_ISSET_ID);
    }

    public void setStop48IsSet(boolean value) {
        __isset_bit_vector.set(__STOP48_ISSET_ID, value);
    }

    public int getStop49() {
        return this.stop49;
    }

    public Trade2 setStop49(int stop49) {
        this.stop49 = stop49;
        setStop49IsSet(true);
        return this;
    }

    public void unsetStop49() {
        __isset_bit_vector.clear(__STOP49_ISSET_ID);
    }

    /**
     * Returns true if field stop49 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop49() {
        return __isset_bit_vector.get(__STOP49_ISSET_ID);
    }

    public void setStop49IsSet(boolean value) {
        __isset_bit_vector.set(__STOP49_ISSET_ID, value);
    }

    public int getStop50() {
        return this.stop50;
    }

    public Trade2 setStop50(int stop50) {
        this.stop50 = stop50;
        setStop50IsSet(true);
        return this;
    }

    public void unsetStop50() {
        __isset_bit_vector.clear(__STOP50_ISSET_ID);
    }

    /**
     * Returns true if field stop50 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop50() {
        return __isset_bit_vector.get(__STOP50_ISSET_ID);
    }

    public void setStop50IsSet(boolean value) {
        __isset_bit_vector.set(__STOP50_ISSET_ID, value);
    }

    public int getStop51() {
        return this.stop51;
    }

    public Trade2 setStop51(int stop51) {
        this.stop51 = stop51;
        setStop51IsSet(true);
        return this;
    }

    public void unsetStop51() {
        __isset_bit_vector.clear(__STOP51_ISSET_ID);
    }

    /**
     * Returns true if field stop51 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop51() {
        return __isset_bit_vector.get(__STOP51_ISSET_ID);
    }

    public void setStop51IsSet(boolean value) {
        __isset_bit_vector.set(__STOP51_ISSET_ID, value);
    }

    public int getStop52() {
        return this.stop52;
    }

    public Trade2 setStop52(int stop52) {
        this.stop52 = stop52;
        setStop52IsSet(true);
        return this;
    }

    public void unsetStop52() {
        __isset_bit_vector.clear(__STOP52_ISSET_ID);
    }

    /**
     * Returns true if field stop52 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop52() {
        return __isset_bit_vector.get(__STOP52_ISSET_ID);
    }

    public void setStop52IsSet(boolean value) {
        __isset_bit_vector.set(__STOP52_ISSET_ID, value);
    }

    public int getStop53() {
        return this.stop53;
    }

    public Trade2 setStop53(int stop53) {
        this.stop53 = stop53;
        setStop53IsSet(true);
        return this;
    }

    public void unsetStop53() {
        __isset_bit_vector.clear(__STOP53_ISSET_ID);
    }

    /**
     * Returns true if field stop53 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop53() {
        return __isset_bit_vector.get(__STOP53_ISSET_ID);
    }

    public void setStop53IsSet(boolean value) {
        __isset_bit_vector.set(__STOP53_ISSET_ID, value);
    }

    public int getStop54() {
        return this.stop54;
    }

    public Trade2 setStop54(int stop54) {
        this.stop54 = stop54;
        setStop54IsSet(true);
        return this;
    }

    public void unsetStop54() {
        __isset_bit_vector.clear(__STOP54_ISSET_ID);
    }

    /**
     * Returns true if field stop54 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop54() {
        return __isset_bit_vector.get(__STOP54_ISSET_ID);
    }

    public void setStop54IsSet(boolean value) {
        __isset_bit_vector.set(__STOP54_ISSET_ID, value);
    }

    public int getStop55() {
        return this.stop55;
    }

    public Trade2 setStop55(int stop55) {
        this.stop55 = stop55;
        setStop55IsSet(true);
        return this;
    }

    public void unsetStop55() {
        __isset_bit_vector.clear(__STOP55_ISSET_ID);
    }

    /**
     * Returns true if field stop55 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop55() {
        return __isset_bit_vector.get(__STOP55_ISSET_ID);
    }

    public void setStop55IsSet(boolean value) {
        __isset_bit_vector.set(__STOP55_ISSET_ID, value);
    }

    public int getStop56() {
        return this.stop56;
    }

    public Trade2 setStop56(int stop56) {
        this.stop56 = stop56;
        setStop56IsSet(true);
        return this;
    }

    public void unsetStop56() {
        __isset_bit_vector.clear(__STOP56_ISSET_ID);
    }

    /**
     * Returns true if field stop56 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop56() {
        return __isset_bit_vector.get(__STOP56_ISSET_ID);
    }

    public void setStop56IsSet(boolean value) {
        __isset_bit_vector.set(__STOP56_ISSET_ID, value);
    }

    public int getStop57() {
        return this.stop57;
    }

    public Trade2 setStop57(int stop57) {
        this.stop57 = stop57;
        setStop57IsSet(true);
        return this;
    }

    public void unsetStop57() {
        __isset_bit_vector.clear(__STOP57_ISSET_ID);
    }

    /**
     * Returns true if field stop57 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop57() {
        return __isset_bit_vector.get(__STOP57_ISSET_ID);
    }

    public void setStop57IsSet(boolean value) {
        __isset_bit_vector.set(__STOP57_ISSET_ID, value);
    }

    public int getStop58() {
        return this.stop58;
    }

    public Trade2 setStop58(int stop58) {
        this.stop58 = stop58;
        setStop58IsSet(true);
        return this;
    }

    public void unsetStop58() {
        __isset_bit_vector.clear(__STOP58_ISSET_ID);
    }

    /**
     * Returns true if field stop58 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop58() {
        return __isset_bit_vector.get(__STOP58_ISSET_ID);
    }

    public void setStop58IsSet(boolean value) {
        __isset_bit_vector.set(__STOP58_ISSET_ID, value);
    }

    public int getStop59() {
        return this.stop59;
    }

    public Trade2 setStop59(int stop59) {
        this.stop59 = stop59;
        setStop59IsSet(true);
        return this;
    }

    public void unsetStop59() {
        __isset_bit_vector.clear(__STOP59_ISSET_ID);
    }

    /**
     * Returns true if field stop59 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop59() {
        return __isset_bit_vector.get(__STOP59_ISSET_ID);
    }

    public void setStop59IsSet(boolean value) {
        __isset_bit_vector.set(__STOP59_ISSET_ID, value);
    }

    public int getStop60() {
        return this.stop60;
    }

    public Trade2 setStop60(int stop60) {
        this.stop60 = stop60;
        setStop60IsSet(true);
        return this;
    }

    public void unsetStop60() {
        __isset_bit_vector.clear(__STOP60_ISSET_ID);
    }

    /**
     * Returns true if field stop60 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop60() {
        return __isset_bit_vector.get(__STOP60_ISSET_ID);
    }

    public void setStop60IsSet(boolean value) {
        __isset_bit_vector.set(__STOP60_ISSET_ID, value);
    }

    public int getStop61() {
        return this.stop61;
    }

    public Trade2 setStop61(int stop61) {
        this.stop61 = stop61;
        setStop61IsSet(true);
        return this;
    }

    public void unsetStop61() {
        __isset_bit_vector.clear(__STOP61_ISSET_ID);
    }

    /**
     * Returns true if field stop61 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop61() {
        return __isset_bit_vector.get(__STOP61_ISSET_ID);
    }

    public void setStop61IsSet(boolean value) {
        __isset_bit_vector.set(__STOP61_ISSET_ID, value);
    }

    public int getStop62() {
        return this.stop62;
    }

    public Trade2 setStop62(int stop62) {
        this.stop62 = stop62;
        setStop62IsSet(true);
        return this;
    }

    public void unsetStop62() {
        __isset_bit_vector.clear(__STOP62_ISSET_ID);
    }

    /**
     * Returns true if field stop62 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop62() {
        return __isset_bit_vector.get(__STOP62_ISSET_ID);
    }

    public void setStop62IsSet(boolean value) {
        __isset_bit_vector.set(__STOP62_ISSET_ID, value);
    }

    public int getStop63() {
        return this.stop63;
    }

    public Trade2 setStop63(int stop63) {
        this.stop63 = stop63;
        setStop63IsSet(true);
        return this;
    }

    public void unsetStop63() {
        __isset_bit_vector.clear(__STOP63_ISSET_ID);
    }

    /**
     * Returns true if field stop63 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop63() {
        return __isset_bit_vector.get(__STOP63_ISSET_ID);
    }

    public void setStop63IsSet(boolean value) {
        __isset_bit_vector.set(__STOP63_ISSET_ID, value);
    }

    public int getStop64() {
        return this.stop64;
    }

    public Trade2 setStop64(int stop64) {
        this.stop64 = stop64;
        setStop64IsSet(true);
        return this;
    }

    public void unsetStop64() {
        __isset_bit_vector.clear(__STOP64_ISSET_ID);
    }

    /**
     * Returns true if field stop64 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop64() {
        return __isset_bit_vector.get(__STOP64_ISSET_ID);
    }

    public void setStop64IsSet(boolean value) {
        __isset_bit_vector.set(__STOP64_ISSET_ID, value);
    }

    public int getStop65() {
        return this.stop65;
    }

    public Trade2 setStop65(int stop65) {
        this.stop65 = stop65;
        setStop65IsSet(true);
        return this;
    }

    public void unsetStop65() {
        __isset_bit_vector.clear(__STOP65_ISSET_ID);
    }

    /**
     * Returns true if field stop65 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop65() {
        return __isset_bit_vector.get(__STOP65_ISSET_ID);
    }

    public void setStop65IsSet(boolean value) {
        __isset_bit_vector.set(__STOP65_ISSET_ID, value);
    }

    public int getStop66() {
        return this.stop66;
    }

    public Trade2 setStop66(int stop66) {
        this.stop66 = stop66;
        setStop66IsSet(true);
        return this;
    }

    public void unsetStop66() {
        __isset_bit_vector.clear(__STOP66_ISSET_ID);
    }

    /**
     * Returns true if field stop66 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop66() {
        return __isset_bit_vector.get(__STOP66_ISSET_ID);
    }

    public void setStop66IsSet(boolean value) {
        __isset_bit_vector.set(__STOP66_ISSET_ID, value);
    }

    public int getStop67() {
        return this.stop67;
    }

    public Trade2 setStop67(int stop67) {
        this.stop67 = stop67;
        setStop67IsSet(true);
        return this;
    }

    public void unsetStop67() {
        __isset_bit_vector.clear(__STOP67_ISSET_ID);
    }

    /**
     * Returns true if field stop67 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop67() {
        return __isset_bit_vector.get(__STOP67_ISSET_ID);
    }

    public void setStop67IsSet(boolean value) {
        __isset_bit_vector.set(__STOP67_ISSET_ID, value);
    }

    public int getStop68() {
        return this.stop68;
    }

    public Trade2 setStop68(int stop68) {
        this.stop68 = stop68;
        setStop68IsSet(true);
        return this;
    }

    public void unsetStop68() {
        __isset_bit_vector.clear(__STOP68_ISSET_ID);
    }

    /**
     * Returns true if field stop68 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop68() {
        return __isset_bit_vector.get(__STOP68_ISSET_ID);
    }

    public void setStop68IsSet(boolean value) {
        __isset_bit_vector.set(__STOP68_ISSET_ID, value);
    }

    public int getStop69() {
        return this.stop69;
    }

    public Trade2 setStop69(int stop69) {
        this.stop69 = stop69;
        setStop69IsSet(true);
        return this;
    }

    public void unsetStop69() {
        __isset_bit_vector.clear(__STOP69_ISSET_ID);
    }

    /**
     * Returns true if field stop69 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop69() {
        return __isset_bit_vector.get(__STOP69_ISSET_ID);
    }

    public void setStop69IsSet(boolean value) {
        __isset_bit_vector.set(__STOP69_ISSET_ID, value);
    }

    public int getStop70() {
        return this.stop70;
    }

    public Trade2 setStop70(int stop70) {
        this.stop70 = stop70;
        setStop70IsSet(true);
        return this;
    }

    public void unsetStop70() {
        __isset_bit_vector.clear(__STOP70_ISSET_ID);
    }

    /**
     * Returns true if field stop70 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop70() {
        return __isset_bit_vector.get(__STOP70_ISSET_ID);
    }

    public void setStop70IsSet(boolean value) {
        __isset_bit_vector.set(__STOP70_ISSET_ID, value);
    }

    public int getStop71() {
        return this.stop71;
    }

    public Trade2 setStop71(int stop71) {
        this.stop71 = stop71;
        setStop71IsSet(true);
        return this;
    }

    public void unsetStop71() {
        __isset_bit_vector.clear(__STOP71_ISSET_ID);
    }

    /**
     * Returns true if field stop71 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop71() {
        return __isset_bit_vector.get(__STOP71_ISSET_ID);
    }

    public void setStop71IsSet(boolean value) {
        __isset_bit_vector.set(__STOP71_ISSET_ID, value);
    }

    public int getStop72() {
        return this.stop72;
    }

    public Trade2 setStop72(int stop72) {
        this.stop72 = stop72;
        setStop72IsSet(true);
        return this;
    }

    public void unsetStop72() {
        __isset_bit_vector.clear(__STOP72_ISSET_ID);
    }

    /**
     * Returns true if field stop72 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop72() {
        return __isset_bit_vector.get(__STOP72_ISSET_ID);
    }

    public void setStop72IsSet(boolean value) {
        __isset_bit_vector.set(__STOP72_ISSET_ID, value);
    }

    public int getStop73() {
        return this.stop73;
    }

    public Trade2 setStop73(int stop73) {
        this.stop73 = stop73;
        setStop73IsSet(true);
        return this;
    }

    public void unsetStop73() {
        __isset_bit_vector.clear(__STOP73_ISSET_ID);
    }

    /**
     * Returns true if field stop73 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop73() {
        return __isset_bit_vector.get(__STOP73_ISSET_ID);
    }

    public void setStop73IsSet(boolean value) {
        __isset_bit_vector.set(__STOP73_ISSET_ID, value);
    }

    public int getStop74() {
        return this.stop74;
    }

    public Trade2 setStop74(int stop74) {
        this.stop74 = stop74;
        setStop74IsSet(true);
        return this;
    }

    public void unsetStop74() {
        __isset_bit_vector.clear(__STOP74_ISSET_ID);
    }

    /**
     * Returns true if field stop74 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop74() {
        return __isset_bit_vector.get(__STOP74_ISSET_ID);
    }

    public void setStop74IsSet(boolean value) {
        __isset_bit_vector.set(__STOP74_ISSET_ID, value);
    }

    public int getStop75() {
        return this.stop75;
    }

    public Trade2 setStop75(int stop75) {
        this.stop75 = stop75;
        setStop75IsSet(true);
        return this;
    }

    public void unsetStop75() {
        __isset_bit_vector.clear(__STOP75_ISSET_ID);
    }

    /**
     * Returns true if field stop75 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop75() {
        return __isset_bit_vector.get(__STOP75_ISSET_ID);
    }

    public void setStop75IsSet(boolean value) {
        __isset_bit_vector.set(__STOP75_ISSET_ID, value);
    }

    public int getStop76() {
        return this.stop76;
    }

    public Trade2 setStop76(int stop76) {
        this.stop76 = stop76;
        setStop76IsSet(true);
        return this;
    }

    public void unsetStop76() {
        __isset_bit_vector.clear(__STOP76_ISSET_ID);
    }

    /**
     * Returns true if field stop76 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop76() {
        return __isset_bit_vector.get(__STOP76_ISSET_ID);
    }

    public void setStop76IsSet(boolean value) {
        __isset_bit_vector.set(__STOP76_ISSET_ID, value);
    }

    public int getStop77() {
        return this.stop77;
    }

    public Trade2 setStop77(int stop77) {
        this.stop77 = stop77;
        setStop77IsSet(true);
        return this;
    }

    public void unsetStop77() {
        __isset_bit_vector.clear(__STOP77_ISSET_ID);
    }

    /**
     * Returns true if field stop77 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop77() {
        return __isset_bit_vector.get(__STOP77_ISSET_ID);
    }

    public void setStop77IsSet(boolean value) {
        __isset_bit_vector.set(__STOP77_ISSET_ID, value);
    }

    public int getStop78() {
        return this.stop78;
    }

    public Trade2 setStop78(int stop78) {
        this.stop78 = stop78;
        setStop78IsSet(true);
        return this;
    }

    public void unsetStop78() {
        __isset_bit_vector.clear(__STOP78_ISSET_ID);
    }

    /**
     * Returns true if field stop78 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop78() {
        return __isset_bit_vector.get(__STOP78_ISSET_ID);
    }

    public void setStop78IsSet(boolean value) {
        __isset_bit_vector.set(__STOP78_ISSET_ID, value);
    }

    public int getStop79() {
        return this.stop79;
    }

    public Trade2 setStop79(int stop79) {
        this.stop79 = stop79;
        setStop79IsSet(true);
        return this;
    }

    public void unsetStop79() {
        __isset_bit_vector.clear(__STOP79_ISSET_ID);
    }

    /**
     * Returns true if field stop79 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop79() {
        return __isset_bit_vector.get(__STOP79_ISSET_ID);
    }

    public void setStop79IsSet(boolean value) {
        __isset_bit_vector.set(__STOP79_ISSET_ID, value);
    }

    public int getStop80() {
        return this.stop80;
    }

    public Trade2 setStop80(int stop80) {
        this.stop80 = stop80;
        setStop80IsSet(true);
        return this;
    }

    public void unsetStop80() {
        __isset_bit_vector.clear(__STOP80_ISSET_ID);
    }

    /**
     * Returns true if field stop80 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop80() {
        return __isset_bit_vector.get(__STOP80_ISSET_ID);
    }

    public void setStop80IsSet(boolean value) {
        __isset_bit_vector.set(__STOP80_ISSET_ID, value);
    }

    public int getStop81() {
        return this.stop81;
    }

    public Trade2 setStop81(int stop81) {
        this.stop81 = stop81;
        setStop81IsSet(true);
        return this;
    }

    public void unsetStop81() {
        __isset_bit_vector.clear(__STOP81_ISSET_ID);
    }

    /**
     * Returns true if field stop81 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop81() {
        return __isset_bit_vector.get(__STOP81_ISSET_ID);
    }

    public void setStop81IsSet(boolean value) {
        __isset_bit_vector.set(__STOP81_ISSET_ID, value);
    }

    public int getStop82() {
        return this.stop82;
    }

    public Trade2 setStop82(int stop82) {
        this.stop82 = stop82;
        setStop82IsSet(true);
        return this;
    }

    public void unsetStop82() {
        __isset_bit_vector.clear(__STOP82_ISSET_ID);
    }

    /**
     * Returns true if field stop82 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop82() {
        return __isset_bit_vector.get(__STOP82_ISSET_ID);
    }

    public void setStop82IsSet(boolean value) {
        __isset_bit_vector.set(__STOP82_ISSET_ID, value);
    }

    public int getStop83() {
        return this.stop83;
    }

    public Trade2 setStop83(int stop83) {
        this.stop83 = stop83;
        setStop83IsSet(true);
        return this;
    }

    public void unsetStop83() {
        __isset_bit_vector.clear(__STOP83_ISSET_ID);
    }

    /**
     * Returns true if field stop83 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop83() {
        return __isset_bit_vector.get(__STOP83_ISSET_ID);
    }

    public void setStop83IsSet(boolean value) {
        __isset_bit_vector.set(__STOP83_ISSET_ID, value);
    }

    public int getStop84() {
        return this.stop84;
    }

    public Trade2 setStop84(int stop84) {
        this.stop84 = stop84;
        setStop84IsSet(true);
        return this;
    }

    public void unsetStop84() {
        __isset_bit_vector.clear(__STOP84_ISSET_ID);
    }

    /**
     * Returns true if field stop84 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop84() {
        return __isset_bit_vector.get(__STOP84_ISSET_ID);
    }

    public void setStop84IsSet(boolean value) {
        __isset_bit_vector.set(__STOP84_ISSET_ID, value);
    }

    public int getStop85() {
        return this.stop85;
    }

    public Trade2 setStop85(int stop85) {
        this.stop85 = stop85;
        setStop85IsSet(true);
        return this;
    }

    public void unsetStop85() {
        __isset_bit_vector.clear(__STOP85_ISSET_ID);
    }

    /**
     * Returns true if field stop85 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop85() {
        return __isset_bit_vector.get(__STOP85_ISSET_ID);
    }

    public void setStop85IsSet(boolean value) {
        __isset_bit_vector.set(__STOP85_ISSET_ID, value);
    }

    public int getStop86() {
        return this.stop86;
    }

    public Trade2 setStop86(int stop86) {
        this.stop86 = stop86;
        setStop86IsSet(true);
        return this;
    }

    public void unsetStop86() {
        __isset_bit_vector.clear(__STOP86_ISSET_ID);
    }

    /**
     * Returns true if field stop86 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop86() {
        return __isset_bit_vector.get(__STOP86_ISSET_ID);
    }

    public void setStop86IsSet(boolean value) {
        __isset_bit_vector.set(__STOP86_ISSET_ID, value);
    }

    public int getStop87() {
        return this.stop87;
    }

    public Trade2 setStop87(int stop87) {
        this.stop87 = stop87;
        setStop87IsSet(true);
        return this;
    }

    public void unsetStop87() {
        __isset_bit_vector.clear(__STOP87_ISSET_ID);
    }

    /**
     * Returns true if field stop87 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop87() {
        return __isset_bit_vector.get(__STOP87_ISSET_ID);
    }

    public void setStop87IsSet(boolean value) {
        __isset_bit_vector.set(__STOP87_ISSET_ID, value);
    }

    public int getStop88() {
        return this.stop88;
    }

    public Trade2 setStop88(int stop88) {
        this.stop88 = stop88;
        setStop88IsSet(true);
        return this;
    }

    public void unsetStop88() {
        __isset_bit_vector.clear(__STOP88_ISSET_ID);
    }

    /**
     * Returns true if field stop88 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop88() {
        return __isset_bit_vector.get(__STOP88_ISSET_ID);
    }

    public void setStop88IsSet(boolean value) {
        __isset_bit_vector.set(__STOP88_ISSET_ID, value);
    }

    public int getStop89() {
        return this.stop89;
    }

    public Trade2 setStop89(int stop89) {
        this.stop89 = stop89;
        setStop89IsSet(true);
        return this;
    }

    public void unsetStop89() {
        __isset_bit_vector.clear(__STOP89_ISSET_ID);
    }

    /**
     * Returns true if field stop89 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop89() {
        return __isset_bit_vector.get(__STOP89_ISSET_ID);
    }

    public void setStop89IsSet(boolean value) {
        __isset_bit_vector.set(__STOP89_ISSET_ID, value);
    }

    public int getStop90() {
        return this.stop90;
    }

    public Trade2 setStop90(int stop90) {
        this.stop90 = stop90;
        setStop90IsSet(true);
        return this;
    }

    public void unsetStop90() {
        __isset_bit_vector.clear(__STOP90_ISSET_ID);
    }

    /**
     * Returns true if field stop90 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop90() {
        return __isset_bit_vector.get(__STOP90_ISSET_ID);
    }

    public void setStop90IsSet(boolean value) {
        __isset_bit_vector.set(__STOP90_ISSET_ID, value);
    }

    public int getStop91() {
        return this.stop91;
    }

    public Trade2 setStop91(int stop91) {
        this.stop91 = stop91;
        setStop91IsSet(true);
        return this;
    }

    public void unsetStop91() {
        __isset_bit_vector.clear(__STOP91_ISSET_ID);
    }

    /**
     * Returns true if field stop91 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop91() {
        return __isset_bit_vector.get(__STOP91_ISSET_ID);
    }

    public void setStop91IsSet(boolean value) {
        __isset_bit_vector.set(__STOP91_ISSET_ID, value);
    }

    public int getStop92() {
        return this.stop92;
    }

    public Trade2 setStop92(int stop92) {
        this.stop92 = stop92;
        setStop92IsSet(true);
        return this;
    }

    public void unsetStop92() {
        __isset_bit_vector.clear(__STOP92_ISSET_ID);
    }

    /**
     * Returns true if field stop92 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop92() {
        return __isset_bit_vector.get(__STOP92_ISSET_ID);
    }

    public void setStop92IsSet(boolean value) {
        __isset_bit_vector.set(__STOP92_ISSET_ID, value);
    }

    public int getStop93() {
        return this.stop93;
    }

    public Trade2 setStop93(int stop93) {
        this.stop93 = stop93;
        setStop93IsSet(true);
        return this;
    }

    public void unsetStop93() {
        __isset_bit_vector.clear(__STOP93_ISSET_ID);
    }

    /**
     * Returns true if field stop93 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop93() {
        return __isset_bit_vector.get(__STOP93_ISSET_ID);
    }

    public void setStop93IsSet(boolean value) {
        __isset_bit_vector.set(__STOP93_ISSET_ID, value);
    }

    public int getStop94() {
        return this.stop94;
    }

    public Trade2 setStop94(int stop94) {
        this.stop94 = stop94;
        setStop94IsSet(true);
        return this;
    }

    public void unsetStop94() {
        __isset_bit_vector.clear(__STOP94_ISSET_ID);
    }

    /**
     * Returns true if field stop94 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop94() {
        return __isset_bit_vector.get(__STOP94_ISSET_ID);
    }

    public void setStop94IsSet(boolean value) {
        __isset_bit_vector.set(__STOP94_ISSET_ID, value);
    }

    public int getStop95() {
        return this.stop95;
    }

    public Trade2 setStop95(int stop95) {
        this.stop95 = stop95;
        setStop95IsSet(true);
        return this;
    }

    public void unsetStop95() {
        __isset_bit_vector.clear(__STOP95_ISSET_ID);
    }

    /**
     * Returns true if field stop95 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop95() {
        return __isset_bit_vector.get(__STOP95_ISSET_ID);
    }

    public void setStop95IsSet(boolean value) {
        __isset_bit_vector.set(__STOP95_ISSET_ID, value);
    }

    public int getStop96() {
        return this.stop96;
    }

    public Trade2 setStop96(int stop96) {
        this.stop96 = stop96;
        setStop96IsSet(true);
        return this;
    }

    public void unsetStop96() {
        __isset_bit_vector.clear(__STOP96_ISSET_ID);
    }

    /**
     * Returns true if field stop96 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop96() {
        return __isset_bit_vector.get(__STOP96_ISSET_ID);
    }

    public void setStop96IsSet(boolean value) {
        __isset_bit_vector.set(__STOP96_ISSET_ID, value);
    }

    public int getStop97() {
        return this.stop97;
    }

    public Trade2 setStop97(int stop97) {
        this.stop97 = stop97;
        setStop97IsSet(true);
        return this;
    }

    public void unsetStop97() {
        __isset_bit_vector.clear(__STOP97_ISSET_ID);
    }

    /**
     * Returns true if field stop97 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop97() {
        return __isset_bit_vector.get(__STOP97_ISSET_ID);
    }

    public void setStop97IsSet(boolean value) {
        __isset_bit_vector.set(__STOP97_ISSET_ID, value);
    }

    public int getStop98() {
        return this.stop98;
    }

    public Trade2 setStop98(int stop98) {
        this.stop98 = stop98;
        setStop98IsSet(true);
        return this;
    }

    public void unsetStop98() {
        __isset_bit_vector.clear(__STOP98_ISSET_ID);
    }

    /**
     * Returns true if field stop98 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop98() {
        return __isset_bit_vector.get(__STOP98_ISSET_ID);
    }

    public void setStop98IsSet(boolean value) {
        __isset_bit_vector.set(__STOP98_ISSET_ID, value);
    }

    public int getStop99() {
        return this.stop99;
    }

    public Trade2 setStop99(int stop99) {
        this.stop99 = stop99;
        setStop99IsSet(true);
        return this;
    }

    public void unsetStop99() {
        __isset_bit_vector.clear(__STOP99_ISSET_ID);
    }

    /**
     * Returns true if field stop99 is set (has been assigned a value) and false otherwise
     */
    public boolean isSetStop99() {
        return __isset_bit_vector.get(__STOP99_ISSET_ID);
    }

    public void setStop99IsSet(boolean value) {
        __isset_bit_vector.set(__STOP99_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
        switch (field) {
            case TIMESTAMP:
                if (value == null) {
                    unsetTimestamp();
                } else {
                    setTimestamp((Long) value);
                }
                break;

            case SYM:
                if (value == null) {
                    unsetSym();
                } else {
                    setSym((String) value);
                }
                break;

            case PRICE:
                if (value == null) {
                    unsetPrice();
                } else {
                    setPrice((Double) value);
                }
                break;

            case SIZE:
                if (value == null) {
                    unsetSize();
                } else {
                    setSize((Integer) value);
                }
                break;

            case STOP:
                if (value == null) {
                    unsetStop();
                } else {
                    setStop((Integer) value);
                }
                break;

            case COND:
                if (value == null) {
                    unsetCond();
                } else {
                    setCond((String) value);
                }
                break;

            case EX:
                if (value == null) {
                    unsetEx();
                } else {
                    setEx((String) value);
                }
                break;

            case STOP1:
                if (value == null) {
                    unsetStop1();
                } else {
                    setStop1((Integer) value);
                }
                break;

            case STOP2:
                if (value == null) {
                    unsetStop2();
                } else {
                    setStop2((Integer) value);
                }
                break;

            case STOP3:
                if (value == null) {
                    unsetStop3();
                } else {
                    setStop3((Integer) value);
                }
                break;

            case STOP4:
                if (value == null) {
                    unsetStop4();
                } else {
                    setStop4((Integer) value);
                }
                break;

            case STOP5:
                if (value == null) {
                    unsetStop5();
                } else {
                    setStop5((Integer) value);
                }
                break;

            case STOP6:
                if (value == null) {
                    unsetStop6();
                } else {
                    setStop6((Integer) value);
                }
                break;

            case STOP7:
                if (value == null) {
                    unsetStop7();
                } else {
                    setStop7((Integer) value);
                }
                break;

            case STOP8:
                if (value == null) {
                    unsetStop8();
                } else {
                    setStop8((Integer) value);
                }
                break;

            case STOP9:
                if (value == null) {
                    unsetStop9();
                } else {
                    setStop9((Integer) value);
                }
                break;

            case STOP10:
                if (value == null) {
                    unsetStop10();
                } else {
                    setStop10((Integer) value);
                }
                break;

            case STOP11:
                if (value == null) {
                    unsetStop11();
                } else {
                    setStop11((Integer) value);
                }
                break;

            case STOP12:
                if (value == null) {
                    unsetStop12();
                } else {
                    setStop12((Integer) value);
                }
                break;

            case STOP13:
                if (value == null) {
                    unsetStop13();
                } else {
                    setStop13((Integer) value);
                }
                break;

            case STOP14:
                if (value == null) {
                    unsetStop14();
                } else {
                    setStop14((Integer) value);
                }
                break;

            case STOP15:
                if (value == null) {
                    unsetStop15();
                } else {
                    setStop15((Integer) value);
                }
                break;

            case STOP16:
                if (value == null) {
                    unsetStop16();
                } else {
                    setStop16((Integer) value);
                }
                break;

            case STOP17:
                if (value == null) {
                    unsetStop17();
                } else {
                    setStop17((Integer) value);
                }
                break;

            case STOP18:
                if (value == null) {
                    unsetStop18();
                } else {
                    setStop18((Integer) value);
                }
                break;

            case STOP19:
                if (value == null) {
                    unsetStop19();
                } else {
                    setStop19((Integer) value);
                }
                break;

            case STOP20:
                if (value == null) {
                    unsetStop20();
                } else {
                    setStop20((Integer) value);
                }
                break;

            case STOP21:
                if (value == null) {
                    unsetStop21();
                } else {
                    setStop21((Integer) value);
                }
                break;

            case STOP22:
                if (value == null) {
                    unsetStop22();
                } else {
                    setStop22((Integer) value);
                }
                break;

            case STOP23:
                if (value == null) {
                    unsetStop23();
                } else {
                    setStop23((Integer) value);
                }
                break;

            case STOP24:
                if (value == null) {
                    unsetStop24();
                } else {
                    setStop24((Integer) value);
                }
                break;

            case STOP25:
                if (value == null) {
                    unsetStop25();
                } else {
                    setStop25((Integer) value);
                }
                break;

            case STOP35:
                if (value == null) {
                    unsetStop35();
                } else {
                    setStop35((Integer) value);
                }
                break;

            case STOP36:
                if (value == null) {
                    unsetStop36();
                } else {
                    setStop36((Integer) value);
                }
                break;

            case STOP37:
                if (value == null) {
                    unsetStop37();
                } else {
                    setStop37((Integer) value);
                }
                break;

            case STOP38:
                if (value == null) {
                    unsetStop38();
                } else {
                    setStop38((Integer) value);
                }
                break;

            case STOP39:
                if (value == null) {
                    unsetStop39();
                } else {
                    setStop39((Integer) value);
                }
                break;

            case STOP40:
                if (value == null) {
                    unsetStop40();
                } else {
                    setStop40((Integer) value);
                }
                break;

            case STOP41:
                if (value == null) {
                    unsetStop41();
                } else {
                    setStop41((Integer) value);
                }
                break;

            case STOP42:
                if (value == null) {
                    unsetStop42();
                } else {
                    setStop42((Integer) value);
                }
                break;

            case STOP43:
                if (value == null) {
                    unsetStop43();
                } else {
                    setStop43((Integer) value);
                }
                break;

            case STOP44:
                if (value == null) {
                    unsetStop44();
                } else {
                    setStop44((Integer) value);
                }
                break;

            case STOP45:
                if (value == null) {
                    unsetStop45();
                } else {
                    setStop45((Integer) value);
                }
                break;

            case STOP46:
                if (value == null) {
                    unsetStop46();
                } else {
                    setStop46((Integer) value);
                }
                break;

            case STOP47:
                if (value == null) {
                    unsetStop47();
                } else {
                    setStop47((Integer) value);
                }
                break;

            case STOP48:
                if (value == null) {
                    unsetStop48();
                } else {
                    setStop48((Integer) value);
                }
                break;

            case STOP49:
                if (value == null) {
                    unsetStop49();
                } else {
                    setStop49((Integer) value);
                }
                break;

            case STOP50:
                if (value == null) {
                    unsetStop50();
                } else {
                    setStop50((Integer) value);
                }
                break;

            case STOP51:
                if (value == null) {
                    unsetStop51();
                } else {
                    setStop51((Integer) value);
                }
                break;

            case STOP52:
                if (value == null) {
                    unsetStop52();
                } else {
                    setStop52((Integer) value);
                }
                break;

            case STOP53:
                if (value == null) {
                    unsetStop53();
                } else {
                    setStop53((Integer) value);
                }
                break;

            case STOP54:
                if (value == null) {
                    unsetStop54();
                } else {
                    setStop54((Integer) value);
                }
                break;

            case STOP55:
                if (value == null) {
                    unsetStop55();
                } else {
                    setStop55((Integer) value);
                }
                break;

            case STOP56:
                if (value == null) {
                    unsetStop56();
                } else {
                    setStop56((Integer) value);
                }
                break;

            case STOP57:
                if (value == null) {
                    unsetStop57();
                } else {
                    setStop57((Integer) value);
                }
                break;

            case STOP58:
                if (value == null) {
                    unsetStop58();
                } else {
                    setStop58((Integer) value);
                }
                break;

            case STOP59:
                if (value == null) {
                    unsetStop59();
                } else {
                    setStop59((Integer) value);
                }
                break;

            case STOP60:
                if (value == null) {
                    unsetStop60();
                } else {
                    setStop60((Integer) value);
                }
                break;

            case STOP61:
                if (value == null) {
                    unsetStop61();
                } else {
                    setStop61((Integer) value);
                }
                break;

            case STOP62:
                if (value == null) {
                    unsetStop62();
                } else {
                    setStop62((Integer) value);
                }
                break;

            case STOP63:
                if (value == null) {
                    unsetStop63();
                } else {
                    setStop63((Integer) value);
                }
                break;

            case STOP64:
                if (value == null) {
                    unsetStop64();
                } else {
                    setStop64((Integer) value);
                }
                break;

            case STOP65:
                if (value == null) {
                    unsetStop65();
                } else {
                    setStop65((Integer) value);
                }
                break;

            case STOP66:
                if (value == null) {
                    unsetStop66();
                } else {
                    setStop66((Integer) value);
                }
                break;

            case STOP67:
                if (value == null) {
                    unsetStop67();
                } else {
                    setStop67((Integer) value);
                }
                break;

            case STOP68:
                if (value == null) {
                    unsetStop68();
                } else {
                    setStop68((Integer) value);
                }
                break;

            case STOP69:
                if (value == null) {
                    unsetStop69();
                } else {
                    setStop69((Integer) value);
                }
                break;

            case STOP70:
                if (value == null) {
                    unsetStop70();
                } else {
                    setStop70((Integer) value);
                }
                break;

            case STOP71:
                if (value == null) {
                    unsetStop71();
                } else {
                    setStop71((Integer) value);
                }
                break;

            case STOP72:
                if (value == null) {
                    unsetStop72();
                } else {
                    setStop72((Integer) value);
                }
                break;

            case STOP73:
                if (value == null) {
                    unsetStop73();
                } else {
                    setStop73((Integer) value);
                }
                break;

            case STOP74:
                if (value == null) {
                    unsetStop74();
                } else {
                    setStop74((Integer) value);
                }
                break;

            case STOP75:
                if (value == null) {
                    unsetStop75();
                } else {
                    setStop75((Integer) value);
                }
                break;

            case STOP76:
                if (value == null) {
                    unsetStop76();
                } else {
                    setStop76((Integer) value);
                }
                break;

            case STOP77:
                if (value == null) {
                    unsetStop77();
                } else {
                    setStop77((Integer) value);
                }
                break;

            case STOP78:
                if (value == null) {
                    unsetStop78();
                } else {
                    setStop78((Integer) value);
                }
                break;

            case STOP79:
                if (value == null) {
                    unsetStop79();
                } else {
                    setStop79((Integer) value);
                }
                break;

            case STOP80:
                if (value == null) {
                    unsetStop80();
                } else {
                    setStop80((Integer) value);
                }
                break;

            case STOP81:
                if (value == null) {
                    unsetStop81();
                } else {
                    setStop81((Integer) value);
                }
                break;

            case STOP82:
                if (value == null) {
                    unsetStop82();
                } else {
                    setStop82((Integer) value);
                }
                break;

            case STOP83:
                if (value == null) {
                    unsetStop83();
                } else {
                    setStop83((Integer) value);
                }
                break;

            case STOP84:
                if (value == null) {
                    unsetStop84();
                } else {
                    setStop84((Integer) value);
                }
                break;

            case STOP85:
                if (value == null) {
                    unsetStop85();
                } else {
                    setStop85((Integer) value);
                }
                break;

            case STOP86:
                if (value == null) {
                    unsetStop86();
                } else {
                    setStop86((Integer) value);
                }
                break;

            case STOP87:
                if (value == null) {
                    unsetStop87();
                } else {
                    setStop87((Integer) value);
                }
                break;

            case STOP88:
                if (value == null) {
                    unsetStop88();
                } else {
                    setStop88((Integer) value);
                }
                break;

            case STOP89:
                if (value == null) {
                    unsetStop89();
                } else {
                    setStop89((Integer) value);
                }
                break;

            case STOP90:
                if (value == null) {
                    unsetStop90();
                } else {
                    setStop90((Integer) value);
                }
                break;

            case STOP91:
                if (value == null) {
                    unsetStop91();
                } else {
                    setStop91((Integer) value);
                }
                break;

            case STOP92:
                if (value == null) {
                    unsetStop92();
                } else {
                    setStop92((Integer) value);
                }
                break;

            case STOP93:
                if (value == null) {
                    unsetStop93();
                } else {
                    setStop93((Integer) value);
                }
                break;

            case STOP94:
                if (value == null) {
                    unsetStop94();
                } else {
                    setStop94((Integer) value);
                }
                break;

            case STOP95:
                if (value == null) {
                    unsetStop95();
                } else {
                    setStop95((Integer) value);
                }
                break;

            case STOP96:
                if (value == null) {
                    unsetStop96();
                } else {
                    setStop96((Integer) value);
                }
                break;

            case STOP97:
                if (value == null) {
                    unsetStop97();
                } else {
                    setStop97((Integer) value);
                }
                break;

            case STOP98:
                if (value == null) {
                    unsetStop98();
                } else {
                    setStop98((Integer) value);
                }
                break;

            case STOP99:
                if (value == null) {
                    unsetStop99();
                } else {
                    setStop99((Integer) value);
                }
                break;

        }
    }

    public Object getFieldValue(_Fields field) {
        switch (field) {
            case TIMESTAMP:
                return getTimestamp();

            case SYM:
                return getSym();

            case PRICE:
                return getPrice();

            case SIZE:
                return getSize();

            case STOP:
                return getStop();

            case COND:
                return getCond();

            case EX:
                return getEx();

            case STOP1:
                return getStop1();

            case STOP2:
                return getStop2();

            case STOP3:
                return getStop3();

            case STOP4:
                return getStop4();

            case STOP5:
                return getStop5();

            case STOP6:
                return getStop6();

            case STOP7:
                return getStop7();

            case STOP8:
                return getStop8();

            case STOP9:
                return getStop9();

            case STOP10:
                return getStop10();

            case STOP11:
                return getStop11();

            case STOP12:
                return getStop12();

            case STOP13:
                return getStop13();

            case STOP14:
                return getStop14();

            case STOP15:
                return getStop15();

            case STOP16:
                return getStop16();

            case STOP17:
                return getStop17();

            case STOP18:
                return getStop18();

            case STOP19:
                return getStop19();

            case STOP20:
                return getStop20();

            case STOP21:
                return getStop21();

            case STOP22:
                return getStop22();

            case STOP23:
                return getStop23();

            case STOP24:
                return getStop24();

            case STOP25:
                return getStop25();

            case STOP35:
                return getStop35();

            case STOP36:
                return getStop36();

            case STOP37:
                return getStop37();

            case STOP38:
                return getStop38();

            case STOP39:
                return getStop39();

            case STOP40:
                return getStop40();

            case STOP41:
                return getStop41();

            case STOP42:
                return getStop42();

            case STOP43:
                return getStop43();

            case STOP44:
                return getStop44();

            case STOP45:
                return getStop45();

            case STOP46:
                return getStop46();

            case STOP47:
                return getStop47();

            case STOP48:
                return getStop48();

            case STOP49:
                return getStop49();

            case STOP50:
                return getStop50();

            case STOP51:
                return getStop51();

            case STOP52:
                return getStop52();

            case STOP53:
                return getStop53();

            case STOP54:
                return getStop54();

            case STOP55:
                return getStop55();

            case STOP56:
                return getStop56();

            case STOP57:
                return getStop57();

            case STOP58:
                return getStop58();

            case STOP59:
                return getStop59();

            case STOP60:
                return getStop60();

            case STOP61:
                return getStop61();

            case STOP62:
                return getStop62();

            case STOP63:
                return getStop63();

            case STOP64:
                return getStop64();

            case STOP65:
                return getStop65();

            case STOP66:
                return getStop66();

            case STOP67:
                return getStop67();

            case STOP68:
                return getStop68();

            case STOP69:
                return getStop69();

            case STOP70:
                return getStop70();

            case STOP71:
                return getStop71();

            case STOP72:
                return getStop72();

            case STOP73:
                return getStop73();

            case STOP74:
                return getStop74();

            case STOP75:
                return getStop75();

            case STOP76:
                return getStop76();

            case STOP77:
                return getStop77();

            case STOP78:
                return getStop78();

            case STOP79:
                return getStop79();

            case STOP80:
                return getStop80();

            case STOP81:
                return getStop81();

            case STOP82:
                return getStop82();

            case STOP83:
                return getStop83();

            case STOP84:
                return getStop84();

            case STOP85:
                return getStop85();

            case STOP86:
                return getStop86();

            case STOP87:
                return getStop87();

            case STOP88:
                return getStop88();

            case STOP89:
                return getStop89();

            case STOP90:
                return getStop90();

            case STOP91:
                return getStop91();

            case STOP92:
                return getStop92();

            case STOP93:
                return getStop93();

            case STOP94:
                return getStop94();

            case STOP95:
                return getStop95();

            case STOP96:
                return getStop96();

            case STOP97:
                return getStop97();

            case STOP98:
                return getStop98();

            case STOP99:
                return getStop99();

        }
        throw new IllegalStateException();
    }

    /**
     * Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise
     */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new IllegalArgumentException();
        }

        switch (field) {
            case TIMESTAMP:
                return isSetTimestamp();
            case SYM:
                return isSetSym();
            case PRICE:
                return isSetPrice();
            case SIZE:
                return isSetSize();
            case STOP:
                return isSetStop();
            case COND:
                return isSetCond();
            case EX:
                return isSetEx();
            case STOP1:
                return isSetStop1();
            case STOP2:
                return isSetStop2();
            case STOP3:
                return isSetStop3();
            case STOP4:
                return isSetStop4();
            case STOP5:
                return isSetStop5();
            case STOP6:
                return isSetStop6();
            case STOP7:
                return isSetStop7();
            case STOP8:
                return isSetStop8();
            case STOP9:
                return isSetStop9();
            case STOP10:
                return isSetStop10();
            case STOP11:
                return isSetStop11();
            case STOP12:
                return isSetStop12();
            case STOP13:
                return isSetStop13();
            case STOP14:
                return isSetStop14();
            case STOP15:
                return isSetStop15();
            case STOP16:
                return isSetStop16();
            case STOP17:
                return isSetStop17();
            case STOP18:
                return isSetStop18();
            case STOP19:
                return isSetStop19();
            case STOP20:
                return isSetStop20();
            case STOP21:
                return isSetStop21();
            case STOP22:
                return isSetStop22();
            case STOP23:
                return isSetStop23();
            case STOP24:
                return isSetStop24();
            case STOP25:
                return isSetStop25();
            case STOP35:
                return isSetStop35();
            case STOP36:
                return isSetStop36();
            case STOP37:
                return isSetStop37();
            case STOP38:
                return isSetStop38();
            case STOP39:
                return isSetStop39();
            case STOP40:
                return isSetStop40();
            case STOP41:
                return isSetStop41();
            case STOP42:
                return isSetStop42();
            case STOP43:
                return isSetStop43();
            case STOP44:
                return isSetStop44();
            case STOP45:
                return isSetStop45();
            case STOP46:
                return isSetStop46();
            case STOP47:
                return isSetStop47();
            case STOP48:
                return isSetStop48();
            case STOP49:
                return isSetStop49();
            case STOP50:
                return isSetStop50();
            case STOP51:
                return isSetStop51();
            case STOP52:
                return isSetStop52();
            case STOP53:
                return isSetStop53();
            case STOP54:
                return isSetStop54();
            case STOP55:
                return isSetStop55();
            case STOP56:
                return isSetStop56();
            case STOP57:
                return isSetStop57();
            case STOP58:
                return isSetStop58();
            case STOP59:
                return isSetStop59();
            case STOP60:
                return isSetStop60();
            case STOP61:
                return isSetStop61();
            case STOP62:
                return isSetStop62();
            case STOP63:
                return isSetStop63();
            case STOP64:
                return isSetStop64();
            case STOP65:
                return isSetStop65();
            case STOP66:
                return isSetStop66();
            case STOP67:
                return isSetStop67();
            case STOP68:
                return isSetStop68();
            case STOP69:
                return isSetStop69();
            case STOP70:
                return isSetStop70();
            case STOP71:
                return isSetStop71();
            case STOP72:
                return isSetStop72();
            case STOP73:
                return isSetStop73();
            case STOP74:
                return isSetStop74();
            case STOP75:
                return isSetStop75();
            case STOP76:
                return isSetStop76();
            case STOP77:
                return isSetStop77();
            case STOP78:
                return isSetStop78();
            case STOP79:
                return isSetStop79();
            case STOP80:
                return isSetStop80();
            case STOP81:
                return isSetStop81();
            case STOP82:
                return isSetStop82();
            case STOP83:
                return isSetStop83();
            case STOP84:
                return isSetStop84();
            case STOP85:
                return isSetStop85();
            case STOP86:
                return isSetStop86();
            case STOP87:
                return isSetStop87();
            case STOP88:
                return isSetStop88();
            case STOP89:
                return isSetStop89();
            case STOP90:
                return isSetStop90();
            case STOP91:
                return isSetStop91();
            case STOP92:
                return isSetStop92();
            case STOP93:
                return isSetStop93();
            case STOP94:
                return isSetStop94();
            case STOP95:
                return isSetStop95();
            case STOP96:
                return isSetStop96();
            case STOP97:
                return isSetStop97();
            case STOP98:
                return isSetStop98();
            case STOP99:
                return isSetStop99();
        }
        throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
        return that != null && that instanceof Trade2 && this.equals((Trade2) that);
    }

    public boolean equals(Trade2 that) {
        if (that == null)
            return false;

        boolean this_present_timestamp = true;
        boolean that_present_timestamp = true;
        if (this_present_timestamp || that_present_timestamp) {
            if (!(this_present_timestamp && that_present_timestamp))
                return false;
            if (this.timestamp != that.timestamp)
                return false;
        }

        boolean this_present_sym = this.isSetSym();
        boolean that_present_sym = that.isSetSym();
        if (this_present_sym || that_present_sym) {
            if (!(this_present_sym && that_present_sym))
                return false;
            if (!this.sym.equals(that.sym))
                return false;
        }

        boolean this_present_price = true;
        boolean that_present_price = true;
        if (this_present_price || that_present_price) {
            if (!(this_present_price && that_present_price))
                return false;
            if (this.price != that.price)
                return false;
        }

        boolean this_present_size = true;
        boolean that_present_size = true;
        if (this_present_size || that_present_size) {
            if (!(this_present_size && that_present_size))
                return false;
            if (this.size != that.size)
                return false;
        }

        boolean this_present_stop = true;
        boolean that_present_stop = true;
        if (this_present_stop || that_present_stop) {
            if (!(this_present_stop && that_present_stop))
                return false;
            if (this.stop != that.stop)
                return false;
        }

        boolean this_present_cond = this.isSetCond();
        boolean that_present_cond = that.isSetCond();
        if (this_present_cond || that_present_cond) {
            if (!(this_present_cond && that_present_cond))
                return false;
            if (!this.cond.equals(that.cond))
                return false;
        }

        boolean this_present_ex = this.isSetEx();
        boolean that_present_ex = that.isSetEx();
        if (this_present_ex || that_present_ex) {
            if (!(this_present_ex && that_present_ex))
                return false;
            if (!this.ex.equals(that.ex))
                return false;
        }

        boolean this_present_stop1 = true;
        boolean that_present_stop1 = true;
        if (this_present_stop1 || that_present_stop1) {
            if (!(this_present_stop1 && that_present_stop1))
                return false;
            if (this.stop1 != that.stop1)
                return false;
        }

        boolean this_present_stop2 = true;
        boolean that_present_stop2 = true;
        if (this_present_stop2 || that_present_stop2) {
            if (!(this_present_stop2 && that_present_stop2))
                return false;
            if (this.stop2 != that.stop2)
                return false;
        }

        boolean this_present_stop3 = true;
        boolean that_present_stop3 = true;
        if (this_present_stop3 || that_present_stop3) {
            if (!(this_present_stop3 && that_present_stop3))
                return false;
            if (this.stop3 != that.stop3)
                return false;
        }

        boolean this_present_stop4 = true;
        boolean that_present_stop4 = true;
        if (this_present_stop4 || that_present_stop4) {
            if (!(this_present_stop4 && that_present_stop4))
                return false;
            if (this.stop4 != that.stop4)
                return false;
        }

        boolean this_present_stop5 = true;
        boolean that_present_stop5 = true;
        if (this_present_stop5 || that_present_stop5) {
            if (!(this_present_stop5 && that_present_stop5))
                return false;
            if (this.stop5 != that.stop5)
                return false;
        }

        boolean this_present_stop6 = true;
        boolean that_present_stop6 = true;
        if (this_present_stop6 || that_present_stop6) {
            if (!(this_present_stop6 && that_present_stop6))
                return false;
            if (this.stop6 != that.stop6)
                return false;
        }

        boolean this_present_stop7 = true;
        boolean that_present_stop7 = true;
        if (this_present_stop7 || that_present_stop7) {
            if (!(this_present_stop7 && that_present_stop7))
                return false;
            if (this.stop7 != that.stop7)
                return false;
        }

        boolean this_present_stop8 = true;
        boolean that_present_stop8 = true;
        if (this_present_stop8 || that_present_stop8) {
            if (!(this_present_stop8 && that_present_stop8))
                return false;
            if (this.stop8 != that.stop8)
                return false;
        }

        boolean this_present_stop9 = true;
        boolean that_present_stop9 = true;
        if (this_present_stop9 || that_present_stop9) {
            if (!(this_present_stop9 && that_present_stop9))
                return false;
            if (this.stop9 != that.stop9)
                return false;
        }

        boolean this_present_stop10 = true;
        boolean that_present_stop10 = true;
        if (this_present_stop10 || that_present_stop10) {
            if (!(this_present_stop10 && that_present_stop10))
                return false;
            if (this.stop10 != that.stop10)
                return false;
        }

        boolean this_present_stop11 = true;
        boolean that_present_stop11 = true;
        if (this_present_stop11 || that_present_stop11) {
            if (!(this_present_stop11 && that_present_stop11))
                return false;
            if (this.stop11 != that.stop11)
                return false;
        }

        boolean this_present_stop12 = true;
        boolean that_present_stop12 = true;
        if (this_present_stop12 || that_present_stop12) {
            if (!(this_present_stop12 && that_present_stop12))
                return false;
            if (this.stop12 != that.stop12)
                return false;
        }

        boolean this_present_stop13 = true;
        boolean that_present_stop13 = true;
        if (this_present_stop13 || that_present_stop13) {
            if (!(this_present_stop13 && that_present_stop13))
                return false;
            if (this.stop13 != that.stop13)
                return false;
        }

        boolean this_present_stop14 = true;
        boolean that_present_stop14 = true;
        if (this_present_stop14 || that_present_stop14) {
            if (!(this_present_stop14 && that_present_stop14))
                return false;
            if (this.stop14 != that.stop14)
                return false;
        }

        boolean this_present_stop15 = true;
        boolean that_present_stop15 = true;
        if (this_present_stop15 || that_present_stop15) {
            if (!(this_present_stop15 && that_present_stop15))
                return false;
            if (this.stop15 != that.stop15)
                return false;
        }

        boolean this_present_stop16 = true;
        boolean that_present_stop16 = true;
        if (this_present_stop16 || that_present_stop16) {
            if (!(this_present_stop16 && that_present_stop16))
                return false;
            if (this.stop16 != that.stop16)
                return false;
        }

        boolean this_present_stop17 = true;
        boolean that_present_stop17 = true;
        if (this_present_stop17 || that_present_stop17) {
            if (!(this_present_stop17 && that_present_stop17))
                return false;
            if (this.stop17 != that.stop17)
                return false;
        }

        boolean this_present_stop18 = true;
        boolean that_present_stop18 = true;
        if (this_present_stop18 || that_present_stop18) {
            if (!(this_present_stop18 && that_present_stop18))
                return false;
            if (this.stop18 != that.stop18)
                return false;
        }

        boolean this_present_stop19 = true;
        boolean that_present_stop19 = true;
        if (this_present_stop19 || that_present_stop19) {
            if (!(this_present_stop19 && that_present_stop19))
                return false;
            if (this.stop19 != that.stop19)
                return false;
        }

        boolean this_present_stop20 = true;
        boolean that_present_stop20 = true;
        if (this_present_stop20 || that_present_stop20) {
            if (!(this_present_stop20 && that_present_stop20))
                return false;
            if (this.stop20 != that.stop20)
                return false;
        }

        boolean this_present_stop21 = true;
        boolean that_present_stop21 = true;
        if (this_present_stop21 || that_present_stop21) {
            if (!(this_present_stop21 && that_present_stop21))
                return false;
            if (this.stop21 != that.stop21)
                return false;
        }

        boolean this_present_stop22 = true;
        boolean that_present_stop22 = true;
        if (this_present_stop22 || that_present_stop22) {
            if (!(this_present_stop22 && that_present_stop22))
                return false;
            if (this.stop22 != that.stop22)
                return false;
        }

        boolean this_present_stop23 = true;
        boolean that_present_stop23 = true;
        if (this_present_stop23 || that_present_stop23) {
            if (!(this_present_stop23 && that_present_stop23))
                return false;
            if (this.stop23 != that.stop23)
                return false;
        }

        boolean this_present_stop24 = true;
        boolean that_present_stop24 = true;
        if (this_present_stop24 || that_present_stop24) {
            if (!(this_present_stop24 && that_present_stop24))
                return false;
            if (this.stop24 != that.stop24)
                return false;
        }

        boolean this_present_stop25 = true;
        boolean that_present_stop25 = true;
        if (this_present_stop25 || that_present_stop25) {
            if (!(this_present_stop25 && that_present_stop25))
                return false;
            if (this.stop25 != that.stop25)
                return false;
        }

        boolean this_present_stop35 = true;
        boolean that_present_stop35 = true;
        if (this_present_stop35 || that_present_stop35) {
            if (!(this_present_stop35 && that_present_stop35))
                return false;
            if (this.stop35 != that.stop35)
                return false;
        }

        boolean this_present_stop36 = true;
        boolean that_present_stop36 = true;
        if (this_present_stop36 || that_present_stop36) {
            if (!(this_present_stop36 && that_present_stop36))
                return false;
            if (this.stop36 != that.stop36)
                return false;
        }

        boolean this_present_stop37 = true;
        boolean that_present_stop37 = true;
        if (this_present_stop37 || that_present_stop37) {
            if (!(this_present_stop37 && that_present_stop37))
                return false;
            if (this.stop37 != that.stop37)
                return false;
        }

        boolean this_present_stop38 = true;
        boolean that_present_stop38 = true;
        if (this_present_stop38 || that_present_stop38) {
            if (!(this_present_stop38 && that_present_stop38))
                return false;
            if (this.stop38 != that.stop38)
                return false;
        }

        boolean this_present_stop39 = true;
        boolean that_present_stop39 = true;
        if (this_present_stop39 || that_present_stop39) {
            if (!(this_present_stop39 && that_present_stop39))
                return false;
            if (this.stop39 != that.stop39)
                return false;
        }

        boolean this_present_stop40 = true;
        boolean that_present_stop40 = true;
        if (this_present_stop40 || that_present_stop40) {
            if (!(this_present_stop40 && that_present_stop40))
                return false;
            if (this.stop40 != that.stop40)
                return false;
        }

        boolean this_present_stop41 = true;
        boolean that_present_stop41 = true;
        if (this_present_stop41 || that_present_stop41) {
            if (!(this_present_stop41 && that_present_stop41))
                return false;
            if (this.stop41 != that.stop41)
                return false;
        }

        boolean this_present_stop42 = true;
        boolean that_present_stop42 = true;
        if (this_present_stop42 || that_present_stop42) {
            if (!(this_present_stop42 && that_present_stop42))
                return false;
            if (this.stop42 != that.stop42)
                return false;
        }

        boolean this_present_stop43 = true;
        boolean that_present_stop43 = true;
        if (this_present_stop43 || that_present_stop43) {
            if (!(this_present_stop43 && that_present_stop43))
                return false;
            if (this.stop43 != that.stop43)
                return false;
        }

        boolean this_present_stop44 = true;
        boolean that_present_stop44 = true;
        if (this_present_stop44 || that_present_stop44) {
            if (!(this_present_stop44 && that_present_stop44))
                return false;
            if (this.stop44 != that.stop44)
                return false;
        }

        boolean this_present_stop45 = true;
        boolean that_present_stop45 = true;
        if (this_present_stop45 || that_present_stop45) {
            if (!(this_present_stop45 && that_present_stop45))
                return false;
            if (this.stop45 != that.stop45)
                return false;
        }

        boolean this_present_stop46 = true;
        boolean that_present_stop46 = true;
        if (this_present_stop46 || that_present_stop46) {
            if (!(this_present_stop46 && that_present_stop46))
                return false;
            if (this.stop46 != that.stop46)
                return false;
        }

        boolean this_present_stop47 = true;
        boolean that_present_stop47 = true;
        if (this_present_stop47 || that_present_stop47) {
            if (!(this_present_stop47 && that_present_stop47))
                return false;
            if (this.stop47 != that.stop47)
                return false;
        }

        boolean this_present_stop48 = true;
        boolean that_present_stop48 = true;
        if (this_present_stop48 || that_present_stop48) {
            if (!(this_present_stop48 && that_present_stop48))
                return false;
            if (this.stop48 != that.stop48)
                return false;
        }

        boolean this_present_stop49 = true;
        boolean that_present_stop49 = true;
        if (this_present_stop49 || that_present_stop49) {
            if (!(this_present_stop49 && that_present_stop49))
                return false;
            if (this.stop49 != that.stop49)
                return false;
        }

        boolean this_present_stop50 = true;
        boolean that_present_stop50 = true;
        if (this_present_stop50 || that_present_stop50) {
            if (!(this_present_stop50 && that_present_stop50))
                return false;
            if (this.stop50 != that.stop50)
                return false;
        }

        boolean this_present_stop51 = true;
        boolean that_present_stop51 = true;
        if (this_present_stop51 || that_present_stop51) {
            if (!(this_present_stop51 && that_present_stop51))
                return false;
            if (this.stop51 != that.stop51)
                return false;
        }

        boolean this_present_stop52 = true;
        boolean that_present_stop52 = true;
        if (this_present_stop52 || that_present_stop52) {
            if (!(this_present_stop52 && that_present_stop52))
                return false;
            if (this.stop52 != that.stop52)
                return false;
        }

        boolean this_present_stop53 = true;
        boolean that_present_stop53 = true;
        if (this_present_stop53 || that_present_stop53) {
            if (!(this_present_stop53 && that_present_stop53))
                return false;
            if (this.stop53 != that.stop53)
                return false;
        }

        boolean this_present_stop54 = true;
        boolean that_present_stop54 = true;
        if (this_present_stop54 || that_present_stop54) {
            if (!(this_present_stop54 && that_present_stop54))
                return false;
            if (this.stop54 != that.stop54)
                return false;
        }

        boolean this_present_stop55 = true;
        boolean that_present_stop55 = true;
        if (this_present_stop55 || that_present_stop55) {
            if (!(this_present_stop55 && that_present_stop55))
                return false;
            if (this.stop55 != that.stop55)
                return false;
        }

        boolean this_present_stop56 = true;
        boolean that_present_stop56 = true;
        if (this_present_stop56 || that_present_stop56) {
            if (!(this_present_stop56 && that_present_stop56))
                return false;
            if (this.stop56 != that.stop56)
                return false;
        }

        boolean this_present_stop57 = true;
        boolean that_present_stop57 = true;
        if (this_present_stop57 || that_present_stop57) {
            if (!(this_present_stop57 && that_present_stop57))
                return false;
            if (this.stop57 != that.stop57)
                return false;
        }

        boolean this_present_stop58 = true;
        boolean that_present_stop58 = true;
        if (this_present_stop58 || that_present_stop58) {
            if (!(this_present_stop58 && that_present_stop58))
                return false;
            if (this.stop58 != that.stop58)
                return false;
        }

        boolean this_present_stop59 = true;
        boolean that_present_stop59 = true;
        if (this_present_stop59 || that_present_stop59) {
            if (!(this_present_stop59 && that_present_stop59))
                return false;
            if (this.stop59 != that.stop59)
                return false;
        }

        boolean this_present_stop60 = true;
        boolean that_present_stop60 = true;
        if (this_present_stop60 || that_present_stop60) {
            if (!(this_present_stop60 && that_present_stop60))
                return false;
            if (this.stop60 != that.stop60)
                return false;
        }

        boolean this_present_stop61 = true;
        boolean that_present_stop61 = true;
        if (this_present_stop61 || that_present_stop61) {
            if (!(this_present_stop61 && that_present_stop61))
                return false;
            if (this.stop61 != that.stop61)
                return false;
        }

        boolean this_present_stop62 = true;
        boolean that_present_stop62 = true;
        if (this_present_stop62 || that_present_stop62) {
            if (!(this_present_stop62 && that_present_stop62))
                return false;
            if (this.stop62 != that.stop62)
                return false;
        }

        boolean this_present_stop63 = true;
        boolean that_present_stop63 = true;
        if (this_present_stop63 || that_present_stop63) {
            if (!(this_present_stop63 && that_present_stop63))
                return false;
            if (this.stop63 != that.stop63)
                return false;
        }

        boolean this_present_stop64 = true;
        boolean that_present_stop64 = true;
        if (this_present_stop64 || that_present_stop64) {
            if (!(this_present_stop64 && that_present_stop64))
                return false;
            if (this.stop64 != that.stop64)
                return false;
        }

        boolean this_present_stop65 = true;
        boolean that_present_stop65 = true;
        if (this_present_stop65 || that_present_stop65) {
            if (!(this_present_stop65 && that_present_stop65))
                return false;
            if (this.stop65 != that.stop65)
                return false;
        }

        boolean this_present_stop66 = true;
        boolean that_present_stop66 = true;
        if (this_present_stop66 || that_present_stop66) {
            if (!(this_present_stop66 && that_present_stop66))
                return false;
            if (this.stop66 != that.stop66)
                return false;
        }

        boolean this_present_stop67 = true;
        boolean that_present_stop67 = true;
        if (this_present_stop67 || that_present_stop67) {
            if (!(this_present_stop67 && that_present_stop67))
                return false;
            if (this.stop67 != that.stop67)
                return false;
        }

        boolean this_present_stop68 = true;
        boolean that_present_stop68 = true;
        if (this_present_stop68 || that_present_stop68) {
            if (!(this_present_stop68 && that_present_stop68))
                return false;
            if (this.stop68 != that.stop68)
                return false;
        }

        boolean this_present_stop69 = true;
        boolean that_present_stop69 = true;
        if (this_present_stop69 || that_present_stop69) {
            if (!(this_present_stop69 && that_present_stop69))
                return false;
            if (this.stop69 != that.stop69)
                return false;
        }

        boolean this_present_stop70 = true;
        boolean that_present_stop70 = true;
        if (this_present_stop70 || that_present_stop70) {
            if (!(this_present_stop70 && that_present_stop70))
                return false;
            if (this.stop70 != that.stop70)
                return false;
        }

        boolean this_present_stop71 = true;
        boolean that_present_stop71 = true;
        if (this_present_stop71 || that_present_stop71) {
            if (!(this_present_stop71 && that_present_stop71))
                return false;
            if (this.stop71 != that.stop71)
                return false;
        }

        boolean this_present_stop72 = true;
        boolean that_present_stop72 = true;
        if (this_present_stop72 || that_present_stop72) {
            if (!(this_present_stop72 && that_present_stop72))
                return false;
            if (this.stop72 != that.stop72)
                return false;
        }

        boolean this_present_stop73 = true;
        boolean that_present_stop73 = true;
        if (this_present_stop73 || that_present_stop73) {
            if (!(this_present_stop73 && that_present_stop73))
                return false;
            if (this.stop73 != that.stop73)
                return false;
        }

        boolean this_present_stop74 = true;
        boolean that_present_stop74 = true;
        if (this_present_stop74 || that_present_stop74) {
            if (!(this_present_stop74 && that_present_stop74))
                return false;
            if (this.stop74 != that.stop74)
                return false;
        }

        boolean this_present_stop75 = true;
        boolean that_present_stop75 = true;
        if (this_present_stop75 || that_present_stop75) {
            if (!(this_present_stop75 && that_present_stop75))
                return false;
            if (this.stop75 != that.stop75)
                return false;
        }

        boolean this_present_stop76 = true;
        boolean that_present_stop76 = true;
        if (this_present_stop76 || that_present_stop76) {
            if (!(this_present_stop76 && that_present_stop76))
                return false;
            if (this.stop76 != that.stop76)
                return false;
        }

        boolean this_present_stop77 = true;
        boolean that_present_stop77 = true;
        if (this_present_stop77 || that_present_stop77) {
            if (!(this_present_stop77 && that_present_stop77))
                return false;
            if (this.stop77 != that.stop77)
                return false;
        }

        boolean this_present_stop78 = true;
        boolean that_present_stop78 = true;
        if (this_present_stop78 || that_present_stop78) {
            if (!(this_present_stop78 && that_present_stop78))
                return false;
            if (this.stop78 != that.stop78)
                return false;
        }

        boolean this_present_stop79 = true;
        boolean that_present_stop79 = true;
        if (this_present_stop79 || that_present_stop79) {
            if (!(this_present_stop79 && that_present_stop79))
                return false;
            if (this.stop79 != that.stop79)
                return false;
        }

        boolean this_present_stop80 = true;
        boolean that_present_stop80 = true;
        if (this_present_stop80 || that_present_stop80) {
            if (!(this_present_stop80 && that_present_stop80))
                return false;
            if (this.stop80 != that.stop80)
                return false;
        }

        boolean this_present_stop81 = true;
        boolean that_present_stop81 = true;
        if (this_present_stop81 || that_present_stop81) {
            if (!(this_present_stop81 && that_present_stop81))
                return false;
            if (this.stop81 != that.stop81)
                return false;
        }

        boolean this_present_stop82 = true;
        boolean that_present_stop82 = true;
        if (this_present_stop82 || that_present_stop82) {
            if (!(this_present_stop82 && that_present_stop82))
                return false;
            if (this.stop82 != that.stop82)
                return false;
        }

        boolean this_present_stop83 = true;
        boolean that_present_stop83 = true;
        if (this_present_stop83 || that_present_stop83) {
            if (!(this_present_stop83 && that_present_stop83))
                return false;
            if (this.stop83 != that.stop83)
                return false;
        }

        boolean this_present_stop84 = true;
        boolean that_present_stop84 = true;
        if (this_present_stop84 || that_present_stop84) {
            if (!(this_present_stop84 && that_present_stop84))
                return false;
            if (this.stop84 != that.stop84)
                return false;
        }

        boolean this_present_stop85 = true;
        boolean that_present_stop85 = true;
        if (this_present_stop85 || that_present_stop85) {
            if (!(this_present_stop85 && that_present_stop85))
                return false;
            if (this.stop85 != that.stop85)
                return false;
        }

        boolean this_present_stop86 = true;
        boolean that_present_stop86 = true;
        if (this_present_stop86 || that_present_stop86) {
            if (!(this_present_stop86 && that_present_stop86))
                return false;
            if (this.stop86 != that.stop86)
                return false;
        }

        boolean this_present_stop87 = true;
        boolean that_present_stop87 = true;
        if (this_present_stop87 || that_present_stop87) {
            if (!(this_present_stop87 && that_present_stop87))
                return false;
            if (this.stop87 != that.stop87)
                return false;
        }

        boolean this_present_stop88 = true;
        boolean that_present_stop88 = true;
        if (this_present_stop88 || that_present_stop88) {
            if (!(this_present_stop88 && that_present_stop88))
                return false;
            if (this.stop88 != that.stop88)
                return false;
        }

        boolean this_present_stop89 = true;
        boolean that_present_stop89 = true;
        if (this_present_stop89 || that_present_stop89) {
            if (!(this_present_stop89 && that_present_stop89))
                return false;
            if (this.stop89 != that.stop89)
                return false;
        }

        boolean this_present_stop90 = true;
        boolean that_present_stop90 = true;
        if (this_present_stop90 || that_present_stop90) {
            if (!(this_present_stop90 && that_present_stop90))
                return false;
            if (this.stop90 != that.stop90)
                return false;
        }

        boolean this_present_stop91 = true;
        boolean that_present_stop91 = true;
        if (this_present_stop91 || that_present_stop91) {
            if (!(this_present_stop91 && that_present_stop91))
                return false;
            if (this.stop91 != that.stop91)
                return false;
        }

        boolean this_present_stop92 = true;
        boolean that_present_stop92 = true;
        if (this_present_stop92 || that_present_stop92) {
            if (!(this_present_stop92 && that_present_stop92))
                return false;
            if (this.stop92 != that.stop92)
                return false;
        }

        boolean this_present_stop93 = true;
        boolean that_present_stop93 = true;
        if (this_present_stop93 || that_present_stop93) {
            if (!(this_present_stop93 && that_present_stop93))
                return false;
            if (this.stop93 != that.stop93)
                return false;
        }

        boolean this_present_stop94 = true;
        boolean that_present_stop94 = true;
        if (this_present_stop94 || that_present_stop94) {
            if (!(this_present_stop94 && that_present_stop94))
                return false;
            if (this.stop94 != that.stop94)
                return false;
        }

        boolean this_present_stop95 = true;
        boolean that_present_stop95 = true;
        if (this_present_stop95 || that_present_stop95) {
            if (!(this_present_stop95 && that_present_stop95))
                return false;
            if (this.stop95 != that.stop95)
                return false;
        }

        boolean this_present_stop96 = true;
        boolean that_present_stop96 = true;
        if (this_present_stop96 || that_present_stop96) {
            if (!(this_present_stop96 && that_present_stop96))
                return false;
            if (this.stop96 != that.stop96)
                return false;
        }

        boolean this_present_stop97 = true;
        boolean that_present_stop97 = true;
        if (this_present_stop97 || that_present_stop97) {
            if (!(this_present_stop97 && that_present_stop97))
                return false;
            if (this.stop97 != that.stop97)
                return false;
        }

        boolean this_present_stop98 = true;
        boolean that_present_stop98 = true;
        if (this_present_stop98 || that_present_stop98) {
            if (!(this_present_stop98 && that_present_stop98))
                return false;
            if (this.stop98 != that.stop98)
                return false;
        }

        boolean this_present_stop99 = true;
        boolean that_present_stop99 = true;
        if (this_present_stop99 || that_present_stop99) {
            if (!(this_present_stop99 && that_present_stop99))
                return false;
            if (this.stop99 != that.stop99)
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        HashCodeBuilder builder = new HashCodeBuilder();

        builder.append(true);
        builder.append(timestamp);

        boolean present_sym = (isSetSym());
        builder.append(present_sym);
        if (present_sym)
            builder.append(sym);

        builder.append(true);
        builder.append(price);

        builder.append(true);
        builder.append(size);

        builder.append(true);
        builder.append(stop);

        boolean present_cond = (isSetCond());
        builder.append(present_cond);
        if (present_cond)
            builder.append(cond);

        boolean present_ex = (isSetEx());
        builder.append(present_ex);
        if (present_ex)
            builder.append(ex);

        builder.append(true);
        builder.append(stop1);

        builder.append(true);
        builder.append(stop2);

        builder.append(true);
        builder.append(stop3);

        builder.append(true);
        builder.append(stop4);

        builder.append(true);
        builder.append(stop5);

        builder.append(true);
        builder.append(stop6);

        builder.append(true);
        builder.append(stop7);

        builder.append(true);
        builder.append(stop8);

        builder.append(true);
        builder.append(stop9);

        builder.append(true);
        builder.append(stop10);

        builder.append(true);
        builder.append(stop11);

        builder.append(true);
        builder.append(stop12);

        builder.append(true);
        builder.append(stop13);

        builder.append(true);
        builder.append(stop14);

        builder.append(true);
        builder.append(stop15);

        builder.append(true);
        builder.append(stop16);

        builder.append(true);
        builder.append(stop17);

        builder.append(true);
        builder.append(stop18);

        builder.append(true);
        builder.append(stop19);

        builder.append(true);
        builder.append(stop20);

        builder.append(true);
        builder.append(stop21);

        builder.append(true);
        builder.append(stop22);

        builder.append(true);
        builder.append(stop23);

        builder.append(true);
        builder.append(stop24);

        builder.append(true);
        builder.append(stop25);

        builder.append(true);
        builder.append(stop35);

        builder.append(true);
        builder.append(stop36);

        builder.append(true);
        builder.append(stop37);

        builder.append(true);
        builder.append(stop38);

        builder.append(true);
        builder.append(stop39);

        builder.append(true);
        builder.append(stop40);

        builder.append(true);
        builder.append(stop41);

        builder.append(true);
        builder.append(stop42);

        builder.append(true);
        builder.append(stop43);

        builder.append(true);
        builder.append(stop44);

        builder.append(true);
        builder.append(stop45);

        builder.append(true);
        builder.append(stop46);

        builder.append(true);
        builder.append(stop47);

        builder.append(true);
        builder.append(stop48);

        builder.append(true);
        builder.append(stop49);

        builder.append(true);
        builder.append(stop50);

        builder.append(true);
        builder.append(stop51);

        builder.append(true);
        builder.append(stop52);

        builder.append(true);
        builder.append(stop53);

        builder.append(true);
        builder.append(stop54);

        builder.append(true);
        builder.append(stop55);

        builder.append(true);
        builder.append(stop56);

        builder.append(true);
        builder.append(stop57);

        builder.append(true);
        builder.append(stop58);

        builder.append(true);
        builder.append(stop59);

        builder.append(true);
        builder.append(stop60);

        builder.append(true);
        builder.append(stop61);

        builder.append(true);
        builder.append(stop62);

        builder.append(true);
        builder.append(stop63);

        builder.append(true);
        builder.append(stop64);

        builder.append(true);
        builder.append(stop65);

        builder.append(true);
        builder.append(stop66);

        builder.append(true);
        builder.append(stop67);

        builder.append(true);
        builder.append(stop68);

        builder.append(true);
        builder.append(stop69);

        builder.append(true);
        builder.append(stop70);

        builder.append(true);
        builder.append(stop71);

        builder.append(true);
        builder.append(stop72);

        builder.append(true);
        builder.append(stop73);

        builder.append(true);
        builder.append(stop74);

        builder.append(true);
        builder.append(stop75);

        builder.append(true);
        builder.append(stop76);

        builder.append(true);
        builder.append(stop77);

        builder.append(true);
        builder.append(stop78);

        builder.append(true);
        builder.append(stop79);

        builder.append(true);
        builder.append(stop80);

        builder.append(true);
        builder.append(stop81);

        builder.append(true);
        builder.append(stop82);

        builder.append(true);
        builder.append(stop83);

        builder.append(true);
        builder.append(stop84);

        builder.append(true);
        builder.append(stop85);

        builder.append(true);
        builder.append(stop86);

        builder.append(true);
        builder.append(stop87);

        builder.append(true);
        builder.append(stop88);

        builder.append(true);
        builder.append(stop89);

        builder.append(true);
        builder.append(stop90);

        builder.append(true);
        builder.append(stop91);

        builder.append(true);
        builder.append(stop92);

        builder.append(true);
        builder.append(stop93);

        builder.append(true);
        builder.append(stop94);

        builder.append(true);
        builder.append(stop95);

        builder.append(true);
        builder.append(stop96);

        builder.append(true);
        builder.append(stop97);

        builder.append(true);
        builder.append(stop98);

        builder.append(true);
        builder.append(stop99);

        return builder.toHashCode();
    }

    public int compareTo(Trade2 other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison;

        lastComparison = Boolean.valueOf(isSetTimestamp()).compareTo(other.isSetTimestamp());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetTimestamp()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timestamp, other.timestamp);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetSym()).compareTo(other.isSetSym());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSym()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sym, other.sym);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetPrice()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetSize()).compareTo(other.isSetSize());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetSize()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.size, other.size);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop()).compareTo(other.isSetStop());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop, other.stop);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetCond()).compareTo(other.isSetCond());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCond()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cond, other.cond);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetEx()).compareTo(other.isSetEx());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetEx()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ex, other.ex);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop1()).compareTo(other.isSetStop1());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop1()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop1, other.stop1);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop2()).compareTo(other.isSetStop2());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop2()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop2, other.stop2);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop3()).compareTo(other.isSetStop3());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop3()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop3, other.stop3);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop4()).compareTo(other.isSetStop4());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop4()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop4, other.stop4);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop5()).compareTo(other.isSetStop5());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop5()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop5, other.stop5);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop6()).compareTo(other.isSetStop6());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop6()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop6, other.stop6);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop7()).compareTo(other.isSetStop7());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop7()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop7, other.stop7);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop8()).compareTo(other.isSetStop8());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop8()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop8, other.stop8);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop9()).compareTo(other.isSetStop9());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop9()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop9, other.stop9);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop10()).compareTo(other.isSetStop10());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop10()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop10, other.stop10);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop11()).compareTo(other.isSetStop11());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop11()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop11, other.stop11);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop12()).compareTo(other.isSetStop12());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop12()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop12, other.stop12);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop13()).compareTo(other.isSetStop13());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop13()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop13, other.stop13);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop14()).compareTo(other.isSetStop14());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop14()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop14, other.stop14);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop15()).compareTo(other.isSetStop15());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop15()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop15, other.stop15);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop16()).compareTo(other.isSetStop16());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop16()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop16, other.stop16);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop17()).compareTo(other.isSetStop17());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop17()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop17, other.stop17);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop18()).compareTo(other.isSetStop18());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop18()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop18, other.stop18);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop19()).compareTo(other.isSetStop19());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop19()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop19, other.stop19);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop20()).compareTo(other.isSetStop20());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop20()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop20, other.stop20);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop21()).compareTo(other.isSetStop21());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop21()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop21, other.stop21);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop22()).compareTo(other.isSetStop22());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop22()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop22, other.stop22);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop23()).compareTo(other.isSetStop23());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop23()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop23, other.stop23);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop24()).compareTo(other.isSetStop24());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop24()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop24, other.stop24);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop25()).compareTo(other.isSetStop25());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop25()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop25, other.stop25);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop35()).compareTo(other.isSetStop35());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop35()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop35, other.stop35);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop36()).compareTo(other.isSetStop36());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop36()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop36, other.stop36);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop37()).compareTo(other.isSetStop37());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop37()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop37, other.stop37);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop38()).compareTo(other.isSetStop38());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop38()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop38, other.stop38);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop39()).compareTo(other.isSetStop39());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop39()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop39, other.stop39);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop40()).compareTo(other.isSetStop40());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop40()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop40, other.stop40);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop41()).compareTo(other.isSetStop41());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop41()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop41, other.stop41);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop42()).compareTo(other.isSetStop42());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop42()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop42, other.stop42);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop43()).compareTo(other.isSetStop43());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop43()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop43, other.stop43);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop44()).compareTo(other.isSetStop44());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop44()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop44, other.stop44);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop45()).compareTo(other.isSetStop45());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop45()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop45, other.stop45);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop46()).compareTo(other.isSetStop46());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop46()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop46, other.stop46);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop47()).compareTo(other.isSetStop47());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop47()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop47, other.stop47);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop48()).compareTo(other.isSetStop48());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop48()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop48, other.stop48);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop49()).compareTo(other.isSetStop49());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop49()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop49, other.stop49);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop50()).compareTo(other.isSetStop50());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop50()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop50, other.stop50);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop51()).compareTo(other.isSetStop51());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop51()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop51, other.stop51);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop52()).compareTo(other.isSetStop52());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop52()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop52, other.stop52);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop53()).compareTo(other.isSetStop53());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop53()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop53, other.stop53);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop54()).compareTo(other.isSetStop54());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop54()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop54, other.stop54);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop55()).compareTo(other.isSetStop55());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop55()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop55, other.stop55);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop56()).compareTo(other.isSetStop56());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop56()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop56, other.stop56);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop57()).compareTo(other.isSetStop57());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop57()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop57, other.stop57);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop58()).compareTo(other.isSetStop58());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop58()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop58, other.stop58);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop59()).compareTo(other.isSetStop59());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop59()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop59, other.stop59);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop60()).compareTo(other.isSetStop60());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop60()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop60, other.stop60);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop61()).compareTo(other.isSetStop61());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop61()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop61, other.stop61);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop62()).compareTo(other.isSetStop62());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop62()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop62, other.stop62);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop63()).compareTo(other.isSetStop63());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop63()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop63, other.stop63);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop64()).compareTo(other.isSetStop64());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop64()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop64, other.stop64);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop65()).compareTo(other.isSetStop65());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop65()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop65, other.stop65);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop66()).compareTo(other.isSetStop66());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop66()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop66, other.stop66);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop67()).compareTo(other.isSetStop67());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop67()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop67, other.stop67);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop68()).compareTo(other.isSetStop68());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop68()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop68, other.stop68);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop69()).compareTo(other.isSetStop69());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop69()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop69, other.stop69);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop70()).compareTo(other.isSetStop70());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop70()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop70, other.stop70);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop71()).compareTo(other.isSetStop71());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop71()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop71, other.stop71);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop72()).compareTo(other.isSetStop72());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop72()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop72, other.stop72);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop73()).compareTo(other.isSetStop73());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop73()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop73, other.stop73);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop74()).compareTo(other.isSetStop74());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop74()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop74, other.stop74);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop75()).compareTo(other.isSetStop75());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop75()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop75, other.stop75);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop76()).compareTo(other.isSetStop76());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop76()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop76, other.stop76);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop77()).compareTo(other.isSetStop77());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop77()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop77, other.stop77);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop78()).compareTo(other.isSetStop78());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop78()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop78, other.stop78);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop79()).compareTo(other.isSetStop79());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop79()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop79, other.stop79);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop80()).compareTo(other.isSetStop80());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop80()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop80, other.stop80);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop81()).compareTo(other.isSetStop81());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop81()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop81, other.stop81);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop82()).compareTo(other.isSetStop82());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop82()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop82, other.stop82);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop83()).compareTo(other.isSetStop83());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop83()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop83, other.stop83);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop84()).compareTo(other.isSetStop84());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop84()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop84, other.stop84);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop85()).compareTo(other.isSetStop85());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop85()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop85, other.stop85);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop86()).compareTo(other.isSetStop86());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop86()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop86, other.stop86);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop87()).compareTo(other.isSetStop87());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop87()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop87, other.stop87);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop88()).compareTo(other.isSetStop88());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop88()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop88, other.stop88);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop89()).compareTo(other.isSetStop89());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop89()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop89, other.stop89);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop90()).compareTo(other.isSetStop90());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop90()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop90, other.stop90);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop91()).compareTo(other.isSetStop91());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop91()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop91, other.stop91);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop92()).compareTo(other.isSetStop92());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop92()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop92, other.stop92);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop93()).compareTo(other.isSetStop93());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop93()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop93, other.stop93);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop94()).compareTo(other.isSetStop94());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop94()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop94, other.stop94);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop95()).compareTo(other.isSetStop95());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop95()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop95, other.stop95);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop96()).compareTo(other.isSetStop96());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop96()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop96, other.stop96);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop97()).compareTo(other.isSetStop97());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop97()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop97, other.stop97);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop98()).compareTo(other.isSetStop98());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop98()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop98, other.stop98);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = Boolean.valueOf(isSetStop99()).compareTo(other.isSetStop99());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetStop99()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stop99, other.stop99);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Trade2(");

        sb.append("timestamp:");
        sb.append(this.timestamp);
        sb.append(", ");
        sb.append("sym:");
        if (this.sym == null) {
            sb.append("null");
        } else {
            sb.append(this.sym);
        }
        sb.append(", ");
        sb.append("price:");
        sb.append(this.price);
        sb.append(", ");
        sb.append("size:");
        sb.append(this.size);
        sb.append(", ");
        sb.append("stop:");
        sb.append(this.stop);
        sb.append(", ");
        sb.append("cond:");
        if (this.cond == null) {
            sb.append("null");
        } else {
            sb.append(this.cond);
        }
        sb.append(", ");
        sb.append("ex:");
        if (this.ex == null) {
            sb.append("null");
        } else {
            sb.append(this.ex);
        }
        sb.append(", ");
        sb.append("stop1:");
        sb.append(this.stop1);
        sb.append(", ");
        sb.append("stop2:");
        sb.append(this.stop2);
        sb.append(", ");
        sb.append("stop3:");
        sb.append(this.stop3);
        sb.append(", ");
        sb.append("stop4:");
        sb.append(this.stop4);
        sb.append(", ");
        sb.append("stop5:");
        sb.append(this.stop5);
        sb.append(", ");
        sb.append("stop6:");
        sb.append(this.stop6);
        sb.append(", ");
        sb.append("stop7:");
        sb.append(this.stop7);
        sb.append(", ");
        sb.append("stop8:");
        sb.append(this.stop8);
        sb.append(", ");
        sb.append("stop9:");
        sb.append(this.stop9);
        sb.append(", ");
        sb.append("stop10:");
        sb.append(this.stop10);
        sb.append(", ");
        sb.append("stop11:");
        sb.append(this.stop11);
        sb.append(", ");
        sb.append("stop12:");
        sb.append(this.stop12);
        sb.append(", ");
        sb.append("stop13:");
        sb.append(this.stop13);
        sb.append(", ");
        sb.append("stop14:");
        sb.append(this.stop14);
        sb.append(", ");
        sb.append("stop15:");
        sb.append(this.stop15);
        sb.append(", ");
        sb.append("stop16:");
        sb.append(this.stop16);
        sb.append(", ");
        sb.append("stop17:");
        sb.append(this.stop17);
        sb.append(", ");
        sb.append("stop18:");
        sb.append(this.stop18);
        sb.append(", ");
        sb.append("stop19:");
        sb.append(this.stop19);
        sb.append(", ");
        sb.append("stop20:");
        sb.append(this.stop20);
        sb.append(", ");
        sb.append("stop21:");
        sb.append(this.stop21);
        sb.append(", ");
        sb.append("stop22:");
        sb.append(this.stop22);
        sb.append(", ");
        sb.append("stop23:");
        sb.append(this.stop23);
        sb.append(", ");
        sb.append("stop24:");
        sb.append(this.stop24);
        sb.append(", ");
        sb.append("stop25:");
        sb.append(this.stop25);
        sb.append(", ");
        sb.append("stop35:");
        sb.append(this.stop35);
        sb.append(", ");
        sb.append("stop36:");
        sb.append(this.stop36);
        sb.append(", ");
        sb.append("stop37:");
        sb.append(this.stop37);
        sb.append(", ");
        sb.append("stop38:");
        sb.append(this.stop38);
        sb.append(", ");
        sb.append("stop39:");
        sb.append(this.stop39);
        sb.append(", ");
        sb.append("stop40:");
        sb.append(this.stop40);
        sb.append(", ");
        sb.append("stop41:");
        sb.append(this.stop41);
        sb.append(", ");
        sb.append("stop42:");
        sb.append(this.stop42);
        sb.append(", ");
        sb.append("stop43:");
        sb.append(this.stop43);
        sb.append(", ");
        sb.append("stop44:");
        sb.append(this.stop44);
        sb.append(", ");
        sb.append("stop45:");
        sb.append(this.stop45);
        sb.append(", ");
        sb.append("stop46:");
        sb.append(this.stop46);
        sb.append(", ");
        sb.append("stop47:");
        sb.append(this.stop47);
        sb.append(", ");
        sb.append("stop48:");
        sb.append(this.stop48);
        sb.append(", ");
        sb.append("stop49:");
        sb.append(this.stop49);
        sb.append(", ");
        sb.append("stop50:");
        sb.append(this.stop50);
        sb.append(", ");
        sb.append("stop51:");
        sb.append(this.stop51);
        sb.append(", ");
        sb.append("stop52:");
        sb.append(this.stop52);
        sb.append(", ");
        sb.append("stop53:");
        sb.append(this.stop53);
        sb.append(", ");
        sb.append("stop54:");
        sb.append(this.stop54);
        sb.append(", ");
        sb.append("stop55:");
        sb.append(this.stop55);
        sb.append(", ");
        sb.append("stop56:");
        sb.append(this.stop56);
        sb.append(", ");
        sb.append("stop57:");
        sb.append(this.stop57);
        sb.append(", ");
        sb.append("stop58:");
        sb.append(this.stop58);
        sb.append(", ");
        sb.append("stop59:");
        sb.append(this.stop59);
        sb.append(", ");
        sb.append("stop60:");
        sb.append(this.stop60);
        sb.append(", ");
        sb.append("stop61:");
        sb.append(this.stop61);
        sb.append(", ");
        sb.append("stop62:");
        sb.append(this.stop62);
        sb.append(", ");
        sb.append("stop63:");
        sb.append(this.stop63);
        sb.append(", ");
        sb.append("stop64:");
        sb.append(this.stop64);
        sb.append(", ");
        sb.append("stop65:");
        sb.append(this.stop65);
        sb.append(", ");
        sb.append("stop66:");
        sb.append(this.stop66);
        sb.append(", ");
        sb.append("stop67:");
        sb.append(this.stop67);
        sb.append(", ");
        sb.append("stop68:");
        sb.append(this.stop68);
        sb.append(", ");
        sb.append("stop69:");
        sb.append(this.stop69);
        sb.append(", ");
        sb.append("stop70:");
        sb.append(this.stop70);
        sb.append(", ");
        sb.append("stop71:");
        sb.append(this.stop71);
        sb.append(", ");
        sb.append("stop72:");
        sb.append(this.stop72);
        sb.append(", ");
        sb.append("stop73:");
        sb.append(this.stop73);
        sb.append(", ");
        sb.append("stop74:");
        sb.append(this.stop74);
        sb.append(", ");
        sb.append("stop75:");
        sb.append(this.stop75);
        sb.append(", ");
        sb.append("stop76:");
        sb.append(this.stop76);
        sb.append(", ");
        sb.append("stop77:");
        sb.append(this.stop77);
        sb.append(", ");
        sb.append("stop78:");
        sb.append(this.stop78);
        sb.append(", ");
        sb.append("stop79:");
        sb.append(this.stop79);
        sb.append(", ");
        sb.append("stop80:");
        sb.append(this.stop80);
        sb.append(", ");
        sb.append("stop81:");
        sb.append(this.stop81);
        sb.append(", ");
        sb.append("stop82:");
        sb.append(this.stop82);
        sb.append(", ");
        sb.append("stop83:");
        sb.append(this.stop83);
        sb.append(", ");
        sb.append("stop84:");
        sb.append(this.stop84);
        sb.append(", ");
        sb.append("stop85:");
        sb.append(this.stop85);
        sb.append(", ");
        sb.append("stop86:");
        sb.append(this.stop86);
        sb.append(", ");
        sb.append("stop87:");
        sb.append(this.stop87);
        sb.append(", ");
        sb.append("stop88:");
        sb.append(this.stop88);
        sb.append(", ");
        sb.append("stop89:");
        sb.append(this.stop89);
        sb.append(", ");
        sb.append("stop90:");
        sb.append(this.stop90);
        sb.append(", ");
        sb.append("stop91:");
        sb.append(this.stop91);
        sb.append(", ");
        sb.append("stop92:");
        sb.append(this.stop92);
        sb.append(", ");
        sb.append("stop93:");
        sb.append(this.stop93);
        sb.append(", ");
        sb.append("stop94:");
        sb.append(this.stop94);
        sb.append(", ");
        sb.append("stop95:");
        sb.append(this.stop95);
        sb.append(", ");
        sb.append("stop96:");
        sb.append(this.stop96);
        sb.append(", ");
        sb.append("stop97:");
        sb.append(this.stop97);
        sb.append(", ");
        sb.append("stop98:");
        sb.append(this.stop98);
        sb.append(", ");
        sb.append("stop99:");
        sb.append(this.stop99);
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // alas, we cannot check 'timestamp' because it's a primitive and you chose the non-beans generator.
        if (sym == null) {
            throw new org.apache.thrift.protocol.TProtocolException("Required field 'sym' was not present! Struct: " + toString());
        }
        // alas, we cannot check 'price' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'size' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop' because it's a primitive and you chose the non-beans generator.
        if (cond == null) {
            throw new org.apache.thrift.protocol.TProtocolException("Required field 'cond' was not present! Struct: " + toString());
        }
        if (ex == null) {
            throw new org.apache.thrift.protocol.TProtocolException("Required field 'ex' was not present! Struct: " + toString());
        }
        // alas, we cannot check 'stop1' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop2' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop3' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop4' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop5' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop6' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop7' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop8' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop9' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop10' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop11' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop12' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop13' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop14' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop15' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop16' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop17' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop18' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop19' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop20' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop21' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop22' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop23' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop24' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop25' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop35' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop36' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop37' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop38' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop39' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop40' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop41' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop42' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop43' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop44' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop45' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop46' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop47' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop48' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop49' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop50' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop51' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop52' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop53' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop54' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop55' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop56' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop57' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop58' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop59' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop60' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop61' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop62' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop63' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop64' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop65' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop66' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop67' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop68' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop69' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop70' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop71' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop72' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop73' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop74' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop75' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop76' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop77' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop78' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop79' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop80' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop81' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop82' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop83' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop84' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop85' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop86' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop87' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop88' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop89' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop90' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop91' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop92' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop93' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop94' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop95' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop96' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop97' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop98' because it's a primitive and you chose the non-beans generator.
        // alas, we cannot check 'stop99' because it's a primitive and you chose the non-beans generator.
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException {
        try {
            // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
            __isset_bit_vector = new BitSet(1);
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    /**
     * The set of fields this struct contains, along with convenience methods for finding and manipulating them.
     */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        TIMESTAMP((short) 1, "timestamp"),
        SYM((short) 2, "sym"),
        PRICE((short) 3, "price"),
        SIZE((short) 4, "size"),
        STOP((short) 5, "stop"),
        COND((short) 6, "cond"),
        EX((short) 7, "ex"),
        STOP1((short) 8, "stop1"),
        STOP2((short) 33, "stop2"),
        STOP3((short) 9, "stop3"),
        STOP4((short) 10, "stop4"),
        STOP5((short) 11, "stop5"),
        STOP6((short) 12, "stop6"),
        STOP7((short) 13, "stop7"),
        STOP8((short) 14, "stop8"),
        STOP9((short) 15, "stop9"),
        STOP10((short) 16, "stop10"),
        STOP11((short) 17, "stop11"),
        STOP12((short) 18, "stop12"),
        STOP13((short) 19, "stop13"),
        STOP14((short) 20, "stop14"),
        STOP15((short) 21, "stop15"),
        STOP16((short) 22, "stop16"),
        STOP17((short) 23, "stop17"),
        STOP18((short) 24, "stop18"),
        STOP19((short) 25, "stop19"),
        STOP20((short) 26, "stop20"),
        STOP21((short) 27, "stop21"),
        STOP22((short) 28, "stop22"),
        STOP23((short) 29, "stop23"),
        STOP24((short) 30, "stop24"),
        STOP25((short) 31, "stop25"),
        STOP35((short) 35, "stop35"),
        STOP36((short) 36, "stop36"),
        STOP37((short) 37, "stop37"),
        STOP38((short) 38, "stop38"),
        STOP39((short) 39, "stop39"),
        STOP40((short) 40, "stop40"),
        STOP41((short) 41, "stop41"),
        STOP42((short) 42, "stop42"),
        STOP43((short) 43, "stop43"),
        STOP44((short) 44, "stop44"),
        STOP45((short) 45, "stop45"),
        STOP46((short) 46, "stop46"),
        STOP47((short) 47, "stop47"),
        STOP48((short) 48, "stop48"),
        STOP49((short) 49, "stop49"),
        STOP50((short) 50, "stop50"),
        STOP51((short) 51, "stop51"),
        STOP52((short) 52, "stop52"),
        STOP53((short) 53, "stop53"),
        STOP54((short) 54, "stop54"),
        STOP55((short) 55, "stop55"),
        STOP56((short) 56, "stop56"),
        STOP57((short) 57, "stop57"),
        STOP58((short) 58, "stop58"),
        STOP59((short) 59, "stop59"),
        STOP60((short) 60, "stop60"),
        STOP61((short) 61, "stop61"),
        STOP62((short) 62, "stop62"),
        STOP63((short) 63, "stop63"),
        STOP64((short) 64, "stop64"),
        STOP65((short) 65, "stop65"),
        STOP66((short) 66, "stop66"),
        STOP67((short) 67, "stop67"),
        STOP68((short) 68, "stop68"),
        STOP69((short) 69, "stop69"),
        STOP70((short) 70, "stop70"),
        STOP71((short) 71, "stop71"),
        STOP72((short) 72, "stop72"),
        STOP73((short) 73, "stop73"),
        STOP74((short) 74, "stop74"),
        STOP75((short) 75, "stop75"),
        STOP76((short) 76, "stop76"),
        STOP77((short) 77, "stop77"),
        STOP78((short) 78, "stop78"),
        STOP79((short) 79, "stop79"),
        STOP80((short) 80, "stop80"),
        STOP81((short) 81, "stop81"),
        STOP82((short) 82, "stop82"),
        STOP83((short) 83, "stop83"),
        STOP84((short) 84, "stop84"),
        STOP85((short) 85, "stop85"),
        STOP86((short) 86, "stop86"),
        STOP87((short) 87, "stop87"),
        STOP88((short) 88, "stop88"),
        STOP89((short) 89, "stop89"),
        STOP90((short) 90, "stop90"),
        STOP91((short) 91, "stop91"),
        STOP92((short) 92, "stop92"),
        STOP93((short) 93, "stop93"),
        STOP94((short) 94, "stop94"),
        STOP95((short) 95, "stop95"),
        STOP96((short) 96, "stop96"),
        STOP97((short) 97, "stop97"),
        STOP98((short) 98, "stop98"),
        STOP99((short) 99, "stop99");

        private static final Map<String, _Fields> byName = new HashMap<>();

        static {
            for (_Fields field : EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        private final short _thriftId;
        private final String _fieldName;

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch (fieldId) {
                case 1: // TIMESTAMP
                    return TIMESTAMP;
                case 2: // SYM
                    return SYM;
                case 3: // PRICE
                    return PRICE;
                case 4: // SIZE
                    return SIZE;
                case 5: // STOP
                    return STOP;
                case 6: // COND
                    return COND;
                case 7: // EX
                    return EX;
                case 8: // STOP1
                    return STOP1;
                case 33: // STOP2
                    return STOP2;
                case 9: // STOP3
                    return STOP3;
                case 10: // STOP4
                    return STOP4;
                case 11: // STOP5
                    return STOP5;
                case 12: // STOP6
                    return STOP6;
                case 13: // STOP7
                    return STOP7;
                case 14: // STOP8
                    return STOP8;
                case 15: // STOP9
                    return STOP9;
                case 16: // STOP10
                    return STOP10;
                case 17: // STOP11
                    return STOP11;
                case 18: // STOP12
                    return STOP12;
                case 19: // STOP13
                    return STOP13;
                case 20: // STOP14
                    return STOP14;
                case 21: // STOP15
                    return STOP15;
                case 22: // STOP16
                    return STOP16;
                case 23: // STOP17
                    return STOP17;
                case 24: // STOP18
                    return STOP18;
                case 25: // STOP19
                    return STOP19;
                case 26: // STOP20
                    return STOP20;
                case 27: // STOP21
                    return STOP21;
                case 28: // STOP22
                    return STOP22;
                case 29: // STOP23
                    return STOP23;
                case 30: // STOP24
                    return STOP24;
                case 31: // STOP25
                    return STOP25;
                case 35: // STOP35
                    return STOP35;
                case 36: // STOP36
                    return STOP36;
                case 37: // STOP37
                    return STOP37;
                case 38: // STOP38
                    return STOP38;
                case 39: // STOP39
                    return STOP39;
                case 40: // STOP40
                    return STOP40;
                case 41: // STOP41
                    return STOP41;
                case 42: // STOP42
                    return STOP42;
                case 43: // STOP43
                    return STOP43;
                case 44: // STOP44
                    return STOP44;
                case 45: // STOP45
                    return STOP45;
                case 46: // STOP46
                    return STOP46;
                case 47: // STOP47
                    return STOP47;
                case 48: // STOP48
                    return STOP48;
                case 49: // STOP49
                    return STOP49;
                case 50: // STOP50
                    return STOP50;
                case 51: // STOP51
                    return STOP51;
                case 52: // STOP52
                    return STOP52;
                case 53: // STOP53
                    return STOP53;
                case 54: // STOP54
                    return STOP54;
                case 55: // STOP55
                    return STOP55;
                case 56: // STOP56
                    return STOP56;
                case 57: // STOP57
                    return STOP57;
                case 58: // STOP58
                    return STOP58;
                case 59: // STOP59
                    return STOP59;
                case 60: // STOP60
                    return STOP60;
                case 61: // STOP61
                    return STOP61;
                case 62: // STOP62
                    return STOP62;
                case 63: // STOP63
                    return STOP63;
                case 64: // STOP64
                    return STOP64;
                case 65: // STOP65
                    return STOP65;
                case 66: // STOP66
                    return STOP66;
                case 67: // STOP67
                    return STOP67;
                case 68: // STOP68
                    return STOP68;
                case 69: // STOP69
                    return STOP69;
                case 70: // STOP70
                    return STOP70;
                case 71: // STOP71
                    return STOP71;
                case 72: // STOP72
                    return STOP72;
                case 73: // STOP73
                    return STOP73;
                case 74: // STOP74
                    return STOP74;
                case 75: // STOP75
                    return STOP75;
                case 76: // STOP76
                    return STOP76;
                case 77: // STOP77
                    return STOP77;
                case 78: // STOP78
                    return STOP78;
                case 79: // STOP79
                    return STOP79;
                case 80: // STOP80
                    return STOP80;
                case 81: // STOP81
                    return STOP81;
                case 82: // STOP82
                    return STOP82;
                case 83: // STOP83
                    return STOP83;
                case 84: // STOP84
                    return STOP84;
                case 85: // STOP85
                    return STOP85;
                case 86: // STOP86
                    return STOP86;
                case 87: // STOP87
                    return STOP87;
                case 88: // STOP88
                    return STOP88;
                case 89: // STOP89
                    return STOP89;
                case 90: // STOP90
                    return STOP90;
                case 91: // STOP91
                    return STOP91;
                case 92: // STOP92
                    return STOP92;
                case 93: // STOP93
                    return STOP93;
                case 94: // STOP94
                    return STOP94;
                case 95: // STOP95
                    return STOP95;
                case 96: // STOP96
                    return STOP96;
                case 97: // STOP97
                    return STOP97;
                case 98: // STOP98
                    return STOP98;
                case 99: // STOP99
                    return STOP99;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        public static _Fields findByName(String name) {
            return byName.get(name);
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public String getFieldName() {
            return _fieldName;
        }

        _Fields(short thriftId, String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }
    }

    private static class Trade2StandardSchemeFactory implements SchemeFactory {
        public Trade2StandardScheme getScheme() {
            return new Trade2StandardScheme();
        }
    }

    private static class Trade2StandardScheme extends StandardScheme<Trade2> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, Trade2 struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true) {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // TIMESTAMP
                        if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                            struct.timestamp = iprot.readI64();
                            struct.setTimestampIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // SYM
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.sym = iprot.readString();
                            struct.setSymIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 3: // PRICE
                        if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
                            struct.price = iprot.readDouble();
                            struct.setPriceIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // SIZE
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.size = iprot.readI32();
                            struct.setSizeIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 5: // STOP
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop = iprot.readI32();
                            struct.setStopIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 6: // COND
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.cond = iprot.readString();
                            struct.setCondIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 7: // EX
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.ex = iprot.readString();
                            struct.setExIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 8: // STOP1
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop1 = iprot.readI32();
                            struct.setStop1IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 33: // STOP2
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop2 = iprot.readI32();
                            struct.setStop2IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 9: // STOP3
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop3 = iprot.readI32();
                            struct.setStop3IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 10: // STOP4
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop4 = iprot.readI32();
                            struct.setStop4IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 11: // STOP5
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop5 = iprot.readI32();
                            struct.setStop5IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 12: // STOP6
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop6 = iprot.readI32();
                            struct.setStop6IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 13: // STOP7
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop7 = iprot.readI32();
                            struct.setStop7IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 14: // STOP8
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop8 = iprot.readI32();
                            struct.setStop8IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 15: // STOP9
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop9 = iprot.readI32();
                            struct.setStop9IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 16: // STOP10
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop10 = iprot.readI32();
                            struct.setStop10IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 17: // STOP11
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop11 = iprot.readI32();
                            struct.setStop11IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 18: // STOP12
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop12 = iprot.readI32();
                            struct.setStop12IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 19: // STOP13
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop13 = iprot.readI32();
                            struct.setStop13IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 20: // STOP14
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop14 = iprot.readI32();
                            struct.setStop14IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 21: // STOP15
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop15 = iprot.readI32();
                            struct.setStop15IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 22: // STOP16
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop16 = iprot.readI32();
                            struct.setStop16IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 23: // STOP17
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop17 = iprot.readI32();
                            struct.setStop17IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 24: // STOP18
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop18 = iprot.readI32();
                            struct.setStop18IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 25: // STOP19
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop19 = iprot.readI32();
                            struct.setStop19IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 26: // STOP20
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop20 = iprot.readI32();
                            struct.setStop20IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 27: // STOP21
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop21 = iprot.readI32();
                            struct.setStop21IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 28: // STOP22
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop22 = iprot.readI32();
                            struct.setStop22IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 29: // STOP23
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop23 = iprot.readI32();
                            struct.setStop23IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 30: // STOP24
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop24 = iprot.readI32();
                            struct.setStop24IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 31: // STOP25
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop25 = iprot.readI32();
                            struct.setStop25IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 35: // STOP35
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop35 = iprot.readI32();
                            struct.setStop35IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 36: // STOP36
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop36 = iprot.readI32();
                            struct.setStop36IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 37: // STOP37
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop37 = iprot.readI32();
                            struct.setStop37IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 38: // STOP38
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop38 = iprot.readI32();
                            struct.setStop38IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 39: // STOP39
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop39 = iprot.readI32();
                            struct.setStop39IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 40: // STOP40
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop40 = iprot.readI32();
                            struct.setStop40IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 41: // STOP41
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop41 = iprot.readI32();
                            struct.setStop41IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 42: // STOP42
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop42 = iprot.readI32();
                            struct.setStop42IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 43: // STOP43
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop43 = iprot.readI32();
                            struct.setStop43IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 44: // STOP44
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop44 = iprot.readI32();
                            struct.setStop44IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 45: // STOP45
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop45 = iprot.readI32();
                            struct.setStop45IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 46: // STOP46
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop46 = iprot.readI32();
                            struct.setStop46IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 47: // STOP47
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop47 = iprot.readI32();
                            struct.setStop47IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 48: // STOP48
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop48 = iprot.readI32();
                            struct.setStop48IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 49: // STOP49
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop49 = iprot.readI32();
                            struct.setStop49IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 50: // STOP50
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop50 = iprot.readI32();
                            struct.setStop50IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 51: // STOP51
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop51 = iprot.readI32();
                            struct.setStop51IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 52: // STOP52
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop52 = iprot.readI32();
                            struct.setStop52IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 53: // STOP53
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop53 = iprot.readI32();
                            struct.setStop53IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 54: // STOP54
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop54 = iprot.readI32();
                            struct.setStop54IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 55: // STOP55
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop55 = iprot.readI32();
                            struct.setStop55IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 56: // STOP56
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop56 = iprot.readI32();
                            struct.setStop56IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 57: // STOP57
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop57 = iprot.readI32();
                            struct.setStop57IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 58: // STOP58
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop58 = iprot.readI32();
                            struct.setStop58IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 59: // STOP59
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop59 = iprot.readI32();
                            struct.setStop59IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 60: // STOP60
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop60 = iprot.readI32();
                            struct.setStop60IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 61: // STOP61
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop61 = iprot.readI32();
                            struct.setStop61IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 62: // STOP62
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop62 = iprot.readI32();
                            struct.setStop62IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 63: // STOP63
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop63 = iprot.readI32();
                            struct.setStop63IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 64: // STOP64
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop64 = iprot.readI32();
                            struct.setStop64IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 65: // STOP65
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop65 = iprot.readI32();
                            struct.setStop65IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 66: // STOP66
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop66 = iprot.readI32();
                            struct.setStop66IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 67: // STOP67
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop67 = iprot.readI32();
                            struct.setStop67IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 68: // STOP68
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop68 = iprot.readI32();
                            struct.setStop68IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 69: // STOP69
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop69 = iprot.readI32();
                            struct.setStop69IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 70: // STOP70
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop70 = iprot.readI32();
                            struct.setStop70IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 71: // STOP71
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop71 = iprot.readI32();
                            struct.setStop71IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 72: // STOP72
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop72 = iprot.readI32();
                            struct.setStop72IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 73: // STOP73
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop73 = iprot.readI32();
                            struct.setStop73IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 74: // STOP74
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop74 = iprot.readI32();
                            struct.setStop74IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 75: // STOP75
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop75 = iprot.readI32();
                            struct.setStop75IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 76: // STOP76
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop76 = iprot.readI32();
                            struct.setStop76IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 77: // STOP77
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop77 = iprot.readI32();
                            struct.setStop77IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 78: // STOP78
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop78 = iprot.readI32();
                            struct.setStop78IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 79: // STOP79
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop79 = iprot.readI32();
                            struct.setStop79IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 80: // STOP80
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop80 = iprot.readI32();
                            struct.setStop80IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 81: // STOP81
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop81 = iprot.readI32();
                            struct.setStop81IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 82: // STOP82
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop82 = iprot.readI32();
                            struct.setStop82IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 83: // STOP83
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop83 = iprot.readI32();
                            struct.setStop83IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 84: // STOP84
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop84 = iprot.readI32();
                            struct.setStop84IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 85: // STOP85
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop85 = iprot.readI32();
                            struct.setStop85IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 86: // STOP86
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop86 = iprot.readI32();
                            struct.setStop86IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 87: // STOP87
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop87 = iprot.readI32();
                            struct.setStop87IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 88: // STOP88
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop88 = iprot.readI32();
                            struct.setStop88IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 89: // STOP89
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop89 = iprot.readI32();
                            struct.setStop89IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 90: // STOP90
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop90 = iprot.readI32();
                            struct.setStop90IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 91: // STOP91
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop91 = iprot.readI32();
                            struct.setStop91IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 92: // STOP92
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop92 = iprot.readI32();
                            struct.setStop92IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 93: // STOP93
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop93 = iprot.readI32();
                            struct.setStop93IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 94: // STOP94
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop94 = iprot.readI32();
                            struct.setStop94IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 95: // STOP95
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop95 = iprot.readI32();
                            struct.setStop95IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 96: // STOP96
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop96 = iprot.readI32();
                            struct.setStop96IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 97: // STOP97
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop97 = iprot.readI32();
                            struct.setStop97IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 98: // STOP98
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop98 = iprot.readI32();
                            struct.setStop98IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 99: // STOP99
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.stop99 = iprot.readI32();
                            struct.setStop99IsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            if (!struct.isSetTimestamp()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'timestamp' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetPrice()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'price' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetSize()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'size' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop1()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop1' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop2()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop2' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop3()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop3' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop4()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop4' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop5()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop5' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop6()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop6' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop7()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop7' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop8()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop8' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop9()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop9' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop10()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop10' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop11()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop11' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop12()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop12' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop13()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop13' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop14()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop14' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop15()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop15' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop16()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop16' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop17()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop17' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop18()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop18' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop19()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop19' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop20()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop20' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop21()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop21' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop22()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop22' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop23()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop23' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop24()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop24' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop25()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop25' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop35()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop35' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop36()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop36' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop37()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop37' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop38()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop38' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop39()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop39' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop40()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop40' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop41()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop41' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop42()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop42' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop43()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop43' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop44()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop44' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop45()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop45' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop46()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop46' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop47()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop47' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop48()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop48' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop49()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop49' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop50()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop50' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop51()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop51' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop52()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop52' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop53()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop53' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop54()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop54' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop55()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop55' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop56()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop56' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop57()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop57' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop58()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop58' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop59()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop59' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop60()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop60' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop61()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop61' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop62()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop62' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop63()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop63' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop64()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop64' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop65()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop65' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop66()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop66' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop67()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop67' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop68()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop68' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop69()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop69' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop70()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop70' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop71()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop71' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop72()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop72' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop73()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop73' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop74()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop74' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop75()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop75' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop76()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop76' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop77()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop77' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop78()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop78' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop79()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop79' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop80()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop80' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop81()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop81' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop82()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop82' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop83()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop83' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop84()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop84' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop85()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop85' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop86()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop86' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop87()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop87' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop88()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop88' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop89()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop89' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop90()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop90' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop91()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop91' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop92()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop92' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop93()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop93' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop94()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop94' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop95()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop95' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop96()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop96' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop97()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop97' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop98()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop98' was not found in serialized data! Struct: " + toString());
            }
            if (!struct.isSetStop99()) {
                throw new org.apache.thrift.protocol.TProtocolException("Required field 'stop99' was not found in serialized data! Struct: " + toString());
            }
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, Trade2 struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            oprot.writeFieldBegin(TIMESTAMP_FIELD_DESC);
            oprot.writeI64(struct.timestamp);
            oprot.writeFieldEnd();
            if (struct.sym != null) {
                oprot.writeFieldBegin(SYM_FIELD_DESC);
                oprot.writeString(struct.sym);
                oprot.writeFieldEnd();
            }
            oprot.writeFieldBegin(PRICE_FIELD_DESC);
            oprot.writeDouble(struct.price);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(SIZE_FIELD_DESC);
            oprot.writeI32(struct.size);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP_FIELD_DESC);
            oprot.writeI32(struct.stop);
            oprot.writeFieldEnd();
            if (struct.cond != null) {
                oprot.writeFieldBegin(COND_FIELD_DESC);
                oprot.writeString(struct.cond);
                oprot.writeFieldEnd();
            }
            if (struct.ex != null) {
                oprot.writeFieldBegin(EX_FIELD_DESC);
                oprot.writeString(struct.ex);
                oprot.writeFieldEnd();
            }
            oprot.writeFieldBegin(STOP1_FIELD_DESC);
            oprot.writeI32(struct.stop1);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP3_FIELD_DESC);
            oprot.writeI32(struct.stop3);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP4_FIELD_DESC);
            oprot.writeI32(struct.stop4);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP5_FIELD_DESC);
            oprot.writeI32(struct.stop5);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP6_FIELD_DESC);
            oprot.writeI32(struct.stop6);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP7_FIELD_DESC);
            oprot.writeI32(struct.stop7);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP8_FIELD_DESC);
            oprot.writeI32(struct.stop8);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP9_FIELD_DESC);
            oprot.writeI32(struct.stop9);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP10_FIELD_DESC);
            oprot.writeI32(struct.stop10);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP11_FIELD_DESC);
            oprot.writeI32(struct.stop11);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP12_FIELD_DESC);
            oprot.writeI32(struct.stop12);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP13_FIELD_DESC);
            oprot.writeI32(struct.stop13);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP14_FIELD_DESC);
            oprot.writeI32(struct.stop14);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP15_FIELD_DESC);
            oprot.writeI32(struct.stop15);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP16_FIELD_DESC);
            oprot.writeI32(struct.stop16);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP17_FIELD_DESC);
            oprot.writeI32(struct.stop17);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP18_FIELD_DESC);
            oprot.writeI32(struct.stop18);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP19_FIELD_DESC);
            oprot.writeI32(struct.stop19);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP20_FIELD_DESC);
            oprot.writeI32(struct.stop20);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP21_FIELD_DESC);
            oprot.writeI32(struct.stop21);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP22_FIELD_DESC);
            oprot.writeI32(struct.stop22);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP23_FIELD_DESC);
            oprot.writeI32(struct.stop23);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP24_FIELD_DESC);
            oprot.writeI32(struct.stop24);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP25_FIELD_DESC);
            oprot.writeI32(struct.stop25);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP2_FIELD_DESC);
            oprot.writeI32(struct.stop2);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP35_FIELD_DESC);
            oprot.writeI32(struct.stop35);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP36_FIELD_DESC);
            oprot.writeI32(struct.stop36);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP37_FIELD_DESC);
            oprot.writeI32(struct.stop37);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP38_FIELD_DESC);
            oprot.writeI32(struct.stop38);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP39_FIELD_DESC);
            oprot.writeI32(struct.stop39);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP40_FIELD_DESC);
            oprot.writeI32(struct.stop40);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP41_FIELD_DESC);
            oprot.writeI32(struct.stop41);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP42_FIELD_DESC);
            oprot.writeI32(struct.stop42);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP43_FIELD_DESC);
            oprot.writeI32(struct.stop43);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP44_FIELD_DESC);
            oprot.writeI32(struct.stop44);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP45_FIELD_DESC);
            oprot.writeI32(struct.stop45);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP46_FIELD_DESC);
            oprot.writeI32(struct.stop46);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP47_FIELD_DESC);
            oprot.writeI32(struct.stop47);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP48_FIELD_DESC);
            oprot.writeI32(struct.stop48);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP49_FIELD_DESC);
            oprot.writeI32(struct.stop49);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP50_FIELD_DESC);
            oprot.writeI32(struct.stop50);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP51_FIELD_DESC);
            oprot.writeI32(struct.stop51);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP52_FIELD_DESC);
            oprot.writeI32(struct.stop52);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP53_FIELD_DESC);
            oprot.writeI32(struct.stop53);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP54_FIELD_DESC);
            oprot.writeI32(struct.stop54);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP55_FIELD_DESC);
            oprot.writeI32(struct.stop55);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP56_FIELD_DESC);
            oprot.writeI32(struct.stop56);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP57_FIELD_DESC);
            oprot.writeI32(struct.stop57);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP58_FIELD_DESC);
            oprot.writeI32(struct.stop58);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP59_FIELD_DESC);
            oprot.writeI32(struct.stop59);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP60_FIELD_DESC);
            oprot.writeI32(struct.stop60);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP61_FIELD_DESC);
            oprot.writeI32(struct.stop61);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP62_FIELD_DESC);
            oprot.writeI32(struct.stop62);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP63_FIELD_DESC);
            oprot.writeI32(struct.stop63);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP64_FIELD_DESC);
            oprot.writeI32(struct.stop64);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP65_FIELD_DESC);
            oprot.writeI32(struct.stop65);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP66_FIELD_DESC);
            oprot.writeI32(struct.stop66);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP67_FIELD_DESC);
            oprot.writeI32(struct.stop67);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP68_FIELD_DESC);
            oprot.writeI32(struct.stop68);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP69_FIELD_DESC);
            oprot.writeI32(struct.stop69);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP70_FIELD_DESC);
            oprot.writeI32(struct.stop70);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP71_FIELD_DESC);
            oprot.writeI32(struct.stop71);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP72_FIELD_DESC);
            oprot.writeI32(struct.stop72);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP73_FIELD_DESC);
            oprot.writeI32(struct.stop73);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP74_FIELD_DESC);
            oprot.writeI32(struct.stop74);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP75_FIELD_DESC);
            oprot.writeI32(struct.stop75);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP76_FIELD_DESC);
            oprot.writeI32(struct.stop76);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP77_FIELD_DESC);
            oprot.writeI32(struct.stop77);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP78_FIELD_DESC);
            oprot.writeI32(struct.stop78);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP79_FIELD_DESC);
            oprot.writeI32(struct.stop79);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP80_FIELD_DESC);
            oprot.writeI32(struct.stop80);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP81_FIELD_DESC);
            oprot.writeI32(struct.stop81);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP82_FIELD_DESC);
            oprot.writeI32(struct.stop82);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP83_FIELD_DESC);
            oprot.writeI32(struct.stop83);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP84_FIELD_DESC);
            oprot.writeI32(struct.stop84);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP85_FIELD_DESC);
            oprot.writeI32(struct.stop85);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP86_FIELD_DESC);
            oprot.writeI32(struct.stop86);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP87_FIELD_DESC);
            oprot.writeI32(struct.stop87);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP88_FIELD_DESC);
            oprot.writeI32(struct.stop88);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP89_FIELD_DESC);
            oprot.writeI32(struct.stop89);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP90_FIELD_DESC);
            oprot.writeI32(struct.stop90);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP91_FIELD_DESC);
            oprot.writeI32(struct.stop91);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP92_FIELD_DESC);
            oprot.writeI32(struct.stop92);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP93_FIELD_DESC);
            oprot.writeI32(struct.stop93);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP94_FIELD_DESC);
            oprot.writeI32(struct.stop94);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP95_FIELD_DESC);
            oprot.writeI32(struct.stop95);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP96_FIELD_DESC);
            oprot.writeI32(struct.stop96);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP97_FIELD_DESC);
            oprot.writeI32(struct.stop97);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP98_FIELD_DESC);
            oprot.writeI32(struct.stop98);
            oprot.writeFieldEnd();
            oprot.writeFieldBegin(STOP99_FIELD_DESC);
            oprot.writeI32(struct.stop99);
            oprot.writeFieldEnd();
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class Trade2TupleSchemeFactory implements SchemeFactory {
        public Trade2TupleScheme getScheme() {
            return new Trade2TupleScheme();
        }
    }

    private static class Trade2TupleScheme extends TupleScheme<Trade2> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, Trade2 struct) throws org.apache.thrift.TException {
            TTupleProtocol oprot = (TTupleProtocol) prot;
            oprot.writeI64(struct.timestamp);
            oprot.writeString(struct.sym);
            oprot.writeDouble(struct.price);
            oprot.writeI32(struct.size);
            oprot.writeI32(struct.stop);
            oprot.writeString(struct.cond);
            oprot.writeString(struct.ex);
            oprot.writeI32(struct.stop1);
            oprot.writeI32(struct.stop2);
            oprot.writeI32(struct.stop3);
            oprot.writeI32(struct.stop4);
            oprot.writeI32(struct.stop5);
            oprot.writeI32(struct.stop6);
            oprot.writeI32(struct.stop7);
            oprot.writeI32(struct.stop8);
            oprot.writeI32(struct.stop9);
            oprot.writeI32(struct.stop10);
            oprot.writeI32(struct.stop11);
            oprot.writeI32(struct.stop12);
            oprot.writeI32(struct.stop13);
            oprot.writeI32(struct.stop14);
            oprot.writeI32(struct.stop15);
            oprot.writeI32(struct.stop16);
            oprot.writeI32(struct.stop17);
            oprot.writeI32(struct.stop18);
            oprot.writeI32(struct.stop19);
            oprot.writeI32(struct.stop20);
            oprot.writeI32(struct.stop21);
            oprot.writeI32(struct.stop22);
            oprot.writeI32(struct.stop23);
            oprot.writeI32(struct.stop24);
            oprot.writeI32(struct.stop25);
            oprot.writeI32(struct.stop35);
            oprot.writeI32(struct.stop36);
            oprot.writeI32(struct.stop37);
            oprot.writeI32(struct.stop38);
            oprot.writeI32(struct.stop39);
            oprot.writeI32(struct.stop40);
            oprot.writeI32(struct.stop41);
            oprot.writeI32(struct.stop42);
            oprot.writeI32(struct.stop43);
            oprot.writeI32(struct.stop44);
            oprot.writeI32(struct.stop45);
            oprot.writeI32(struct.stop46);
            oprot.writeI32(struct.stop47);
            oprot.writeI32(struct.stop48);
            oprot.writeI32(struct.stop49);
            oprot.writeI32(struct.stop50);
            oprot.writeI32(struct.stop51);
            oprot.writeI32(struct.stop52);
            oprot.writeI32(struct.stop53);
            oprot.writeI32(struct.stop54);
            oprot.writeI32(struct.stop55);
            oprot.writeI32(struct.stop56);
            oprot.writeI32(struct.stop57);
            oprot.writeI32(struct.stop58);
            oprot.writeI32(struct.stop59);
            oprot.writeI32(struct.stop60);
            oprot.writeI32(struct.stop61);
            oprot.writeI32(struct.stop62);
            oprot.writeI32(struct.stop63);
            oprot.writeI32(struct.stop64);
            oprot.writeI32(struct.stop65);
            oprot.writeI32(struct.stop66);
            oprot.writeI32(struct.stop67);
            oprot.writeI32(struct.stop68);
            oprot.writeI32(struct.stop69);
            oprot.writeI32(struct.stop70);
            oprot.writeI32(struct.stop71);
            oprot.writeI32(struct.stop72);
            oprot.writeI32(struct.stop73);
            oprot.writeI32(struct.stop74);
            oprot.writeI32(struct.stop75);
            oprot.writeI32(struct.stop76);
            oprot.writeI32(struct.stop77);
            oprot.writeI32(struct.stop78);
            oprot.writeI32(struct.stop79);
            oprot.writeI32(struct.stop80);
            oprot.writeI32(struct.stop81);
            oprot.writeI32(struct.stop82);
            oprot.writeI32(struct.stop83);
            oprot.writeI32(struct.stop84);
            oprot.writeI32(struct.stop85);
            oprot.writeI32(struct.stop86);
            oprot.writeI32(struct.stop87);
            oprot.writeI32(struct.stop88);
            oprot.writeI32(struct.stop89);
            oprot.writeI32(struct.stop90);
            oprot.writeI32(struct.stop91);
            oprot.writeI32(struct.stop92);
            oprot.writeI32(struct.stop93);
            oprot.writeI32(struct.stop94);
            oprot.writeI32(struct.stop95);
            oprot.writeI32(struct.stop96);
            oprot.writeI32(struct.stop97);
            oprot.writeI32(struct.stop98);
            oprot.writeI32(struct.stop99);
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, Trade2 struct) throws org.apache.thrift.TException {
            TTupleProtocol iprot = (TTupleProtocol) prot;
            struct.timestamp = iprot.readI64();
            struct.setTimestampIsSet(true);
            struct.sym = iprot.readString();
            struct.setSymIsSet(true);
            struct.price = iprot.readDouble();
            struct.setPriceIsSet(true);
            struct.size = iprot.readI32();
            struct.setSizeIsSet(true);
            struct.stop = iprot.readI32();
            struct.setStopIsSet(true);
            struct.cond = iprot.readString();
            struct.setCondIsSet(true);
            struct.ex = iprot.readString();
            struct.setExIsSet(true);
            struct.stop1 = iprot.readI32();
            struct.setStop1IsSet(true);
            struct.stop2 = iprot.readI32();
            struct.setStop2IsSet(true);
            struct.stop3 = iprot.readI32();
            struct.setStop3IsSet(true);
            struct.stop4 = iprot.readI32();
            struct.setStop4IsSet(true);
            struct.stop5 = iprot.readI32();
            struct.setStop5IsSet(true);
            struct.stop6 = iprot.readI32();
            struct.setStop6IsSet(true);
            struct.stop7 = iprot.readI32();
            struct.setStop7IsSet(true);
            struct.stop8 = iprot.readI32();
            struct.setStop8IsSet(true);
            struct.stop9 = iprot.readI32();
            struct.setStop9IsSet(true);
            struct.stop10 = iprot.readI32();
            struct.setStop10IsSet(true);
            struct.stop11 = iprot.readI32();
            struct.setStop11IsSet(true);
            struct.stop12 = iprot.readI32();
            struct.setStop12IsSet(true);
            struct.stop13 = iprot.readI32();
            struct.setStop13IsSet(true);
            struct.stop14 = iprot.readI32();
            struct.setStop14IsSet(true);
            struct.stop15 = iprot.readI32();
            struct.setStop15IsSet(true);
            struct.stop16 = iprot.readI32();
            struct.setStop16IsSet(true);
            struct.stop17 = iprot.readI32();
            struct.setStop17IsSet(true);
            struct.stop18 = iprot.readI32();
            struct.setStop18IsSet(true);
            struct.stop19 = iprot.readI32();
            struct.setStop19IsSet(true);
            struct.stop20 = iprot.readI32();
            struct.setStop20IsSet(true);
            struct.stop21 = iprot.readI32();
            struct.setStop21IsSet(true);
            struct.stop22 = iprot.readI32();
            struct.setStop22IsSet(true);
            struct.stop23 = iprot.readI32();
            struct.setStop23IsSet(true);
            struct.stop24 = iprot.readI32();
            struct.setStop24IsSet(true);
            struct.stop25 = iprot.readI32();
            struct.setStop25IsSet(true);
            struct.stop35 = iprot.readI32();
            struct.setStop35IsSet(true);
            struct.stop36 = iprot.readI32();
            struct.setStop36IsSet(true);
            struct.stop37 = iprot.readI32();
            struct.setStop37IsSet(true);
            struct.stop38 = iprot.readI32();
            struct.setStop38IsSet(true);
            struct.stop39 = iprot.readI32();
            struct.setStop39IsSet(true);
            struct.stop40 = iprot.readI32();
            struct.setStop40IsSet(true);
            struct.stop41 = iprot.readI32();
            struct.setStop41IsSet(true);
            struct.stop42 = iprot.readI32();
            struct.setStop42IsSet(true);
            struct.stop43 = iprot.readI32();
            struct.setStop43IsSet(true);
            struct.stop44 = iprot.readI32();
            struct.setStop44IsSet(true);
            struct.stop45 = iprot.readI32();
            struct.setStop45IsSet(true);
            struct.stop46 = iprot.readI32();
            struct.setStop46IsSet(true);
            struct.stop47 = iprot.readI32();
            struct.setStop47IsSet(true);
            struct.stop48 = iprot.readI32();
            struct.setStop48IsSet(true);
            struct.stop49 = iprot.readI32();
            struct.setStop49IsSet(true);
            struct.stop50 = iprot.readI32();
            struct.setStop50IsSet(true);
            struct.stop51 = iprot.readI32();
            struct.setStop51IsSet(true);
            struct.stop52 = iprot.readI32();
            struct.setStop52IsSet(true);
            struct.stop53 = iprot.readI32();
            struct.setStop53IsSet(true);
            struct.stop54 = iprot.readI32();
            struct.setStop54IsSet(true);
            struct.stop55 = iprot.readI32();
            struct.setStop55IsSet(true);
            struct.stop56 = iprot.readI32();
            struct.setStop56IsSet(true);
            struct.stop57 = iprot.readI32();
            struct.setStop57IsSet(true);
            struct.stop58 = iprot.readI32();
            struct.setStop58IsSet(true);
            struct.stop59 = iprot.readI32();
            struct.setStop59IsSet(true);
            struct.stop60 = iprot.readI32();
            struct.setStop60IsSet(true);
            struct.stop61 = iprot.readI32();
            struct.setStop61IsSet(true);
            struct.stop62 = iprot.readI32();
            struct.setStop62IsSet(true);
            struct.stop63 = iprot.readI32();
            struct.setStop63IsSet(true);
            struct.stop64 = iprot.readI32();
            struct.setStop64IsSet(true);
            struct.stop65 = iprot.readI32();
            struct.setStop65IsSet(true);
            struct.stop66 = iprot.readI32();
            struct.setStop66IsSet(true);
            struct.stop67 = iprot.readI32();
            struct.setStop67IsSet(true);
            struct.stop68 = iprot.readI32();
            struct.setStop68IsSet(true);
            struct.stop69 = iprot.readI32();
            struct.setStop69IsSet(true);
            struct.stop70 = iprot.readI32();
            struct.setStop70IsSet(true);
            struct.stop71 = iprot.readI32();
            struct.setStop71IsSet(true);
            struct.stop72 = iprot.readI32();
            struct.setStop72IsSet(true);
            struct.stop73 = iprot.readI32();
            struct.setStop73IsSet(true);
            struct.stop74 = iprot.readI32();
            struct.setStop74IsSet(true);
            struct.stop75 = iprot.readI32();
            struct.setStop75IsSet(true);
            struct.stop76 = iprot.readI32();
            struct.setStop76IsSet(true);
            struct.stop77 = iprot.readI32();
            struct.setStop77IsSet(true);
            struct.stop78 = iprot.readI32();
            struct.setStop78IsSet(true);
            struct.stop79 = iprot.readI32();
            struct.setStop79IsSet(true);
            struct.stop80 = iprot.readI32();
            struct.setStop80IsSet(true);
            struct.stop81 = iprot.readI32();
            struct.setStop81IsSet(true);
            struct.stop82 = iprot.readI32();
            struct.setStop82IsSet(true);
            struct.stop83 = iprot.readI32();
            struct.setStop83IsSet(true);
            struct.stop84 = iprot.readI32();
            struct.setStop84IsSet(true);
            struct.stop85 = iprot.readI32();
            struct.setStop85IsSet(true);
            struct.stop86 = iprot.readI32();
            struct.setStop86IsSet(true);
            struct.stop87 = iprot.readI32();
            struct.setStop87IsSet(true);
            struct.stop88 = iprot.readI32();
            struct.setStop88IsSet(true);
            struct.stop89 = iprot.readI32();
            struct.setStop89IsSet(true);
            struct.stop90 = iprot.readI32();
            struct.setStop90IsSet(true);
            struct.stop91 = iprot.readI32();
            struct.setStop91IsSet(true);
            struct.stop92 = iprot.readI32();
            struct.setStop92IsSet(true);
            struct.stop93 = iprot.readI32();
            struct.setStop93IsSet(true);
            struct.stop94 = iprot.readI32();
            struct.setStop94IsSet(true);
            struct.stop95 = iprot.readI32();
            struct.setStop95IsSet(true);
            struct.stop96 = iprot.readI32();
            struct.setStop96IsSet(true);
            struct.stop97 = iprot.readI32();
            struct.setStop97IsSet(true);
            struct.stop98 = iprot.readI32();
            struct.setStop98IsSet(true);
            struct.stop99 = iprot.readI32();
            struct.setStop99IsSet(true);
        }
    }

}

